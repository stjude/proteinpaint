#!/bin/sh

set -e

STAGEDFILES=$(git diff --cached --name-only | sed 's| |\\ |g')
# doing per GDC requirements
pre-commit run --files "$STAGEDFILES"

# select changed/added file extensions where prettier format is preferred,
# for other file extensions nests, prettier rules might not be preferred,
# for example it nests html tags too much
FILES=$(git diff --cached --name-only --diff-filter=ACM "*.js" "*.ts" "*.mjs" "*.cjs" | sed 's| |\\ |g')

if [[ "$FILES" != "" ]]; then
	echo "Prettifying $FILES ..."

	# Prettify all selected files
	# configuration are under the `"prettier": {}` object in package.json
	echo "$FILES" | xargs npx prettier --no-semi --use-tabs --write

	# Add back the modified/prettified files to staging
	echo "$FILES" | xargs git add

	# lint against team preferences
	echo "Linting ..."
	echo "$FILES" | xargs npx eslint

	# check for invalid use of .Inner reference
	echo "checking for forbidden .Inner. usage"
	set +e
	PRODINNER=$(echo "$FILES" | xargs grep -lr --exclude=\*.spec\* --exclude=\*dist\/ --exclude=\*test\/ --exclude=\*.md "\.Inner\.")
	set -e
	if [[ "$PRODINNER" != "" ]]; then
		echo "\n--- !!! forbidden use of .Inner. found in: !!! ---"
		echo "$PRODINNER\n"
		exit 1
	fi
fi

exit 0
