{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.149","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.149/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.149/build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","extra_traits","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/libc-312353241fec8f1d/build-script-build"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.149","linked_libs":[],"linked_paths":[],"cfgs":["freebsd11","libc_priv_mod_use","libc_union","libc_const_size_of","libc_align","libc_int128","libc_core_cvoid","libc_packedN","libc_cfg_target_vendor","libc_non_exhaustive","libc_long_array","libc_ptr_addr_of","libc_underscore_const_names","libc_const_extern_fn"],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/libc-8b5da35e7e7d2b5f/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#autocfg@1.1.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.1.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"autocfg","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.1.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libautocfg-7d807caeccd426d7.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libautocfg-7d807caeccd426d7.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.69","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.69/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.69/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","proc-macro"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/proc-macro2-719b0c45ce28709a/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.12","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-ident-1.0.12/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"unicode_ident","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-ident-1.0.12/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libunicode_ident-758c05c733bc1bf3.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libunicode_ident-758c05c733bc1bf3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cfg-if-1.0.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"cfg_if","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cfg-if-1.0.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcfg_if-a8600644ec0b391e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libm@0.2.8","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libm-0.2.8/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libm-0.2.8/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/libm-fdc148fb8ca6951f/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cfg-if-1.0.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"cfg_if","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cfg-if-1.0.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcfg_if-23b0c254620884f6.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcfg_if-23b0c254620884f6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde@1.0.189","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.189/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.189/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","derive","serde_derive","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/serde-fd8f4b553c7f12ca/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/scopeguard-1.2.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scopeguard","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/scopeguard-1.2.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libscopeguard-9d39bda69931b078.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#core-foundation-sys@0.8.4","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/core-foundation-sys-0.8.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"core_foundation_sys","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/core-foundation-sys-0.8.4/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcore_foundation_sys-2d3ce16f63c7d2d5.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#version_check@0.9.4","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/version_check-0.9.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"version_check","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/version_check-0.9.4/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libversion_check-3c33a23c0c143b1c.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libversion_check-3c33a23c0c143b1c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bitflags@1.3.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitflags-1.3.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bitflags","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitflags-1.3.2/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libbitflags-777ffcef7305eab1.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.69","linked_libs":[],"linked_paths":[],"cfgs":["wrap_proc_macro"],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/proc-macro2-5424c51fc22df4d0/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.149","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.149/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libc","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.149/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","extra_traits","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liblibc-ed88cab45996313c.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#libm@0.2.8","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/libm-14de31cccb695c07/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.17","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.17/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.17/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","i128","libm","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/num-traits-f9ce85af3f4f7591/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.149","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.149/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libc","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.149/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","extra_traits","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liblibc-9d17604d03bffb09.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liblibc-9d17604d03bffb09.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde@1.0.189","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/serde-f8a256305270783e/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-integer@0.1.45","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-integer-0.1.45/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-integer-0.1.45/build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","i128","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/num-integer-6313ee2440206aec/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#smallvec@1.11.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-1.11.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"smallvec","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-1.11.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libsmallvec-34710738fffa19f6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#memchr@2.6.4","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.6.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"memchr","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.6.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libmemchr-1b1600aafa32cc29.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libmemchr-1b1600aafa32cc29.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["clone-impls","default","derive","full","parsing","printing","proc-macro","quote"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/syn-b9ad7a84e5c94266/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.10","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lock_api-0.4.10/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lock_api-0.4.10/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["atomic_usize","default"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/lock_api-3eafe58424760a40/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustix@0.38.19","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustix-0.38.19/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustix-0.38.19/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","fs","std","use-libc-auxv"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/rustix-a793a8f5ddd3a4ba/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.69","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.69/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"proc_macro2","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.69/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","proc-macro"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libproc_macro2-bdf7bdca7ee2368a.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libproc_macro2-bdf7bdca7ee2368a.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.17","linked_libs":[],"linked_paths":[],"cfgs":["has_to_int_unchecked","has_reverse_bits","has_leading_trailing_ones","has_div_euclid","has_copysign","has_is_subnormal","has_int_to_from_bytes","has_float_to_from_bytes"],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/num-traits-367141ea8e4ce93f/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libm@0.2.8","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libm-0.2.8/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libm","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libm-0.2.8/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liblibm-ac015bc67df639c6.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-integer@0.1.45","linked_libs":[],"linked_paths":[],"cfgs":["has_i128"],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/num-integer-558c33cf2e88aea2/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109","linked_libs":[],"linked_paths":[],"cfgs":["syn_disable_nightly_tests"],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/syn-4d23e8edd3ffe60a/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#memchr@2.6.4","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.6.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"memchr","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.6.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libmemchr-eca4e6c631794286.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.10","linked_libs":[],"linked_paths":[],"cfgs":["has_const_fn_trait_bound"],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/lock_api-1ce93f644426368d/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustix@0.38.19","linked_libs":[],"linked_paths":[],"cfgs":["static_assertions","libc","apple","bsd"],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/rustix-2659804250d60bee/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#once_cell@1.18.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.18.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"once_cell","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.18.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","race","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libonce_cell-769ec3ff9f88970b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#aho-corasick@1.1.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aho-corasick-1.1.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"aho_corasick","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aho-corasick-1.1.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","perf-literal","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libaho_corasick-d13ef85464bdaad9.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libaho_corasick-d13ef85464bdaad9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#core-foundation@0.9.3","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/core-foundation-0.9.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"core_foundation","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/core-foundation-0.9.3/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcore_foundation-eae8135abde3df19.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.9","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.9/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.9/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/parking_lot_core-1bc69816af3ea62f/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#quote@1.0.33","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.33/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"quote","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.33/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","proc-macro"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libquote-7c4280eadad7b8dd.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libquote-7c4280eadad7b8dd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.17","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.17/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_traits","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.17/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","i128","libm","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libnum_traits-732860457a2b7dff.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.10","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lock_api-0.4.10/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"lock_api","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lock_api-0.4.10/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["atomic_usize","default"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liblock_api-7a088a82c429b258.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#regex-syntax@0.8.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-syntax-0.8.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex_syntax","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-syntax-0.8.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libregex_syntax-3779a7d17f839f0c.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libregex_syntax-3779a7d17f839f0c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.13","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pin-project-lite-0.2.13/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"pin_project_lite","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pin-project-lite-0.2.13/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libpin_project_lite-3bb54c2afebe689a.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.9","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/parking_lot_core-e58ccd3a05b0d8ca/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.9","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itoa-1.0.9/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"itoa","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itoa-1.0.9/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libitoa-dbc3ac8eb74db85b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#lazy_static@1.4.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lazy_static-1.4.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"lazy_static","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lazy_static-1.4.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liblazy_static-a4c118a18c702a22.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.28","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-core-0.3.28/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-core-0.3.28/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/futures-core-b704bc1c5dc42700/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-bigint@0.4.4","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-bigint-0.4.4/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-bigint-0.4.4/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/num-bigint-3e5fd7e2d5967d68/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bytemuck@1.14.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bytemuck-1.14.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bytemuck","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bytemuck-1.14.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["extern_crate_alloc"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libbytemuck-c5aeb777bceb7696.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bytes@1.5.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bytes-1.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bytes","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bytes-1.5.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libbytes-29f5984792a5784e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#syn@2.0.38","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.38/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"syn","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.38/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["clone-impls","default","derive","extra-traits","full","parsing","printing","proc-macro","quote","visit","visit-mut"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libsyn-86021e7dcf28cc2e.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libsyn-86021e7dcf28cc2e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-integer@0.1.45","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-integer-0.1.45/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_integer","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-integer-0.1.45/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","i128","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libnum_integer-078cc772961640e8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"syn","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["clone-impls","default","derive","full","parsing","printing","proc-macro","quote"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libsyn-849ca009a950fb54.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libsyn-849ca009a950fb54.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#regex-automata@0.4.3","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex_automata","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","dfa-onepass","hybrid","meta","nfa-backtrack","nfa-pikevm","nfa-thompson","perf-inline","perf-literal","perf-literal-multisubstring","perf-literal-substring","std","syntax","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment","unicode-word-boundary"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libregex_automata-5a266aa3eb9a7be2.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libregex_automata-5a266aa3eb9a7be2.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.28","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/futures-core-6920f124aa767e48/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.9","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.9/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"parking_lot_core","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.9/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libparking_lot_core-435b652afb9d4d9a.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-bigint@0.4.4","linked_libs":[],"linked_paths":[],"cfgs":["u64_digit","has_try_from"],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/num-bigint-3723d1de64824eab/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num_cpus@1.16.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num_cpus-1.16.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_cpus","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num_cpus-1.16.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libnum_cpus-9eaa6c7d551b9636.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-rational@0.4.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-rational-0.4.1/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-rational-0.4.1/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["num-bigint","num-bigint-std","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/num-rational-59fcaf186e0cf0b3/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/slab-0.4.9/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/slab-0.4.9/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/slab-4786b055e916af44/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.28","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-sink-0.3.28/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"futures_sink","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-sink-0.3.28/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libfutures_sink-ae4172f045581d75.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bitflags@2.4.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitflags-2.4.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bitflags","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitflags-2.4.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libbitflags-46d4d56bf6b9897c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.189","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_derive-1.0.189/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"serde_derive","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_derive-1.0.189/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libserde_derive-7b0a042197e15be3.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#regex@1.10.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-1.10.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-1.10.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","perf","perf-backtrack","perf-cache","perf-dfa","perf-inline","perf-literal","perf-onepass","std","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libregex-531d96f0759aff41.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libregex-531d96f0759aff41.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.28","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-core-0.3.28/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"futures_core","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-core-0.3.28/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libfutures_core-f336e1dd65736b6a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.3","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot-0.12.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"parking_lot","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot-0.12.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libparking_lot-d13af227b8521114.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#futures-task@0.3.28","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-task-0.3.28/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-task-0.3.28/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/futures-task-1e2dbd9cb342a3f2/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#simd-adler32@0.3.7","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/simd-adler32-0.3.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"simd_adler32","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/simd-adler32-0.3.7/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["const-generics","default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libsimd_adler32-6ab021201dedf35e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#futures-channel@0.3.28","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-channel-0.3.28/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-channel-0.3.28/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","futures-sink","sink","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/futures-channel-9ba867a892369a98/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crc32fast@1.3.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crc32fast-1.3.2/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crc32fast-1.3.2/build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/crc32fast-cebf9a027037e141/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-bigint@0.4.4","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-bigint-0.4.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_bigint","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-bigint-0.4.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libnum_bigint-1233d4f0efdfa7a3.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/slab-12ee7a396cfc2ccb/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-rational@0.4.1","linked_libs":[],"linked_paths":[],"cfgs":["has_int_exp_fmt"],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/num-rational-35ccf8e81d685ae0/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#matrixmultiply@0.3.8","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/matrixmultiply-0.3.8/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/matrixmultiply-0.3.8/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["cgemm","default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/matrixmultiply-defd5c11f24aec84/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde@1.0.189","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.189/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"serde","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.189/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","derive","serde_derive","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libserde-6f4e66c4e1807b74.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#futures-channel@0.3.28","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/futures-channel-a63e6f1646651dbf/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#futures-task@0.3.28","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/futures-task-937b4ccd5fbe9a58/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#crc32fast@1.3.2","linked_libs":[],"linked_paths":[],"cfgs":["crc32fast_stdarchx86"],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/crc32fast-d926e3cdb5dd90f7/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.16","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.16/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.16/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/crossbeam-utils-ac7f8333dabc83fb/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#paste@1.0.14","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/paste-1.0.14/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/paste-1.0.14/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/paste-151de8a0793aa19d/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#semver@1.0.20","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/semver-1.0.20/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/semver-1.0.20/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/semver-9c646670ef062561/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.28","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-util-0.3.28/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-util-0.3.28/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","async-await","async-await-macro","channel","futures-channel","futures-io","futures-macro","futures-sink","io","memchr","sink","slab","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/futures-util-7add40ad28ec3739/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#adler@1.0.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler-1.0.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"adler","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler-1.0.2/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libadler-4d9571960d0cc6b7.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#matrixmultiply@0.3.8","linked_libs":[],"linked_paths":[],"cfgs":["has_aarch64_simd"],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/matrixmultiply-74ea1ccebf172370/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-rational@0.4.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-rational-0.4.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_rational","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-rational-0.4.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["num-bigint","num-bigint-std","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libnum_rational-a88935e77a7fe7d2.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/slab-0.4.9/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"slab","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/slab-0.4.9/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libslab-4cb293fca510e8eb.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-complex@0.4.4","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-complex-0.4.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_complex","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-complex-0.4.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["serde","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libnum_complex-b217f6429f3eb4af.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crc32fast@1.3.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crc32fast-1.3.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crc32fast","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crc32fast-1.3.2/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcrc32fast-3cbc9ba9623483ff.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#futures-task@0.3.28","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-task-0.3.28/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"futures_task","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-task-0.3.28/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libfutures_task-f5ba45f57ce89272.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.16","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/crossbeam-utils-a9be5988afbf4e71/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#miniz_oxide@0.7.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.7.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"miniz_oxide","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.7.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","simd","simd-adler32","with-alloc"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libminiz_oxide-1e798527100844ac.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#futures-channel@0.3.28","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-channel-0.3.28/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"futures_channel","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-channel-0.3.28/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","futures-sink","sink","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libfutures_channel-7f75a7c7ad882f90.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.28","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/futures-util-7b4974e60baf811d/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#paste@1.0.14","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/paste-8f9cc8b54657fd2c/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#semver@1.0.20","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/semver-946475089ae04d8f/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#futures-macro@0.3.28","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-macro-0.3.28/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"futures_macro","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-macro-0.3.28/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libfutures_macro-c6bb952213942cb3.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#errno@0.3.5","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"errno","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.5/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liberrno-f7da73bf42ec6b58.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#cc@1.0.83","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.0.83/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"cc","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.0.83/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcc-ee997b33e78c4c1c.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcc-ee997b33e78c4c1c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.10","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.10/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"getrandom","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.10/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libgetrandom-ed5a6ed085ef38fc.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libgetrandom-ed5a6ed085ef38fc.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.11","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.11/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.11/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/ahash-a455f7f8dbb87565/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#indexmap@1.9.3","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-1.9.3/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-1.9.3/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/indexmap-c202ace8b9f10659/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#futures-io@0.3.28","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-io-0.3.28/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"futures_io","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-io-0.3.28/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libfutures_io-e26e1565e9cb2d06.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fnv-1.0.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"fnv","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fnv-1.0.7/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libfnv-0d1052fe0cb57973.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#glob@0.3.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/glob-0.3.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"glob","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/glob-0.3.1/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libglob-6eb50c8e16784ea1.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libglob-6eb50c8e16784ea1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"byteorder","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","i128","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libbyteorder-2821f14a8f32c74c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pin-utils@0.1.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pin-utils-0.1.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"pin_utils","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pin-utils-0.1.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libpin_utils-baa5bf4ef516d86a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rawpointer@0.2.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rawpointer-0.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rawpointer","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rawpointer-0.2.1/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librawpointer-6f1a69e4dd626a03.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#paste@1.0.14","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/paste-1.0.14/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"paste","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/paste-1.0.14/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libpaste-24eae88613b44f1c.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.16","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.16/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crossbeam_utils","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.16/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcrossbeam_utils-50f3db9847c48d94.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#flate2@1.0.28","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/flate2-1.0.28/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"flate2","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/flate2-1.0.28/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["any_impl","default","miniz_oxide","rust_backend"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libflate2-0d35a9ba31a827c8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.28","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-util-0.3.28/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"futures_util","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-util-0.3.28/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","async-await","async-await-macro","channel","futures-channel","futures-io","futures-macro","futures-sink","io","memchr","sink","slab","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libfutures_util-4d3829056169f0b6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#clang-sys@1.6.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clang-sys-1.6.1/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clang-sys-1.6.1/build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["clang_3_5","clang_3_6","clang_3_7","clang_3_8","clang_3_9","clang_4_0","clang_5_0","clang_6_0","libloading","runtime"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/clang-sys-c30f24969667cd26/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#matrixmultiply@0.3.8","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/matrixmultiply-0.3.8/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"matrixmultiply","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/matrixmultiply-0.3.8/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["cgemm","default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libmatrixmultiply-a42daf68fbeb19f2.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_core-0.6.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand_core","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_core-0.6.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","getrandom","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librand_core-ce5ad53dcd129477.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librand_core-ce5ad53dcd129477.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#indexmap@1.9.3","linked_libs":[],"linked_paths":[],"cfgs":["has_std"],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/indexmap-a8d2594b85c56eca/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#http@0.2.9","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-0.2.9/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"http","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-0.2.9/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libhttp-dbfb8f8e46666b51.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.11","linked_libs":[],"linked_paths":[],"cfgs":["feature=\"folded_multiply\""],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/ahash-be6052a299b203a2/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustix@0.38.19","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustix-0.38.19/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rustix","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustix-0.38.19/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","fs","std","use-libc-auxv"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librustix-a854f2d86b9659fd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#semver@1.0.20","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/semver-1.0.20/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"semver","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/semver-1.0.20/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libsemver-307f90dc5bdc9d1d.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libsemver-307f90dc5bdc9d1d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tokio-macros@2.1.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-macros-2.1.0/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"tokio_macros","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-macros-2.1.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libtokio_macros-0a92c4597dccfda2.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#safe_arch@0.7.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/safe_arch-0.7.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"safe_arch","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/safe_arch-0.7.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bytemuck","default"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libsafe_arch-69b9c18e54822b7b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#security-framework-sys@2.9.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/security-framework-sys-2.9.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"security_framework_sys","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/security-framework-sys-2.9.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["OSX_10_9","default"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libsecurity_framework_sys-2bb000e85c2204dd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#socket2@0.5.5","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/socket2-0.5.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"socket2","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/socket2-0.5.5/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["all"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libsocket2-4cf7f2da1dd6e56c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#signal-hook-registry@1.4.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/signal-hook-registry-1.4.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"signal_hook_registry","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/signal-hook-registry-1.4.1/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libsignal_hook_registry-03234f6339aa96f7.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.10","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.10/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"getrandom","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.10/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libgetrandom-7ac678c0a73c70ee.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#mio@0.8.9","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mio-0.8.9/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"mio","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mio-0.8.9/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["net","os-ext","os-poll"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libmio-6187d1a57cf3e028.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#memoffset@0.9.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.9.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.9.0/build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/memoffset-9db2a70e4b631537/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libloading@0.8.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libloading-0.8.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libloading","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libloading-0.8.1/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liblibloading-f9d60b9993167cbc.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liblibloading-f9d60b9993167cbc.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro-error-attr@1.0.4","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro-error-attr-1.0.4/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro-error-attr-1.0.4/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/proc-macro-error-attr-a1a637bdf1f88f40/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ppv-lite86@0.2.17","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ppv-lite86-0.2.17/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ppv_lite86","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ppv-lite86-0.2.17/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["simd","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libppv_lite86-6551a4fdd8ad6301.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libppv_lite86-6551a4fdd8ad6301.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tinyvec_macros@0.1.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tinyvec_macros-0.1.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tinyvec_macros","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tinyvec_macros-0.1.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libtinyvec_macros-6cbf850f8d63d10e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#native-tls@0.2.11","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/native-tls-0.2.11/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/native-tls-0.2.11/build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/native-tls-6069f2ac6a7677ba/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.7.32","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerocopy-0.7.32/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"zerocopy","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerocopy-0.7.32/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["simd"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libzerocopy-e9b2a8bc516f8cf6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.12.3","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.12.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"hashbrown","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.12.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["raw"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libhashbrown-2afb45403516f087.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#log@0.4.20","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.20/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"log","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.20/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liblog-ecf2b19088bb105f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#fastrand@2.0.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fastrand-2.0.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"fastrand","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fastrand-2.0.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libfastrand-e21a0ed9458d026a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#prettyplease@0.2.15","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/prettyplease-0.2.15/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/prettyplease-0.2.15/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/prettyplease-0df54e13d2ad37e5/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.11","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.11/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ahash","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.11/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libahash-0c2e2ada0124d4b9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#indexmap@1.9.3","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-1.9.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"indexmap","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-1.9.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libindexmap-f78a4782d3ad5111.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_core-0.6.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand_core","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_core-0.6.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","getrandom","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librand_core-f67f8968d08eb722.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tinyvec@1.6.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tinyvec-1.6.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tinyvec","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tinyvec-1.6.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","tinyvec_macros"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libtinyvec-6ea5141be5c61724.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#native-tls@0.2.11","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/native-tls-6d86ca2b7a87fc4a/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#memoffset@0.9.0","linked_libs":[],"linked_paths":[],"cfgs":["tuple_ty","allow_clippy","maybe_uninit","doctests","raw_ref_macros","stable_const"],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/memoffset-96f85010f0e72be5/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro-error-attr@1.0.4","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/proc-macro-error-attr-f554f603ced30429/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#hdf5-metno-sys@0.9.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hdf5-metno-sys-0.9.1/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hdf5-metno-sys-0.9.1/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/hdf5-metno-sys-6dbb0cb73e43804c/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand_chacha@0.3.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_chacha-0.3.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand_chacha","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_chacha-0.3.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librand_chacha-6422d8a2e803ba31.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librand_chacha-6422d8a2e803ba31.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tempfile@3.8.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tempfile-3.8.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tempfile","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tempfile-3.8.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libtempfile-55daafc8e452c8f1.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#prettyplease@0.2.15","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/prettyplease-2d465cad9447c942/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tokio@1.33.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.33.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tokio","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.33.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bytes","default","fs","full","io-std","io-util","libc","macros","mio","net","num_cpus","parking_lot","process","rt","rt-multi-thread","signal","signal-hook-registry","socket2","sync","time","tokio-macros","windows-sys"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libtokio-07c0bcafda3da941.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#wide@0.7.12","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/wide-0.7.12/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"wide","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/wide-0.7.12/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libwide-e65d5c56f8a0c267.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustc_version@0.4.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc_version-0.4.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rustc_version","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc_version-0.4.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librustc_version-0202020748dff1a9.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librustc_version-0202020748dff1a9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#security-framework@2.9.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/security-framework-2.9.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"security_framework","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/security-framework-2.9.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["OSX_10_9","default"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libsecurity_framework-0104a191770d74e8.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#clang-sys@1.6.1","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/clang-sys-401ed41cc3fe0948/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#approx@0.5.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/approx-0.5.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"approx","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/approx-0.5.1/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libapprox-601ad7913f01057e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tracing-core@0.1.32","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-core-0.1.32/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tracing_core","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-core-0.1.32/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["once_cell","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libtracing_core-006fde84b776757d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#errno@0.3.5","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"errno","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.5/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liberrno-e03dc15121747945.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liberrno-e03dc15121747945.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro-error@1.0.4","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro-error-1.0.4/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro-error-1.0.4/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","syn","syn-error"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/proc-macro-error-aec622be7a6fa9c6/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-epoch@0.9.15","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.15/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.15/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/crossbeam-epoch-a00ccc0c048e1578/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bitflags@2.4.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitflags-2.4.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bitflags","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitflags-2.4.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libbitflags-9b40021f080ea312.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libbitflags-9b40021f080ea312.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#typenum@1.17.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/typenum-1.17.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-main","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/typenum-1.17.0/build/main.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/typenum-80a17c79e8d90caf/build-script-main"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#minimal-lexical@0.2.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/minimal-lexical-0.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"minimal_lexical","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/minimal-lexical-0.2.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libminimal_lexical-d56464f804eaaf80.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libminimal_lexical-d56464f804eaaf80.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#allocator-api2@0.2.18","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/allocator-api2-0.2.18/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"allocator_api2","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/allocator-api2-0.2.18/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liballocator_api2-75c7b7ba0fbb3679.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#siphasher@0.3.11","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/siphasher-0.3.11/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"siphasher","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/siphasher-0.3.11/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libsiphasher-e6dc8dbc1ab99203.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libsiphasher-e6dc8dbc1ab99203.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#percent-encoding@2.3.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/percent-encoding-2.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"percent_encoding","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/percent-encoding-2.3.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libpercent_encoding-13141aa1fdd81c75.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ppv-lite86@0.2.17","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ppv-lite86-0.2.17/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ppv_lite86","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ppv-lite86-0.2.17/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["simd","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libppv_lite86-69fb08222d06dec3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pathfinder_simd@0.5.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pathfinder_simd-0.5.2/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pathfinder_simd-0.5.2/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/pathfinder_simd-987291079550cbac/build-script-build"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro-error@1.0.4","linked_libs":[],"linked_paths":[],"cfgs":["use_fallback"],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/proc-macro-error-2f8dca52805e21c9/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.40","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.40/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tracing","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.40/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libtracing-01a29ed5dc693ba1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#native-tls@0.2.11","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/native-tls-0.2.11/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"native_tls","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/native-tls-0.2.11/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libnative_tls-55ab5c5a7266be0d.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-epoch@0.9.15","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/crossbeam-epoch-ffa1ef0f6fa4dfe1/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustix@0.38.19","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustix-0.38.19/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rustix","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustix-0.38.19/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","fs","std","use-libc-auxv"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librustix-2819faa45c5bd51a.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librustix-2819faa45c5bd51a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#phf_shared@0.11.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/phf_shared-0.11.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"phf_shared","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/phf_shared-0.11.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libphf_shared-2b88250688388282.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libphf_shared-2b88250688388282.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand_chacha@0.3.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_chacha-0.3.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand_chacha","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_chacha-0.3.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librand_chacha-30e9c5a0e2aab6cc.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#nom@7.1.3","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nom-7.1.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"nom","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nom-7.1.3/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libnom-ff5c635edf9498e3.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libnom-ff5c635edf9498e3.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#typenum@1.17.0","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/typenum-c8930cb683f4c687/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.14.5","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.14.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"hashbrown","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.14.5/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["ahash","allocator-api2","default","inline-more","raw"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libhashbrown-ba1a0e58bc15bb06.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#form_urlencoded@1.2.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/form_urlencoded-1.2.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"form_urlencoded","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/form_urlencoded-1.2.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":false},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libform_urlencoded-9060a8f5c011c692.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand@0.8.5","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","getrandom","libc","rand_chacha","small_rng","std","std_rng"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librand-ae3509f07ebdf4ba.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librand-ae3509f07ebdf4ba.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#memoffset@0.9.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.9.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"memoffset","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.9.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libmemoffset-8e4bc014d93269bd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#unicode-normalization@0.1.22","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-normalization-0.1.22/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"unicode_normalization","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-normalization-0.1.22/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libunicode_normalization-6a34bdccdb18726a.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#hdf5-metno-sys@0.9.1","linked_libs":["dylib=hdf5"],"linked_paths":["native=/opt/homebrew/opt/hdf5/lib","native=/opt/homebrew/opt/hdf5/bin"],"cfgs":["feature=\"1.8.5\"","feature=\"1.8.6\"","feature=\"1.8.7\"","feature=\"1.8.8\"","feature=\"1.8.9\"","feature=\"1.8.10\"","feature=\"1.8.11\"","feature=\"1.8.12\"","feature=\"1.8.13\"","feature=\"1.8.14\"","feature=\"1.8.15\"","feature=\"1.8.16\"","feature=\"1.8.17\"","feature=\"1.8.18\"","feature=\"1.8.19\"","feature=\"1.8.20\"","feature=\"1.8.21\"","feature=\"1.10.0\"","feature=\"1.10.1\"","feature=\"1.10.2\"","feature=\"1.10.3\"","feature=\"1.10.4\"","feature=\"1.10.5\"","feature=\"1.10.6\"","feature=\"1.10.7\"","feature=\"1.10.8\"","feature=\"1.12.0\"","feature=\"1.12.1\"","feature=\"1.12.2\"","feature=\"1.14.0\"","feature=\"1.14.1\"","feature=\"1.14.2\"","feature=\"1.14.3\"","feature=\"1.14.4\"","feature=\"have-filter-deflate\""],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/hdf5-metno-sys-1ab40c024293a86b/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro-error-attr@1.0.4","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro-error-attr-1.0.4/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"proc_macro_error_attr","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro-error-attr-1.0.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libproc_macro_error_attr-9553c05d50301e20.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libloading@0.7.4","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libloading-0.7.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libloading","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libloading-0.7.4/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liblibloading-0e822e65d03c1a26.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liblibloading-0e822e65d03c1a26.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#foreign-types-shared@0.1.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/foreign-types-shared-0.1.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"foreign_types_shared","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/foreign-types-shared-0.1.1/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libforeign_types_shared-f88718af87696508.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#semver@0.1.20","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/semver-0.1.20/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"semver","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/semver-0.1.20/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libsemver-5bf44c5a4a9d63cb.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libsemver-5bf44c5a4a9d63cb.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#httparse@1.8.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.8.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.8.0/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/httparse-36a0828d7db7d346/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.14","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustversion-1.0.14/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustversion-1.0.14/build/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/rustversion-1e7c9796bea96726/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#home@0.5.9","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/home-0.5.9/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"home","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/home-0.5.9/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libhome-476e8060d81ce234.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libhome-476e8060d81ce234.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.49","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.49/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.49/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/thiserror-2511501eae8ec903/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#either@1.9.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/either-1.9.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"either","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/either-1.9.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","use_std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libeither-44fa649c9ab4c374.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ryu@1.0.15","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ryu-1.0.15/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ryu","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ryu-1.0.15/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libryu-c7bac746647725c6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.13","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-bidi-0.3.13/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"unicode_bidi","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-bidi-0.3.13/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["hardcoded-data","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libunicode_bidi-e0a5ce57784cb5d0.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#either@1.9.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/either-1.9.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"either","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/either-1.9.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","use_std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libeither-81dd07984dc6b382.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libeither-81dd07984dc6b382.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bindgen@0.66.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bindgen-0.66.1/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bindgen-0.66.1/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","logging","prettyplease","runtime","which-rustfmt"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/bindgen-c3e2235ccc04338a/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#idna@0.4.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/idna-0.4.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"idna","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/idna-0.4.0/src/lib.rs","edition":"2018","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libidna-5dbe70bbd38f771e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustc_version@0.1.7","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc_version-0.1.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rustc_version","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc_version-0.1.7/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librustc_version-44ab1612d9491834.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librustc_version-44ab1612d9491834.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#httparse@1.8.0","linked_libs":[],"linked_paths":[],"cfgs":["httparse_simd"],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/httparse-97f0e753d5ba24e5/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.14","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/rustversion-95af642a48aa4374/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#which@4.4.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/which-4.4.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"which","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/which-4.4.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libwhich-d4a83742dfa54e17.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libwhich-d4a83742dfa54e17.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#clang-sys@1.6.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clang-sys-1.6.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"clang_sys","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clang-sys-1.6.1/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["clang_3_5","clang_3_6","clang_3_7","clang_3_8","clang_3_9","clang_4_0","clang_5_0","clang_6_0","libloading","runtime"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libclang_sys-edf5fe3a4dbe9800.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libclang_sys-edf5fe3a4dbe9800.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.49","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/thiserror-4e1aec3dc98317bd/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#foreign-types@0.3.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/foreign-types-0.3.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"foreign_types","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/foreign-types-0.3.2/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libforeign_types-c936676d462c9119.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#bindgen@0.66.1","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/bindgen-c1e60f9a49d7f97d/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#phf_generator@0.11.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/phf_generator-0.11.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"phf_generator","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/phf_generator-0.11.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libphf_generator-d064910ab4e7ff2d.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libphf_generator-d064910ab4e7ff2d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-epoch@0.9.15","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.15/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crossbeam_epoch","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.15/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcrossbeam_epoch-b614048c029cdc9d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#typenum@1.17.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/typenum-1.17.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"typenum","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/typenum-1.17.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libtypenum-cacb5ab4652479ac.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand@0.8.5","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","getrandom","libc","rand_chacha","small_rng","std","std_rng"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librand-1c86ef4d63889517.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro-error@1.0.4","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro-error-1.0.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"proc_macro_error","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro-error-1.0.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","syn","syn-error"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libproc_macro_error-ef7ff6969dec2b55.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libproc_macro_error-ef7ff6969dec2b55.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#cexpr@0.6.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cexpr-0.6.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"cexpr","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cexpr-0.6.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcexpr-4322edc18497d256.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcexpr-4322edc18497d256.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#pathfinder_simd@0.5.2","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/pathfinder_simd-d5d8e67b31cdc9c0/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tokio-util@0.7.10","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.10/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tokio_util","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.10/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["codec","default","tracing"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libtokio_util-cf38f88d1e54c89d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#prettyplease@0.2.15","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/prettyplease-0.2.15/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"prettyplease","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/prettyplease-0.2.15/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libprettyplease-a496fd741e11cecf.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libprettyplease-a496fd741e11cecf.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libdeflate-sys@0.7.5","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libdeflate-sys-0.7.5/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libdeflate-sys-0.7.5/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/libdeflate-sys-95803c57ee695fb1/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#fdeflate@0.3.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fdeflate-0.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"fdeflate","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fdeflate-0.3.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libfdeflate-567e00166580b1b1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@1.0.49","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-1.0.49/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"thiserror_impl","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-1.0.49/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libthiserror_impl-6787e49ec6022cb6.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#core-graphics-types@0.1.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/core-graphics-types-0.1.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"core_graphics_types","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/core-graphics-types-0.1.2/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcore_graphics_types-a8fefffbc9e6a0c2.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#aho-corasick@1.1.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aho-corasick-1.1.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"aho_corasick","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aho-corasick-1.1.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","perf-literal","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libaho_corasick-cfca6b8f7afceac1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#shlex@1.2.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/shlex-1.2.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"shlex","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/shlex-1.2.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libshlex-6cab89b4a1ea8238.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libshlex-6cab89b4a1ea8238.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#vcpkg@0.2.15","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/vcpkg-0.2.15/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"vcpkg","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/vcpkg-0.2.15/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libvcpkg-7a74a543c6944836.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libvcpkg-7a74a543c6944836.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#system-configuration-sys@0.5.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/system-configuration-sys-0.5.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/system-configuration-sys-0.5.0/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/system-configuration-sys-fde8ea1b39b2a51b/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pkg-config@0.3.27","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pkg-config-0.3.27/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"pkg_config","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pkg-config-0.3.27/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libpkg_config-a22ffb3f918ef146.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libpkg_config-a22ffb3f918ef146.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#siphasher@0.3.11","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/siphasher-0.3.11/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"siphasher","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/siphasher-0.3.11/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libsiphasher-5cd2e1a0bf60e134.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#log@0.4.20","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.20/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"log","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.20/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liblog-1a91012b559dddb3.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liblog-1a91012b559dddb3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.8.6","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.8.6/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.8.6/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/parking_lot_core-1378abe87aa71960/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#lazycell@1.3.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lazycell-1.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"lazycell","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lazycell-1.3.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liblazycell-692503d7675aff39.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liblazycell-692503d7675aff39.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.12.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.0/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/rayon-core-11f374e919bda912/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#regex-syntax@0.8.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-syntax-0.8.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex_syntax","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-syntax-0.8.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libregex_syntax-56d99fa6ace981b4.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#peeking_take_while@0.1.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peeking_take_while-0.1.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"peeking_take_while","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peeking_take_while-0.1.2/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libpeeking_take_while-b5ee022fc0662699.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libpeeking_take_while-b5ee022fc0662699.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#lazy_static@1.4.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lazy_static-1.4.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"lazy_static","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lazy_static-1.4.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liblazy_static-d661ac4029804541.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liblazy_static-d661ac4029804541.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#try-lock@0.2.4","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/try-lock-0.2.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"try_lock","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/try-lock-0.2.4/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libtry_lock-b311f40d75601166.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustc-hash@1.1.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-hash-1.1.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rustc_hash","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-hash-1.1.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librustc_hash-75ae32a30feb7059.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librustc_hash-75ae32a30feb7059.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#feature-probe@0.1.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/feature-probe-0.1.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"feature_probe","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/feature-probe-0.1.1/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libfeature_probe-23d9dbbfd6961be9.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libfeature_probe-23d9dbbfd6961be9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#color_quant@1.1.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/color_quant-1.1.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"color_quant","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/color_quant-1.1.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcolor_quant-0ad8f4f63d393c0c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#phf_shared@0.11.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/phf_shared-0.11.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"phf_shared","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/phf_shared-0.11.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":false},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libphf_shared-454e1b90b798672b.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#system-configuration-sys@0.5.0","linked_libs":["framework=SystemConfiguration"],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/system-configuration-sys-3fb9aeae7cc59e4d/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#regex-automata@0.4.3","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex_automata","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","dfa-onepass","hybrid","meta","nfa-backtrack","nfa-pikevm","nfa-thompson","perf-inline","perf-literal","perf-literal-multisubstring","perf-literal-substring","std","syntax","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment","unicode-word-boundary"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libregex_automata-52035314bdfdfe2c.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.12.0","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/rayon-core-7c8db4e31a91f842/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.8.6","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/parking_lot_core-8878bc3eb777e3b0/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libsqlite3-sys@0.28.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libsqlite3-sys-0.28.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libsqlite3-sys-0.28.0/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","min_sqlite_version_3_14_0","pkg-config","vcpkg"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/libsqlite3-sys-410b2ad685e2d6a1/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#want@0.3.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/want-0.3.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"want","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/want-0.3.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libwant-bd989160075d82ce.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#core-graphics@0.22.3","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/core-graphics-0.22.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"core_graphics","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/core-graphics-0.22.3/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcore_graphics-b24813353335c54e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#h2@0.3.21","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/h2-0.3.21/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"h2","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/h2-0.3.21/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libh2-f6cca4f6e0fe6f63.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bindgen@0.66.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bindgen-0.66.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bindgen","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bindgen-0.66.1/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","logging","prettyplease","runtime","which-rustfmt"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libbindgen-967e3bebeab78836.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libbindgen-967e3bebeab78836.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bv@0.11.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bv-0.11.1/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bv-0.11.1/build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["serde"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/bv-0b98eb5c74eb7c10/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand_distr@0.4.3","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_distr-0.4.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand_distr","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_distr-0.4.3/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librand_distr-afe8cb961c93570e.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#libdeflate-sys@0.7.5","linked_libs":["static=deflate"],"linked_paths":["native=/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/libdeflate-sys-769192f606861562/out/lib"],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/libdeflate-sys-769192f606861562/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pathfinder_simd@0.5.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pathfinder_simd-0.5.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"pathfinder_simd","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pathfinder_simd-0.5.2/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libpathfinder_simd-e186879be184077b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#png@0.17.10","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/png-0.17.10/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"png","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/png-0.17.10/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libpng-a5bce28bd56745e3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.49","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.49/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"thiserror","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.49/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libthiserror-108d3f903592ab5e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#url@2.4.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/url-2.4.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"url","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/url-2.4.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liburl-3760bf9af6622361.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-deque@0.8.3","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-deque-0.8.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crossbeam_deque","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-deque-0.8.3/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["crossbeam-epoch","crossbeam-utils","default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcrossbeam_deque-f90232fcf4920180.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#httparse@1.8.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.8.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"httparse","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.8.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libhttparse-68277ddfbc6619f1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.14","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustversion-1.0.14/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"rustversion","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustversion-1.0.14/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librustversion-0cbfe90a6e28fdac.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#newtype_derive@0.1.6","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/newtype_derive-0.1.6/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/newtype_derive-0.1.6/build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/newtype_derive-2c7c6468fe0209d9/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#phf_macros@0.11.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/phf_macros-0.11.2/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"phf_macros","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/phf_macros-0.11.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libphf_macros-02b3cd3dc80df6d4.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#simba@0.6.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/simba-0.6.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"simba","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/simba-0.6.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std","wide"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libsimba-a9fc20f24a653fa1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#http-body@0.4.5","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-body-0.4.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"http_body","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-body-0.4.5/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libhttp_body-c20f048e3b4df1e6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#nalgebra-macros@0.1.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nalgebra-macros-0.1.0/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"nalgebra_macros","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nalgebra-macros-0.1.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libnalgebra_macros-afed16b406c3b692.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#dirs-sys-next@0.1.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dirs-sys-next-0.1.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"dirs_sys_next","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dirs-sys-next-0.1.2/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libdirs_sys_next-079ef1de04de478e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#socket2@0.4.10","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/socket2-0.4.10/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"socket2","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/socket2-0.4.10/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["all"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libsocket2-530653742d7c0329.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-iter@0.1.43","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-iter-0.1.43/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-iter-0.1.43/build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["i128","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/num-iter-e7d0d198b1fde5f6/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#instant@0.1.12","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/instant-0.1.12/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"instant","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/instant-0.1.12/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libinstant-a1ae2ee268852e2c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#heck@0.4.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/heck-0.4.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"heck","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/heck-0.4.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libheck-828ecea716a25e96.rlib","/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libheck-828ecea716a25e96.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#hdf5-metno-types@0.9.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hdf5-metno-types-0.9.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hdf5-metno-types-0.9.0/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/hdf5-metno-types-c99195e19a65a5c0/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#jpeg-decoder@0.3.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jpeg-decoder-0.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"jpeg_decoder","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jpeg-decoder-0.3.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libjpeg_decoder-7d48093ce2bf70df.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#font-kit@0.11.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/font-kit-0.11.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/font-kit-0.11.0/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","source"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/font-kit-5f07b301f4f1affa/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#plotters-backend@0.3.5","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/plotters-backend-0.3.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"plotters_backend","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/plotters-backend-0.3.5/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libplotters_backend-aa9c8161a6a78a21.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/equivalent-1.0.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"equivalent","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/equivalent-1.0.1/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libequivalent-bad7840f33243563.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#same-file@1.0.6","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/same-file-1.0.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"same_file","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/same-file-1.0.6/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libsame_file-005ae6e158c1eebe.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#httpdate@1.0.3","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httpdate-1.0.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"httpdate","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httpdate-1.0.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libhttpdate-1c37b7c8efc10348.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#weezl@0.1.7","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/weezl-0.1.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"weezl","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/weezl-0.1.7/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libweezl-2bf70af2fe9c040a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.75","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anyhow-1.0.75/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anyhow-1.0.75/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/anyhow-370209dd75fd0850/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#os_str_bytes@6.6.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/os_str_bytes-6.6.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"os_str_bytes","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/os_str_bytes-6.6.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["raw_os_str"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libos_str_bytes-c6e0e54d6097633d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tower-service@0.3.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tower-service-0.3.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tower_service","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tower-service-0.3.2/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libtower_service-35280de3caca02b8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#strum_macros@0.25.3","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/strum_macros-0.25.3/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"strum_macros","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/strum_macros-0.25.3/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libstrum_macros-b6f0cb40345db2ba.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#phf@0.11.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/phf-0.11.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"phf","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/phf-0.11.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":false},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","macros","phf_macros","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libphf-d1d59db0c321c222.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#dirs-next@2.0.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dirs-next-2.0.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"dirs_next","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dirs-next-2.0.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libdirs_next-555a1f32d202e0ea.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#image@0.24.7","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/image-0.24.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"image","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/image-0.24.7/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bmp","jpeg","png"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libimage-7c7353c8a572fbc1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#clap_lex@0.2.4","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap_lex-0.2.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"clap_lex","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap_lex-0.2.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libclap_lex-db8fcb093533adcd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#indexmap@2.0.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.0.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"indexmap","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.0.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libindexmap-cd1e588ea87f2f65.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#walkdir@2.4.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/walkdir-2.4.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"walkdir","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/walkdir-2.4.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libwalkdir-c5d60c819895f4ff.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#hyper@0.14.27","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hyper-0.14.27/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"hyper","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hyper-0.14.27/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["client","h2","http1","http2","runtime","socket2","tcp"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libhyper-6409cf8a55aad650.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#gif@0.12.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gif-0.12.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"gif","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gif-0.12.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["color_quant","default","raii_no_panic","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libgif-594b4d46092509fe.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.75","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/anyhow-eeccdbb8ec9fa384/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.8.6","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.8.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"parking_lot_core","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.8.6/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libparking_lot_core-e22477473dad19b0.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-iter@0.1.43","linked_libs":[],"linked_paths":[],"cfgs":["has_i128","rustc_1_28"],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/num-iter-c78b08f67fef0e2f/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#font-kit@0.11.0","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/font-kit-12d0bbf888a2f1fd/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#hdf5-metno-types@0.9.0","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/hdf5-metno-types-1cd269b00528f297/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#nalgebra@0.29.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nalgebra-0.29.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"nalgebra","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nalgebra-0.29.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","macros","matrixmultiply","nalgebra-macros","rand","rand-no-std","rand-package","rand_distr","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libnalgebra-794dcb12cd0bbf3d.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#bv@0.11.1","linked_libs":[],"linked_paths":[],"cfgs":["int_128","inclusive_range"],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/bv-e1c85c1eb4f6efc7/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pathfinder_geometry@0.5.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pathfinder_geometry-0.5.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"pathfinder_geometry","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pathfinder_geometry-0.5.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libpathfinder_geometry-ab46e3fa1526c6a5.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#newtype_derive@0.1.6","linked_libs":[],"linked_paths":[],"cfgs":["op_assign"],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/newtype_derive-2547822b315787dd/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.12.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rayon_core","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librayon_core-efda38b9889e15a8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libdeflate-sys@0.7.5","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libdeflate-sys-0.7.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libdeflate_sys","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libdeflate-sys-0.7.5/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liblibdeflate_sys-6ee6d84d7a1890aa.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#r_mathlib@0.2.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/r_mathlib-0.2.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/r_mathlib-0.2.0/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/r_mathlib-87bb65e02e2940c7/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#core-text@19.2.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/core-text-19.2.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"core_text","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/core-text-19.2.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","mountainlion"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcore_text-e20f98d3c8ba9bd2.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#regex@1.10.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-1.10.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-1.10.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","perf","perf-backtrack","perf-cache","perf-dfa","perf-inline","perf-literal","perf-onepass","std","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libregex-1f3032f1435082d9.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#libsqlite3-sys@0.28.0","linked_libs":["sqlite3"],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/libsqlite3-sys-014519cb01073149/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#system-configuration-sys@0.5.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/system-configuration-sys-0.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"system_configuration_sys","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/system-configuration-sys-0.5.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libsystem_configuration_sys-5905ac1b41a9a0c6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#itertools@0.10.5","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itertools-0.10.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"itertools","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itertools-0.10.5/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":false},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","use_alloc","use_std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libitertools-ffbb6cbfd18609e6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#hdf5-metno-sys@0.9.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hdf5-metno-sys-0.9.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"hdf5_metno_sys","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hdf5-metno-sys-0.9.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libhdf5_metno_sys-119b28d1800d1835.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tokio-native-tls@0.3.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-native-tls-0.3.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tokio_native_tls","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-native-tls-0.3.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libtokio_native_tls-7e6a84a1b9cbb236.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#futures-executor@0.3.28","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-executor-0.3.28/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"futures_executor","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-executor-0.3.28/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["num_cpus","std","thread-pool"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libfutures_executor-5a749773bbcf273b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#derive-new@0.5.9","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/derive-new-0.5.9/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"derive_new","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/derive-new-0.5.9/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libderive_new-56436a2e186a0916.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#enum-map-derive@0.6.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/enum-map-derive-0.6.0/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"enum_map_derive","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/enum-map-derive-0.6.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libenum_map_derive-0cb4efe45aa5a7db.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#csv-core@0.1.11","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/csv-core-0.1.11/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"csv_core","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/csv-core-0.1.11/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcsv_core-3077f3fc5ee774af.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#atty@0.2.14","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/atty-0.2.14/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"atty","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/atty-0.2.14/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libatty-37fecf08d1786429.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand@0.4.6","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.4.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.4.6/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","libc","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librand-2f6ee3a814da6cc2.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#iana-time-zone@0.1.57","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/iana-time-zone-0.1.57/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"iana_time_zone","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/iana-time-zone-0.1.57/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["fallback"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libiana_time_zone-859f06b711086a3d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ascii@1.1.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ascii-1.1.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ascii","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ascii-1.1.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libascii-af70997ac591aaca.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#fixedbitset@0.4.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fixedbitset-0.4.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"fixedbitset","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fixedbitset-0.4.2/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libfixedbitset-382f0a28862ae18a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#textwrap@0.16.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/textwrap-0.16.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"textwrap","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/textwrap-0.16.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libtextwrap-34e02adf335eab93.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bit-vec@0.6.3","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bit-vec-0.6.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bit_vec","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bit-vec-0.6.3/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libbit_vec-022d1c42022bd873.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#termcolor@1.3.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/termcolor-1.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"termcolor","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/termcolor-1.3.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libtermcolor-9671af97cfc52169.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#float-ord@0.2.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/float-ord-0.2.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"float_ord","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/float-ord-0.2.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libfloat_ord-1cac03cbb67ba85a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.107","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.107/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.107/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/serde_json-0d9ec61330d173d3/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#hdf5-metno@0.9.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hdf5-metno-0.9.2/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hdf5-metno-0.9.2/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/hdf5-metno-25a8bf7c08ea03b4/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#wildmatch@2.1.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/wildmatch-2.1.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"wildmatch","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/wildmatch-2.1.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libwildmatch-929dddc40d7d51cb.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#strsim@0.10.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/strsim-0.10.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"strsim","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/strsim-0.10.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libstrsim-46b80f65d9f353f3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#futures@0.3.28","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-0.3.28/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"futures","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-0.3.28/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","async-await","default","executor","futures-executor","std","thread-pool"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libfutures-63bb60cd339ae856.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bio-types@1.0.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bio-types-1.0.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bio_types","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bio-types-1.0.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libbio_types-bab51f37d75e0d9c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#hdf5-metno-types@0.9.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hdf5-metno-types-0.9.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"hdf5_metno_types","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hdf5-metno-types-0.9.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libhdf5_metno_types-c281d90671ae7f10.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#petgraph@0.6.4","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/petgraph-0.6.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"petgraph","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/petgraph-0.6.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","graphmap","matrix_graph","stable_graph"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libpetgraph-265f567b4891e255.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bit-set@0.5.3","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bit-set-0.5.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bit_set","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bit-set-0.5.3/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libbit_set-75826a11a27bbd8c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#csv@1.3.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/csv-1.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"csv","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/csv-1.3.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcsv-59ec7b9e401ba9b5.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.31","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/chrono-0.4.31/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"chrono","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/chrono-0.4.31/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["android-tzdata","clock","default","iana-time-zone","js-sys","oldtime","std","wasm-bindgen","wasmbind","winapi","windows-targets"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libchrono-fff15690b2db67db.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#attohttpc@0.18.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/attohttpc-0.18.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"attohttpc","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/attohttpc-0.18.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["compress","default","flate2","native-tls","openssl","tls"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libattohttpc-e6bc3163b630e4b6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#clap@3.2.25","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap-3.2.25/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"clap","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap-3.2.25/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["atty","color","default","std","strsim","suggestions","termcolor"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libclap-0fd53b31ded9cba5.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#font-kit@0.11.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/font-kit-0.11.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"font_kit","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/font-kit-0.11.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","source"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libfont_kit-50e6dd1cd3470613.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#hdf5-metno@0.9.2","linked_libs":[],"linked_paths":[],"cfgs":["feature=\"have-filter-deflate\"","feature=\"1.10.0\"","feature=\"1.10.1\"","feature=\"1.10.2\"","feature=\"1.10.3\"","feature=\"1.10.4\"","feature=\"1.10.5\"","feature=\"1.10.6\"","feature=\"1.10.7\"","feature=\"1.10.8\"","feature=\"1.12.0\"","feature=\"1.12.1\"","feature=\"1.12.2\"","feature=\"1.14.0\"","feature=\"1.14.1\"","feature=\"1.14.2\"","feature=\"1.14.3\"","feature=\"1.14.4\"","feature=\"1.8.10\"","feature=\"1.8.11\"","feature=\"1.8.12\"","feature=\"1.8.13\"","feature=\"1.8.14\"","feature=\"1.8.15\"","feature=\"1.8.16\"","feature=\"1.8.17\"","feature=\"1.8.18\"","feature=\"1.8.19\"","feature=\"1.8.20\"","feature=\"1.8.21\"","feature=\"1.8.5\"","feature=\"1.8.6\"","feature=\"1.8.7\"","feature=\"1.8.8\"","feature=\"1.8.9\""],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/hdf5-metno-4bf2329d3bbb040f/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.107","linked_libs":[],"linked_paths":[],"cfgs":["limb_width_64"],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/serde_json-54f4c9196238af68/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand@0.3.23","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.3.23/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.3.23/src/lib.rs","edition":"2015","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librand-1188877d29c00e8e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#enum-map@1.1.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/enum-map-1.1.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"enum_map","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/enum-map-1.1.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libenum_map-4f111d47c67b0a2f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#newtype_derive@0.1.6","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/newtype_derive-0.1.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"newtype_derive","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/newtype_derive-0.1.6/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libnewtype_derive-b024841bb6fb6565.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rayon@1.8.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-1.8.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rayon","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-1.8.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librayon-c2047479689a5705.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#system-configuration@0.5.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/system-configuration-0.5.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"system_configuration","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/system-configuration-0.5.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libsystem_configuration-a986cca5af91e5da.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libsqlite3-sys@0.28.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libsqlite3-sys-0.28.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libsqlite3_sys","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libsqlite3-sys-0.28.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","min_sqlite_version_3_14_0","pkg-config","vcpkg"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liblibsqlite3_sys-5e45cf68fd59f9d1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#hyper-tls@0.5.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hyper-tls-0.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"hyper_tls","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hyper-tls-0.5.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libhyper_tls-a8e84bf86b0821e0.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libdeflater@0.7.5","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libdeflater-0.7.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libdeflater","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libdeflater-0.7.5/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/liblibdeflater-e35e7dcb196390ca.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#r_mathlib@0.2.0","linked_libs":["static=nmath"],"linked_paths":["native=/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/r_mathlib-c202c4f23fe458f8/out"],"cfgs":[],"env":[],"out_dir":"/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/build/r_mathlib-c202c4f23fe458f8/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bv@0.11.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bv-0.11.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bv","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bv-0.11.1/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["serde"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libbv-71aac552eade6998.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.11.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot-0.11.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"parking_lot","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot-0.11.2/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libparking_lot-7e8dbc6b78ac7288.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.75","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anyhow-1.0.75/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"anyhow","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anyhow-1.0.75/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libanyhow-fde2081792e3f662.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#plotters-bitmap@0.3.3","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/plotters-bitmap-0.3.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"plotters_bitmap","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/plotters-bitmap-0.3.3/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["gif","gif_backend","image","image_encoder"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libplotters_bitmap-e7473a3c677f2135.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-iter@0.1.43","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-iter-0.1.43/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_iter","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-iter-0.1.43/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["i128","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libnum_iter-88e5d053e05517c0.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#statrs@0.16.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/statrs-0.16.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"statrs","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/statrs-0.16.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libstatrs-5486c2ca25717ffb.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#csscolorparser@0.6.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/csscolorparser-0.6.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"csscolorparser","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/csscolorparser-0.6.2/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["named-colors","phf"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcsscolorparser-29e4f390903c19a2.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#plotters-svg@0.3.5","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/plotters-svg-0.3.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"plotters_svg","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/plotters-svg-0.3.5/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libplotters_svg-e456c9452e95e150.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#hdf5-metno-derive@0.9.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hdf5-metno-derive-0.9.0/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"hdf5_metno_derive","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hdf5-metno-derive-0.9.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libhdf5_metno_derive-c200f646b3299d52.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#getset@0.1.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getset-0.1.2/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"getset","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getset-0.1.2/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libgetset-3dc4eaaf557099de.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_urlencoded@0.7.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_urlencoded-0.7.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"serde_urlencoded","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_urlencoded-0.7.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":false},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libserde_urlencoded-d6041f67a213a92a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#hashlink@0.9.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashlink-0.9.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"hashlink","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashlink-0.9.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libhashlink-4d1d02719c7d8daf.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#simba@0.8.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/simba-0.8.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"simba","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/simba-0.8.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std","wide"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libsimba-53e82870bf5bcf8d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ndarray@0.15.6","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.15.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ndarray","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.15.6/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libndarray-15a63d44850dd500.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ndarray@0.16.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ndarray","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libndarray-65fc922040cfa5d4.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#fxhash@0.2.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fxhash-0.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"fxhash","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fxhash-0.2.1/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libfxhash-3082ab3c4f006816.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#byteordered@0.6.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteordered-0.6.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"byteordered","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteordered-0.6.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libbyteordered-09de048fe096efea.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-channel@0.5.8","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-channel-0.5.8/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crossbeam_channel","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-channel-0.5.8/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["crossbeam-utils","default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcrossbeam_channel-557bec9b6443a83b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bincode@1.3.3","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bincode-1.3.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bincode","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bincode-1.3.3/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libbincode-dde73275984fa909.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#vec_map@0.8.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/vec_map-0.8.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"vec_map","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/vec_map-0.8.2/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["eders","serde"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libvec_map-62a05e6a2f40c691.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#multimap@0.8.3","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multimap-0.8.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"multimap","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multimap-0.8.3/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","serde","serde_impl"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libmultimap-96b914e07fd1dedc.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#nalgebra-macros@0.2.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nalgebra-macros-0.2.1/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"nalgebra_macros","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nalgebra-macros-0.2.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libnalgebra_macros-4b69d5207a0e8c4c.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ordered-float@3.9.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ordered-float-3.9.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ordered_float","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ordered-float-3.9.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libordered_float-d9782a8ac8a3c15b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#itertools-num@0.1.3","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itertools-num-0.1.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"itertools_num","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itertools-num-0.1.3/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libitertools_num-e0c1df9d912e9d63.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#encoding_rs@0.8.33","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.33/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"encoding_rs","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.33/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libencoding_rs-1525f9abb92a1299.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ttf-parser@0.17.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ttf-parser-0.17.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ttf_parser","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ttf-parser-0.17.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["apple-layout","default","glyph-names","opentype-layout","std","variable-fonts"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libttf_parser-71c393acb6dc8f03.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#editdistancek@1.0.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/editdistancek-1.0.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"editdistancek","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/editdistancek-1.0.2/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libeditdistancek-0bc9b162c556dcc5.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bytecount@0.6.4","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bytecount-0.6.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bytecount","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bytecount-0.6.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libbytecount-62b20da0905c29a6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#mime@0.3.17","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mime-0.3.17/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"mime","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mime-0.3.17/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libmime-d1ac43b8a177d314.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#triple_accel@0.4.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/triple_accel-0.4.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"triple_accel","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/triple_accel-0.4.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","jewel-16bit","jewel-32bit","jewel-8bit","jewel-avx","jewel-sse"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libtriple_accel-f8c1692cb087e031.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#strum@0.23.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/strum-0.23.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"strum","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/strum-0.23.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libstrum-3fddafa612cc98aa.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#custom_derive@0.1.7","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/custom_derive-0.1.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"custom_derive","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/custom_derive-0.1.7/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcustom_derive-92ed2a129c8935c2.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#base64@0.21.5","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64-0.21.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"base64","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64-0.21.5/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libbase64-01a310f9b51d62ab.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#fallible-iterator@0.3.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fallible-iterator-0.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"fallible_iterator","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fallible-iterator-0.3.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libfallible_iterator-3865b2190edbc61f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#fallible-streaming-iterator@0.1.9","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fallible-streaming-iterator-0.1.9/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"fallible_streaming_iterator","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fallible-streaming-iterator-0.1.9/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libfallible_streaming_iterator-afb7550653b1a522.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ipnet@2.9.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ipnet-2.9.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ipnet","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ipnet-2.9.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libipnet-1f86997ba95b56e5.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#plotters@0.3.5","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/plotters-0.3.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"plotters","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/plotters-0.3.5/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["all_elements","all_series","area_series","bitmap_backend","bitmap_encoder","bitmap_gif","boxplot","candlestick","chrono","colormaps","default","deprecated_items","errorbar","font-kit","full_palette","histogram","image","lazy_static","line_series","pathfinder_geometry","plotters-bitmap","plotters-svg","point_series","surface_series","svg_backend","ttf","ttf-parser"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libplotters-93156a0f924d2719.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bio@1.5.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bio-1.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bio","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bio-1.5.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libbio-4deaa5648edb1207.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#hdf5-metno@0.9.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hdf5-metno-0.9.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"hdf5_metno","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hdf5-metno-0.9.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libhdf5_metno-070e42545e341a12.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bigtools@0.1.11","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bigtools-0.1.11/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bigtools","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bigtools-0.1.11/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["attohttpc","default","remote"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libbigtools-4f309a95679332f4.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#nalgebra@0.32.3","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nalgebra-0.32.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"nalgebra","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nalgebra-0.32.3/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","macros","matrixmultiply","nalgebra-macros","serde","serde-serialize","serde-serialize-no-std","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libnalgebra-1be320d75b34c94a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num@0.4.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-0.4.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-0.4.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","num-bigint","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libnum-c2e5cad9d0cb4cb4.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#colorgrad@0.6.2","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/colorgrad-0.6.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"colorgrad","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/colorgrad-0.6.2/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","named-colors"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcolorgrad-56528f06cec0c4ba.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#r_mathlib@0.2.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/r_mathlib-0.2.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"r_mathlib","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/r_mathlib-0.2.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libr_mathlib-eaaf15f04d897ebb.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.107","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.107/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"serde_json","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.107/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libserde_json-3a255b2592c0aafe.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libmath@0.2.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libmath-0.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"math","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libmath-0.2.1/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libmath-dec7b2615e484b91.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#reqwest@0.11.22","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/reqwest-0.11.22/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"reqwest","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/reqwest-0.11.22/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["__tls","default","default-tls","hyper-tls","native-tls-crate","tokio-native-tls"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libreqwest-095db576451cd3ec.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rusqlite@0.31.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rusqlite-0.31.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rusqlite","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rusqlite-0.31.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/librusqlite-16b357460228ce6f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bgzip@0.3.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bgzip-0.3.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bgzip","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bgzip-0.3.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","flate2","log","rayon","rust_backend"],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libbgzip-f367883ddab99486.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#kodama@0.3.0","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/kodama-0.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"kodama","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/kodama-0.3.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libkodama-cedf12d2827c2059.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#fishers_exact@1.0.1","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fishers_exact-1.0.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"fishers_exact","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fishers_exact-1.0.1/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libfishers_exact-4aa5913043dfa329.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#json@0.12.4","manifest_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/json-0.12.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"json","src_path":"/Users/awillems/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/json-0.12.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libjson-df7a86e649c4a1b4.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"validateHDF5","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/validateHDF5.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this import is redundant\n --> src/validateHDF5.rs:9:1\n  |\n9 | use serde_json;\n  | ^^^^^^^^^^^^^^^ help: remove it entirely\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports\n  = note: `#[warn(clippy::single_component_path_imports)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::single_component_path_imports)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove it entirely","rendered":null,"spans":[{"byte_end":220,"byte_start":204,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/validateHDF5.rs","is_primary":true,"label":null,"line_end":10,"line_start":9,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":16,"highlight_start":1,"text":"use serde_json;"},{"highlight_end":1,"highlight_start":1,"text":""}]}]}],"code":{"code":"clippy::single_component_path_imports","explanation":null},"level":"warning","message":"this import is redundant","spans":[{"byte_end":219,"byte_start":204,"column_end":16,"column_start":1,"expansion":null,"file_name":"src/validateHDF5.rs","is_primary":true,"label":null,"line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":1,"text":"use serde_json;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"test_warning2","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/test_warning2.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unused variable: `unused`\n --> src/test_warning2.rs:2:9\n  |\n2 |     let unused = \"this will trigger a warning\";\n  |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_unused`\n  |\n  = note: `#[warn(unused_variables)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"`#[warn(unused_variables)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"if this is intentional, prefix it with an underscore","rendered":null,"spans":[{"byte_end":32,"byte_start":26,"column_end":15,"column_start":9,"expansion":null,"file_name":"src/test_warning2.rs","is_primary":true,"label":null,"line_end":2,"line_start":2,"suggested_replacement":"_unused","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":15,"highlight_start":9,"text":"    let unused = \"this will trigger a warning\";"}]}]}],"code":{"code":"unused_variables","explanation":null},"level":"warning","message":"unused variable: `unused`","spans":[{"byte_end":32,"byte_start":26,"column_end":15,"column_start":9,"expansion":null,"file_name":"src/test_warning2.rs","is_primary":true,"label":null,"line_end":2,"line_start":2,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":9,"text":"    let unused = \"this will trigger a warning\";"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"test_warning2","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/test_warning2.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unused variable: `unused`\n --> src/test_warning2.rs:7:9\n  |\n7 |     let unused = \"this will trigger a warning\";\n  |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_unused`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"if this is intentional, prefix it with an underscore","rendered":null,"spans":[{"byte_end":103,"byte_start":97,"column_end":15,"column_start":9,"expansion":null,"file_name":"src/test_warning2.rs","is_primary":true,"label":null,"line_end":7,"line_start":7,"suggested_replacement":"_unused","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":15,"highlight_start":9,"text":"    let unused = \"this will trigger a warning\";"}]}]}],"code":{"code":"unused_variables","explanation":null},"level":"warning","message":"unused variable: `unused`","spans":[{"byte_end":103,"byte_start":97,"column_end":15,"column_start":9,"expansion":null,"file_name":"src/test_warning2.rs","is_primary":true,"label":null,"line_end":7,"line_start":7,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":9,"text":"    let unused = \"this will trigger a warning\";"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"test_warning2","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/test_warning2.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: function `unused_var` is never used\n --> src/test_warning2.rs:1:4\n  |\n1 | fn unused_var() {\n  |    ^^^^^^^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"`#[warn(dead_code)]` on by default","rendered":null,"spans":[]}],"code":{"code":"dead_code","explanation":null},"level":"warning","message":"function `unused_var` is never used","spans":[{"byte_end":13,"byte_start":3,"column_end":14,"column_start":4,"expansion":null,"file_name":"src/test_warning2.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":14,"highlight_start":4,"text":"fn unused_var() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"test_warning2","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/test_warning2.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: function `unused_var2` is never used\n --> src/test_warning2.rs:6:4\n  |\n6 | fn unused_var2() {\n  |    ^^^^^^^^^^^\n\n","$message_type":"diagnostic","children":[],"code":{"code":"dead_code","explanation":null},"level":"warning","message":"function `unused_var2` is never used","spans":[{"byte_end":84,"byte_start":73,"column_end":15,"column_start":4,"expansion":null,"file_name":"src/test_warning2.rs","is_primary":true,"label":null,"line_end":6,"line_start":6,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":4,"text":"fn unused_var2() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this import is redundant\n  --> src/topGeneByExpressionVariance.rs:16:1\n   |\n16 | use json;\n   | ^^^^^^^^^ help: remove it entirely\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports\n   = note: `#[warn(clippy::single_component_path_imports)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::single_component_path_imports)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove it entirely","rendered":null,"spans":[{"byte_end":1245,"byte_start":1235,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":17,"line_start":16,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":10,"highlight_start":1,"text":"use json;"},{"highlight_end":1,"highlight_start":1,"text":"use nalgebra::DMatrix;"}]}]}],"code":{"code":"clippy::single_component_path_imports","explanation":null},"level":"warning","message":"this import is redundant","spans":[{"byte_end":1244,"byte_start":1235,"column_end":10,"column_start":1,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":16,"line_start":16,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":10,"highlight_start":1,"text":"use json;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this import is redundant\n  --> src/topGeneByExpressionVariance.rs:22:1\n   |\n22 | use serde_json;\n   | ^^^^^^^^^^^^^^^ help: remove it entirely\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove it entirely","rendered":null,"spans":[{"byte_end":1417,"byte_start":1401,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":23,"line_start":22,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":16,"highlight_start":1,"text":"use serde_json;"},{"highlight_end":1,"highlight_start":1,"text":"use statrs::statistics::Data;"}]}]}],"code":{"code":"clippy::single_component_path_imports","explanation":null},"level":"warning","message":"this import is redundant","spans":[{"byte_end":1416,"byte_start":1401,"column_end":16,"column_start":1,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":22,"line_start":22,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":1,"text":"use serde_json;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this import is redundant\n  --> src/fisher.rs:84:1\n   |\n84 | use serde_json;\n   | ^^^^^^^^^^^^^^^ help: remove it entirely\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports\n   = note: `#[warn(clippy::single_component_path_imports)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::single_component_path_imports)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove it entirely","rendered":null,"spans":[{"byte_end":9408,"byte_start":9392,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":85,"line_start":84,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":16,"highlight_start":1,"text":"use serde_json;"},{"highlight_end":1,"highlight_start":1,"text":"use std::cmp::Ordering;"}]}]}],"code":{"code":"clippy::single_component_path_imports","explanation":null},"level":"warning","message":"this import is redundant","spans":[{"byte_end":9407,"byte_start":9392,"column_end":16,"column_start":1,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":84,"line_start":84,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":1,"text":"use serde_json;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this import is redundant\n --> src/DEanalysis.rs:7:1\n  |\n7 | use json;\n  | ^^^^^^^^^ help: remove it entirely\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports\n  = note: `#[warn(clippy::single_component_path_imports)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::single_component_path_imports)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove it entirely","rendered":null,"spans":[{"byte_end":744,"byte_start":734,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":8,"line_start":7,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":10,"highlight_start":1,"text":"use json;"},{"highlight_end":1,"highlight_start":1,"text":"use nalgebra::base::dimension::Const;"}]}]}],"code":{"code":"clippy::single_component_path_imports","explanation":null},"level":"warning","message":"this import is redundant","spans":[{"byte_end":743,"byte_start":734,"column_end":10,"column_start":1,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":7,"line_start":7,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":10,"highlight_start":1,"text":"use json;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this import is redundant\n  --> src/DEanalysis.rs:18:1\n   |\n18 | use serde_json;\n   | ^^^^^^^^^^^^^^^ help: remove it entirely\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove it entirely","rendered":null,"spans":[{"byte_end":1043,"byte_start":1027,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":19,"line_start":18,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":16,"highlight_start":1,"text":"use serde_json;"},{"highlight_end":1,"highlight_start":1,"text":"use statrs::statistics::Data;"}]}]}],"code":{"code":"clippy::single_component_path_imports","explanation":null},"level":"warning","message":"this import is redundant","spans":[{"byte_end":1042,"byte_start":1027,"column_end":16,"column_start":1,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":18,"line_start":18,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":1,"text":"use serde_json;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/fisher.rs:306:17\n    |\n306 |                 n1: n1,\n    |                 ^^^^^^ help: replace it with: `n1`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n    = note: `#[warn(clippy::redundant_field_names)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::redundant_field_names)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":18474,"byte_start":18468,"column_end":23,"column_start":17,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":306,"line_start":306,"suggested_replacement":"n1","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":23,"highlight_start":17,"text":"                n1: n1,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":18474,"byte_start":18468,"column_end":23,"column_start":17,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":306,"line_start":306,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":17,"text":"                n1: n1,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/fisher.rs:307:17\n    |\n307 |                 n2: n2,\n    |                 ^^^^^^ help: replace it with: `n2`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":18498,"byte_start":18492,"column_end":23,"column_start":17,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":307,"line_start":307,"suggested_replacement":"n2","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":23,"highlight_start":17,"text":"                n2: n2,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":18498,"byte_start":18492,"column_end":23,"column_start":17,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":307,"line_start":307,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":17,"text":"                n2: n2,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/fisher.rs:308:17\n    |\n308 |                 n3: n3,\n    |                 ^^^^^^ help: replace it with: `n3`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":18522,"byte_start":18516,"column_end":23,"column_start":17,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":308,"line_start":308,"suggested_replacement":"n3","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":23,"highlight_start":17,"text":"                n3: n3,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":18522,"byte_start":18516,"column_end":23,"column_start":17,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":308,"line_start":308,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":17,"text":"                n3: n3,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/fisher.rs:309:17\n    |\n309 |                 n4: n4,\n    |                 ^^^^^^ help: replace it with: `n4`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":18546,"byte_start":18540,"column_end":23,"column_start":17,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":309,"line_start":309,"suggested_replacement":"n4","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":23,"highlight_start":17,"text":"                n4: n4,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":18546,"byte_start":18540,"column_end":23,"column_start":17,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":309,"line_start":309,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":17,"text":"                n4: n4,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` statement can be collapsed\n   --> src/fisher.rs:369:17\n    |\n369 | /                 if i != p_values_list.len() - 1 {\n370 | |                     if adjusted_p_val > old_p_value {\n371 | |                         adjusted_p_val = old_p_value;\n372 | |                     }\n373 | |                 }\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n369 ~                 if i != p_values_list.len() - 1 && adjusted_p_val > old_p_value {\n370 +                     adjusted_p_val = old_p_value;\n371 +                 }\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::collapsible_if)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"collapse nested if block","rendered":null,"spans":[{"byte_end":21087,"byte_start":20906,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":373,"line_start":369,"suggested_replacement":"if i != p_values_list.len() - 1 && adjusted_p_val > old_p_value {\n                    adjusted_p_val = old_p_value;\n                }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":50,"highlight_start":17,"text":"                if i != p_values_list.len() - 1 {"},{"highlight_end":54,"highlight_start":1,"text":"                    if adjusted_p_val > old_p_value {"},{"highlight_end":54,"highlight_start":1,"text":"                        adjusted_p_val = old_p_value;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}],"code":{"code":"clippy::collapsible_if","explanation":null},"level":"warning","message":"this `if` statement can be collapsed","spans":[{"byte_end":21087,"byte_start":20906,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":373,"line_start":369,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":17,"text":"                if i != p_values_list.len() - 1 {"},{"highlight_end":54,"highlight_start":1,"text":"                    if adjusted_p_val > old_p_value {"},{"highlight_end":54,"highlight_start":1,"text":"                        adjusted_p_val = old_p_value;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/fisher.rs:389:13\n    |\n389 |             adjusted_p_value: adjusted_p_value,\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `adjusted_p_value`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":21674,"byte_start":21640,"column_end":47,"column_start":13,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":389,"line_start":389,"suggested_replacement":"adjusted_p_value","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":13,"text":"            adjusted_p_value: adjusted_p_value,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":21674,"byte_start":21640,"column_end":47,"column_start":13,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":389,"line_start":389,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":13,"text":"            adjusted_p_value: adjusted_p_value,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/fisher.rs:438:13\n    |\n438 |             adjusted_p_value: adjusted_p_value,\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `adjusted_p_value`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":23615,"byte_start":23581,"column_end":47,"column_start":13,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":438,"line_start":438,"suggested_replacement":"adjusted_p_value","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":13,"text":"            adjusted_p_value: adjusted_p_value,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":23615,"byte_start":23581,"column_end":47,"column_start":13,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":438,"line_start":438,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":13,"text":"            adjusted_p_value: adjusted_p_value,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/DEanalysis.rs:762:49\n    |\n762 | ...                   p_value: p_value,\n    |                       ^^^^^^^^^^^^^^^^ help: replace it with: `p_value`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n    = note: `#[warn(clippy::redundant_field_names)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::redundant_field_names)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":37685,"byte_start":37669,"column_end":65,"column_start":49,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":762,"line_start":762,"suggested_replacement":"p_value","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":65,"highlight_start":49,"text":"                                                p_value: p_value,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":37685,"byte_start":37669,"column_end":65,"column_start":49,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":762,"line_start":762,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":65,"highlight_start":49,"text":"                                                p_value: p_value,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/DEanalysis.rs:852:61\n    |\n852 | ...                   p_value: p_value,\n    |                       ^^^^^^^^^^^^^^^^ help: replace it with: `p_value`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":45031,"byte_start":45015,"column_end":77,"column_start":61,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":852,"line_start":852,"suggested_replacement":"p_value","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":77,"highlight_start":61,"text":"                                                            p_value: p_value,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":45031,"byte_start":45015,"column_end":77,"column_start":61,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":852,"line_start":852,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":77,"highlight_start":61,"text":"                                                            p_value: p_value,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` statement can be collapsed\n   --> src/DEanalysis.rs:918:9\n    |\n918 | /         if i != original_p_values.len() - 1 {\n919 | |             if adjusted_p_val > old_p_value {\n920 | |                 adjusted_p_val = old_p_value;\n921 | |             }\n922 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n918 ~         if i != original_p_values.len() - 1 && adjusted_p_val > old_p_value {\n919 +             adjusted_p_val = old_p_value;\n920 +         }\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::collapsible_if)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"collapse nested if block","rendered":null,"spans":[{"byte_end":48271,"byte_start":48118,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":922,"line_start":918,"suggested_replacement":"if i != original_p_values.len() - 1 && adjusted_p_val > old_p_value {\n            adjusted_p_val = old_p_value;\n        }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":46,"highlight_start":9,"text":"        if i != original_p_values.len() - 1 {"},{"highlight_end":46,"highlight_start":1,"text":"            if adjusted_p_val > old_p_value {"},{"highlight_end":46,"highlight_start":1,"text":"                adjusted_p_val = old_p_value;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":10,"highlight_start":1,"text":"        }"}]}]}],"code":{"code":"clippy::collapsible_if","explanation":null},"level":"warning","message":"this `if` statement can be collapsed","spans":[{"byte_end":48271,"byte_start":48118,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":922,"line_start":918,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":9,"text":"        if i != original_p_values.len() - 1 {"},{"highlight_end":46,"highlight_start":1,"text":"            if adjusted_p_val > old_p_value {"},{"highlight_end":46,"highlight_start":1,"text":"                adjusted_p_val = old_p_value;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":10,"highlight_start":1,"text":"        }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/DEanalysis.rs:966:13\n    |\n966 |             adjusted_p_value: adjusted_p_value,\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `adjusted_p_value`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":50233,"byte_start":50199,"column_end":47,"column_start":13,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":966,"line_start":966,"suggested_replacement":"adjusted_p_value","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":13,"text":"            adjusted_p_value: adjusted_p_value,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":50233,"byte_start":50199,"column_end":47,"column_start":13,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":966,"line_start":966,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":13,"text":"            adjusted_p_value: adjusted_p_value,"}]}]}}
{"reason":"compiler-artifact","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"test_warning2","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/test_warning2.rs","edition":"2018","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libtest_warning2-b83fb10fac95a0ee.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this import is redundant\n --> src/align.rs:2:1\n  |\n2 | use json;\n  | ^^^^^^^^^ help: remove it entirely\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports\n  = note: `#[warn(clippy::single_component_path_imports)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::single_component_path_imports)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove it entirely","rendered":null,"spans":[{"byte_end":137,"byte_start":127,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":3,"line_start":2,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":10,"highlight_start":1,"text":"use json;"},{"highlight_end":1,"highlight_start":1,"text":"use json::JsonValue;"}]}]}],"code":{"code":"clippy::single_component_path_imports","explanation":null},"level":"warning","message":"this import is redundant","spans":[{"byte_end":136,"byte_start":127,"column_end":10,"column_start":1,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":2,"line_start":2,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":10,"highlight_start":1,"text":"use json;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this import is redundant\n --> src/sv.rs:5:1\n  |\n5 | use serde_json;\n  | ^^^^^^^^^^^^^^^ help: remove it entirely\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports\n  = note: `#[warn(clippy::single_component_path_imports)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::single_component_path_imports)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove it entirely","rendered":null,"spans":[{"byte_end":7303,"byte_start":7287,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":6,"line_start":5,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":16,"highlight_start":1,"text":"use serde_json;"},{"highlight_end":1,"highlight_start":1,"text":"//use std::cmp::Ordering;"}]}]}],"code":{"code":"clippy::single_component_path_imports","explanation":null},"level":"warning","message":"this import is redundant","spans":[{"byte_end":7302,"byte_start":7287,"column_end":16,"column_start":1,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":5,"line_start":5,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":1,"text":"use serde_json;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"computeTopTerms","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/computeTopTerms.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: very complex type used. Consider factoring parts into `type` definitions\n  --> src/computeTopTerms.rs:31:6\n   |\n31 |   ) -> (\n   |  ______^\n32 | |     Matrix<f64, Dyn, Dyn, VecStorage<f64, Dyn, Dyn>>,\n33 | |     Vec<String>,\n34 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity\n   = note: `#[warn(clippy::type_complexity)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::type_complexity)]` on by default","rendered":null,"spans":[]}],"code":{"code":"clippy::type_complexity","explanation":null},"level":"warning","message":"very complex type used. Consider factoring parts into `type` definitions","spans":[{"byte_end":1476,"byte_start":1408,"column_end":2,"column_start":6,"expansion":null,"file_name":"src/computeTopTerms.rs","is_primary":true,"label":null,"line_end":34,"line_start":31,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":7,"highlight_start":6,"text":") -> ("},{"highlight_end":51,"highlight_start":1,"text":"\tMatrix<f64, Dyn, Dyn, VecStorage<f64, Dyn, Dyn>>,"},{"highlight_end":14,"highlight_start":1,"text":"\tVec<String>,"},{"highlight_end":2,"highlight_start":1,"text":") {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` statement can be collapsed\n    --> src/realign.rs:1670:17\n     |\n1670 | /                 if (i as usize) < r_seq_ref_vec.len() {\n1671 | |                     if r_seq_ref_vec[i as usize] != '-' {\n1672 | |                         is_complete_insertion = false;\n1673 | |                         break;\n1674 | |                     }\n1675 | |                 }\n     | |_________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n     = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n     |\n1670 ~                 if (i as usize) < r_seq_ref_vec.len() && r_seq_ref_vec[i as usize] != '-' {\n1671 +                     is_complete_insertion = false;\n1672 +                     break;\n1673 +                 }\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::collapsible_if)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"collapse nested if block","rendered":null,"spans":[{"byte_end":89814,"byte_start":89591,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1675,"line_start":1670,"suggested_replacement":"if (i as usize) < r_seq_ref_vec.len() && r_seq_ref_vec[i as usize] != '-' {\n                    is_complete_insertion = false;\n                    break;\n                }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":56,"highlight_start":17,"text":"                if (i as usize) < r_seq_ref_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_ref_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}],"code":{"code":"clippy::collapsible_if","explanation":null},"level":"warning","message":"this `if` statement can be collapsed","spans":[{"byte_end":89814,"byte_start":89591,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1675,"line_start":1670,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":17,"text":"                if (i as usize) < r_seq_ref_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_ref_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` statement can be collapsed\n    --> src/realign.rs:1687:17\n     |\n1687 | /                 if (i as usize) < r_seq_alt_vec.len() {\n1688 | |                     if r_seq_alt_vec[i as usize] != '-' {\n1689 | |                         is_complete_insertion = false;\n1690 | |                         break;\n1691 | |                     }\n1692 | |                 }\n     | |_________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n     |\n1687 ~                 if (i as usize) < r_seq_alt_vec.len() && r_seq_alt_vec[i as usize] != '-' {\n1688 +                     is_complete_insertion = false;\n1689 +                     break;\n1690 +                 }\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"collapse nested if block","rendered":null,"spans":[{"byte_end":90684,"byte_start":90461,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1692,"line_start":1687,"suggested_replacement":"if (i as usize) < r_seq_alt_vec.len() && r_seq_alt_vec[i as usize] != '-' {\n                    is_complete_insertion = false;\n                    break;\n                }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":56,"highlight_start":17,"text":"                if (i as usize) < r_seq_alt_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_alt_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}],"code":{"code":"clippy::collapsible_if","explanation":null},"level":"warning","message":"this `if` statement can be collapsed","spans":[{"byte_end":90684,"byte_start":90461,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1692,"line_start":1687,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":17,"text":"                if (i as usize) < r_seq_alt_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_alt_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` statement can be collapsed\n    --> src/realign.rs:1768:17\n     |\n1768 | /                 if (i as usize) < r_seq_ref_vec.len() {\n1769 | |                     if r_seq_ref_vec[i as usize] != '-' {\n1770 | |                         is_complete_insertion = false;\n1771 | |                         break;\n1772 | |                     }\n1773 | |                 }\n     | |_________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n     |\n1768 ~                 if (i as usize) < r_seq_ref_vec.len() && r_seq_ref_vec[i as usize] != '-' {\n1769 +                     is_complete_insertion = false;\n1770 +                     break;\n1771 +                 }\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"collapse nested if block","rendered":null,"spans":[{"byte_end":94568,"byte_start":94345,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1773,"line_start":1768,"suggested_replacement":"if (i as usize) < r_seq_ref_vec.len() && r_seq_ref_vec[i as usize] != '-' {\n                    is_complete_insertion = false;\n                    break;\n                }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":56,"highlight_start":17,"text":"                if (i as usize) < r_seq_ref_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_ref_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}],"code":{"code":"clippy::collapsible_if","explanation":null},"level":"warning","message":"this `if` statement can be collapsed","spans":[{"byte_end":94568,"byte_start":94345,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1773,"line_start":1768,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":17,"text":"                if (i as usize) < r_seq_ref_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_ref_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` statement can be collapsed\n    --> src/realign.rs:1785:17\n     |\n1785 | /                 if (i as usize) < r_seq_alt_vec.len() {\n1786 | |                     if r_seq_alt_vec[i as usize] != '-' {\n1787 | |                         is_complete_insertion = false;\n1788 | |                         break;\n1789 | |                     }\n1790 | |                 }\n     | |_________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n     |\n1785 ~                 if (i as usize) < r_seq_alt_vec.len() && r_seq_alt_vec[i as usize] != '-' {\n1786 +                     is_complete_insertion = false;\n1787 +                     break;\n1788 +                 }\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"collapse nested if block","rendered":null,"spans":[{"byte_end":95438,"byte_start":95215,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1790,"line_start":1785,"suggested_replacement":"if (i as usize) < r_seq_alt_vec.len() && r_seq_alt_vec[i as usize] != '-' {\n                    is_complete_insertion = false;\n                    break;\n                }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":56,"highlight_start":17,"text":"                if (i as usize) < r_seq_alt_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_alt_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}],"code":{"code":"clippy::collapsible_if","explanation":null},"level":"warning","message":"this `if` statement can be collapsed","spans":[{"byte_end":95438,"byte_start":95215,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1790,"line_start":1785,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":17,"text":"                if (i as usize) < r_seq_alt_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_alt_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: very complex type used. Consider factoring parts into `type` definitions\n  --> src/topGeneByExpressionVariance.rs:56:6\n   |\n56 |   ) -> Result<(\n   |  ______^\n57 | |     Matrix<f64, Dyn, Dyn, VecStorage<f64, Dyn, Dyn>>,\n58 | |     Vec<String>,\n59 | | )> {\n   | |__^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity\n   = note: `#[warn(clippy::type_complexity)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::type_complexity)]` on by default","rendered":null,"spans":[]}],"code":{"code":"clippy::type_complexity","explanation":null},"level":"warning","message":"very complex type used. Consider factoring parts into `type` definitions","spans":[{"byte_end":2467,"byte_start":2385,"column_end":3,"column_start":6,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":59,"line_start":56,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":14,"highlight_start":6,"text":") -> Result<("},{"highlight_end":54,"highlight_start":1,"text":"    Matrix<f64, Dyn, Dyn, VecStorage<f64, Dyn, Dyn>>,"},{"highlight_end":17,"highlight_start":1,"text":"    Vec<String>,"},{"highlight_end":3,"highlight_start":1,"text":")> {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` statement can be collapsed\n    --> src/realign.rs:1670:17\n     |\n1670 | /                 if (i as usize) < r_seq_ref_vec.len() {\n1671 | |                     if r_seq_ref_vec[i as usize] != '-' {\n1672 | |                         is_complete_insertion = false;\n1673 | |                         break;\n1674 | |                     }\n1675 | |                 }\n     | |_________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n     = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n     |\n1670 ~                 if (i as usize) < r_seq_ref_vec.len() && r_seq_ref_vec[i as usize] != '-' {\n1671 +                     is_complete_insertion = false;\n1672 +                     break;\n1673 +                 }\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::collapsible_if)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"collapse nested if block","rendered":null,"spans":[{"byte_end":89814,"byte_start":89591,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1675,"line_start":1670,"suggested_replacement":"if (i as usize) < r_seq_ref_vec.len() && r_seq_ref_vec[i as usize] != '-' {\n                    is_complete_insertion = false;\n                    break;\n                }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":56,"highlight_start":17,"text":"                if (i as usize) < r_seq_ref_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_ref_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}],"code":{"code":"clippy::collapsible_if","explanation":null},"level":"warning","message":"this `if` statement can be collapsed","spans":[{"byte_end":89814,"byte_start":89591,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1675,"line_start":1670,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":17,"text":"                if (i as usize) < r_seq_ref_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_ref_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` statement can be collapsed\n    --> src/realign.rs:1687:17\n     |\n1687 | /                 if (i as usize) < r_seq_alt_vec.len() {\n1688 | |                     if r_seq_alt_vec[i as usize] != '-' {\n1689 | |                         is_complete_insertion = false;\n1690 | |                         break;\n1691 | |                     }\n1692 | |                 }\n     | |_________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n     |\n1687 ~                 if (i as usize) < r_seq_alt_vec.len() && r_seq_alt_vec[i as usize] != '-' {\n1688 +                     is_complete_insertion = false;\n1689 +                     break;\n1690 +                 }\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"collapse nested if block","rendered":null,"spans":[{"byte_end":90684,"byte_start":90461,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1692,"line_start":1687,"suggested_replacement":"if (i as usize) < r_seq_alt_vec.len() && r_seq_alt_vec[i as usize] != '-' {\n                    is_complete_insertion = false;\n                    break;\n                }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":56,"highlight_start":17,"text":"                if (i as usize) < r_seq_alt_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_alt_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}],"code":{"code":"clippy::collapsible_if","explanation":null},"level":"warning","message":"this `if` statement can be collapsed","spans":[{"byte_end":90684,"byte_start":90461,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1692,"line_start":1687,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":17,"text":"                if (i as usize) < r_seq_alt_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_alt_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` statement can be collapsed\n    --> src/realign.rs:1768:17\n     |\n1768 | /                 if (i as usize) < r_seq_ref_vec.len() {\n1769 | |                     if r_seq_ref_vec[i as usize] != '-' {\n1770 | |                         is_complete_insertion = false;\n1771 | |                         break;\n1772 | |                     }\n1773 | |                 }\n     | |_________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n     |\n1768 ~                 if (i as usize) < r_seq_ref_vec.len() && r_seq_ref_vec[i as usize] != '-' {\n1769 +                     is_complete_insertion = false;\n1770 +                     break;\n1771 +                 }\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"collapse nested if block","rendered":null,"spans":[{"byte_end":94568,"byte_start":94345,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1773,"line_start":1768,"suggested_replacement":"if (i as usize) < r_seq_ref_vec.len() && r_seq_ref_vec[i as usize] != '-' {\n                    is_complete_insertion = false;\n                    break;\n                }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":56,"highlight_start":17,"text":"                if (i as usize) < r_seq_ref_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_ref_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}],"code":{"code":"clippy::collapsible_if","explanation":null},"level":"warning","message":"this `if` statement can be collapsed","spans":[{"byte_end":94568,"byte_start":94345,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1773,"line_start":1768,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":17,"text":"                if (i as usize) < r_seq_ref_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_ref_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` statement can be collapsed\n    --> src/realign.rs:1785:17\n     |\n1785 | /                 if (i as usize) < r_seq_alt_vec.len() {\n1786 | |                     if r_seq_alt_vec[i as usize] != '-' {\n1787 | |                         is_complete_insertion = false;\n1788 | |                         break;\n1789 | |                     }\n1790 | |                 }\n     | |_________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n     |\n1785 ~                 if (i as usize) < r_seq_alt_vec.len() && r_seq_alt_vec[i as usize] != '-' {\n1786 +                     is_complete_insertion = false;\n1787 +                     break;\n1788 +                 }\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"collapse nested if block","rendered":null,"spans":[{"byte_end":95438,"byte_start":95215,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1790,"line_start":1785,"suggested_replacement":"if (i as usize) < r_seq_alt_vec.len() && r_seq_alt_vec[i as usize] != '-' {\n                    is_complete_insertion = false;\n                    break;\n                }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":56,"highlight_start":17,"text":"                if (i as usize) < r_seq_alt_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_alt_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}],"code":{"code":"clippy::collapsible_if","explanation":null},"level":"warning","message":"this `if` statement can be collapsed","spans":[{"byte_end":95438,"byte_start":95215,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1790,"line_start":1785,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":17,"text":"                if (i as usize) < r_seq_alt_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_alt_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: returning the result of a `let` binding from a block\n  --> src/stats_functions.rs:28:13\n   |\n20 | /             let p_value = fishers_exact(&[\n21 | |                 alternate_forward_count,\n22 | |                 alternate_reverse_count,\n23 | |                 reference_forward_count,\n...  |\n26 | |             .unwrap()\n27 | |             .two_tail_pvalue;\n   | |_____________________________- unnecessary `let` binding\n28 |               p_value\n   |               ^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n   = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n   |\n20 ~             \n21 ~             fishers_exact(&[\n22 +                 alternate_forward_count,\n23 +                 alternate_reverse_count,\n24 +                 reference_forward_count,\n25 +                 reference_reverse_count,\n26 +             ])\n27 +             .unwrap()\n28 +             .two_tail_pvalue\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::let_and_return)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"return the expression directly","rendered":null,"spans":[{"byte_end":1383,"byte_start":1122,"column_end":30,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":27,"line_start":20,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":13,"text":"            let p_value = fishers_exact(&["},{"highlight_end":41,"highlight_start":1,"text":"                alternate_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                alternate_reverse_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_reverse_count,"},{"highlight_end":15,"highlight_start":1,"text":"            ])"},{"highlight_end":22,"highlight_start":1,"text":"            .unwrap()"},{"highlight_end":30,"highlight_start":1,"text":"            .two_tail_pvalue;"}]},{"byte_end":1403,"byte_start":1396,"column_end":20,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":28,"line_start":28,"suggested_replacement":"fishers_exact(&[\n                alternate_forward_count,\n                alternate_reverse_count,\n                reference_forward_count,\n                reference_reverse_count,\n            ])\n            .unwrap()\n            .two_tail_pvalue","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":20,"highlight_start":13,"text":"            p_value"}]}]}],"code":{"code":"clippy::let_and_return","explanation":null},"level":"warning","message":"returning the result of a `let` binding from a block","spans":[{"byte_end":1383,"byte_start":1122,"column_end":30,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":false,"label":"unnecessary `let` binding","line_end":27,"line_start":20,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":13,"text":"            let p_value = fishers_exact(&["},{"highlight_end":41,"highlight_start":1,"text":"                alternate_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                alternate_reverse_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_reverse_count,"},{"highlight_end":15,"highlight_start":1,"text":"            ])"},{"highlight_end":22,"highlight_start":1,"text":"            .unwrap()"},{"highlight_end":30,"highlight_start":1,"text":"            .two_tail_pvalue;"}]},{"byte_end":1403,"byte_start":1396,"column_end":20,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":28,"line_start":28,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":13,"text":"            p_value"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/align.rs:129:29\n    |\n129 | ...                   q_seq_ref: q_seq_ref,\n    |                       ^^^^^^^^^^^^^^^^^^^^ help: replace it with: `q_seq_ref`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n    = note: `#[warn(clippy::redundant_field_names)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::redundant_field_names)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":7214,"byte_start":7194,"column_end":49,"column_start":29,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":129,"line_start":129,"suggested_replacement":"q_seq_ref","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":49,"highlight_start":29,"text":"                            q_seq_ref: q_seq_ref,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":7214,"byte_start":7194,"column_end":49,"column_start":29,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":129,"line_start":129,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":49,"highlight_start":29,"text":"                            q_seq_ref: q_seq_ref,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/align.rs:130:29\n    |\n130 | ...                   align_ref: align_ref,\n    |                       ^^^^^^^^^^^^^^^^^^^^ help: replace it with: `align_ref`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":7264,"byte_start":7244,"column_end":49,"column_start":29,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":130,"line_start":130,"suggested_replacement":"align_ref","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":49,"highlight_start":29,"text":"                            align_ref: align_ref,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":7264,"byte_start":7244,"column_end":49,"column_start":29,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":130,"line_start":130,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":49,"highlight_start":29,"text":"                            align_ref: align_ref,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/align.rs:131:29\n    |\n131 | ...                   r_seq_ref: r_seq_ref,\n    |                       ^^^^^^^^^^^^^^^^^^^^ help: replace it with: `r_seq_ref`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":7314,"byte_start":7294,"column_end":49,"column_start":29,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":131,"line_start":131,"suggested_replacement":"r_seq_ref","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":49,"highlight_start":29,"text":"                            r_seq_ref: r_seq_ref,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":7314,"byte_start":7294,"column_end":49,"column_start":29,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":131,"line_start":131,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":49,"highlight_start":29,"text":"                            r_seq_ref: r_seq_ref,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/align.rs:132:29\n    |\n132 | ...                   q_seq_alt: q_seq_alt,\n    |                       ^^^^^^^^^^^^^^^^^^^^ help: replace it with: `q_seq_alt`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":7364,"byte_start":7344,"column_end":49,"column_start":29,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":132,"line_start":132,"suggested_replacement":"q_seq_alt","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":49,"highlight_start":29,"text":"                            q_seq_alt: q_seq_alt,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":7364,"byte_start":7344,"column_end":49,"column_start":29,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":132,"line_start":132,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":49,"highlight_start":29,"text":"                            q_seq_alt: q_seq_alt,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/align.rs:133:29\n    |\n133 | ...                   align_alt: align_alt,\n    |                       ^^^^^^^^^^^^^^^^^^^^ help: replace it with: `align_alt`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":7414,"byte_start":7394,"column_end":49,"column_start":29,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":133,"line_start":133,"suggested_replacement":"align_alt","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":49,"highlight_start":29,"text":"                            align_alt: align_alt,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":7414,"byte_start":7394,"column_end":49,"column_start":29,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":133,"line_start":133,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":49,"highlight_start":29,"text":"                            align_alt: align_alt,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/align.rs:134:29\n    |\n134 | ...                   r_seq_alt: r_seq_alt,\n    |                       ^^^^^^^^^^^^^^^^^^^^ help: replace it with: `r_seq_alt`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":7464,"byte_start":7444,"column_end":49,"column_start":29,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":134,"line_start":134,"suggested_replacement":"r_seq_alt","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":49,"highlight_start":29,"text":"                            r_seq_alt: r_seq_alt,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":7464,"byte_start":7444,"column_end":49,"column_start":29,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":134,"line_start":134,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":49,"highlight_start":29,"text":"                            r_seq_alt: r_seq_alt,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/align.rs:135:29\n    |\n135 | ...                   red_region_start_alt: red_region_start_alt,\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `red_region_start_alt`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":7536,"byte_start":7494,"column_end":71,"column_start":29,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":135,"line_start":135,"suggested_replacement":"red_region_start_alt","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":71,"highlight_start":29,"text":"                            red_region_start_alt: red_region_start_alt,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":7536,"byte_start":7494,"column_end":71,"column_start":29,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":135,"line_start":135,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":71,"highlight_start":29,"text":"                            red_region_start_alt: red_region_start_alt,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/align.rs:136:29\n    |\n136 | ...                   red_region_start_ref: red_region_start_ref,\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `red_region_start_ref`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":7608,"byte_start":7566,"column_end":71,"column_start":29,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":136,"line_start":136,"suggested_replacement":"red_region_start_ref","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":71,"highlight_start":29,"text":"                            red_region_start_ref: red_region_start_ref,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":7608,"byte_start":7566,"column_end":71,"column_start":29,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":136,"line_start":136,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":71,"highlight_start":29,"text":"                            red_region_start_ref: red_region_start_ref,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/align.rs:137:29\n    |\n137 | ...                   red_region_stop_alt: red_region_stop_alt,\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `red_region_stop_alt`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":7678,"byte_start":7638,"column_end":69,"column_start":29,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":137,"line_start":137,"suggested_replacement":"red_region_stop_alt","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":69,"highlight_start":29,"text":"                            red_region_stop_alt: red_region_stop_alt,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":7678,"byte_start":7638,"column_end":69,"column_start":29,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":137,"line_start":137,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":29,"text":"                            red_region_stop_alt: red_region_stop_alt,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/align.rs:138:29\n    |\n138 | ...                   red_region_stop_ref: red_region_stop_ref,\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `red_region_stop_ref`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":7748,"byte_start":7708,"column_end":69,"column_start":29,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":138,"line_start":138,"suggested_replacement":"red_region_stop_ref","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":69,"highlight_start":29,"text":"                            red_region_stop_ref: red_region_stop_ref,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":7748,"byte_start":7708,"column_end":69,"column_start":29,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":138,"line_start":138,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":29,"text":"                            red_region_stop_ref: red_region_stop_ref,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: returning the result of a `let` binding from a block\n  --> src/stats_functions.rs:58:13\n   |\n50 | /             let p_value = fishers_exact(&[\n51 | |                 alternate_forward_count,\n52 | |                 alternate_reverse_count,\n53 | |                 reference_forward_count,\n...  |\n56 | |             .unwrap()\n57 | |             .two_tail_pvalue;\n   | |_____________________________- unnecessary `let` binding\n58 |               p_value\n   |               ^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n   |\n50 ~             \n51 ~             fishers_exact(&[\n52 +                 alternate_forward_count,\n53 +                 alternate_reverse_count,\n54 +                 reference_forward_count,\n55 +                 reference_reverse_count,\n56 +             ])\n57 +             .unwrap()\n58 +             .two_tail_pvalue\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"return the expression directly","rendered":null,"spans":[{"byte_end":2412,"byte_start":2151,"column_end":30,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":57,"line_start":50,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":13,"text":"            let p_value = fishers_exact(&["},{"highlight_end":41,"highlight_start":1,"text":"                alternate_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                alternate_reverse_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_reverse_count,"},{"highlight_end":15,"highlight_start":1,"text":"            ])"},{"highlight_end":22,"highlight_start":1,"text":"            .unwrap()"},{"highlight_end":30,"highlight_start":1,"text":"            .two_tail_pvalue;"}]},{"byte_end":2432,"byte_start":2425,"column_end":20,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":58,"line_start":58,"suggested_replacement":"fishers_exact(&[\n                alternate_forward_count,\n                alternate_reverse_count,\n                reference_forward_count,\n                reference_reverse_count,\n            ])\n            .unwrap()\n            .two_tail_pvalue","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":20,"highlight_start":13,"text":"            p_value"}]}]}],"code":{"code":"clippy::let_and_return","explanation":null},"level":"warning","message":"returning the result of a `let` binding from a block","spans":[{"byte_end":2412,"byte_start":2151,"column_end":30,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":false,"label":"unnecessary `let` binding","line_end":57,"line_start":50,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":13,"text":"            let p_value = fishers_exact(&["},{"highlight_end":41,"highlight_start":1,"text":"                alternate_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                alternate_reverse_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_reverse_count,"},{"highlight_end":15,"highlight_start":1,"text":"            ])"},{"highlight_end":22,"highlight_start":1,"text":"            .unwrap()"},{"highlight_end":30,"highlight_start":1,"text":"            .two_tail_pvalue;"}]},{"byte_end":2432,"byte_start":2425,"column_end":20,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":58,"line_start":58,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":13,"text":"            p_value"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/sv.rs:253:25\n    |\n253 |                         ridx: ridx,\n    |                         ^^^^^^^^^^ help: replace it with: `ridx`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n    = note: `#[warn(clippy::redundant_field_names)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::redundant_field_names)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":19224,"byte_start":19214,"column_end":35,"column_start":25,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":253,"line_start":253,"suggested_replacement":"ridx","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":35,"highlight_start":25,"text":"                        ridx: ridx,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":19224,"byte_start":19214,"column_end":35,"column_start":25,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":253,"line_start":253,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":25,"text":"                        ridx: ridx,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/sv.rs:258:25\n    |\n258 |                         ridx: ridx,\n    |                         ^^^^^^^^^^ help: replace it with: `ridx`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":19437,"byte_start":19427,"column_end":35,"column_start":25,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":258,"line_start":258,"suggested_replacement":"ridx","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":35,"highlight_start":25,"text":"                        ridx: ridx,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":19437,"byte_start":19427,"column_end":35,"column_start":25,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":258,"line_start":258,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":25,"text":"                        ridx: ridx,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/sv.rs:371:25\n    |\n371 |                         ridx: ridx,\n    |                         ^^^^^^^^^^ help: replace it with: `ridx`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":26992,"byte_start":26982,"column_end":35,"column_start":25,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":371,"line_start":371,"suggested_replacement":"ridx","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":35,"highlight_start":25,"text":"                        ridx: ridx,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":26992,"byte_start":26982,"column_end":35,"column_start":25,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":371,"line_start":371,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":25,"text":"                        ridx: ridx,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/sv.rs:376:25\n    |\n376 |                         ridx: ridx,\n    |                         ^^^^^^^^^^ help: replace it with: `ridx`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":27205,"byte_start":27195,"column_end":35,"column_start":25,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":376,"line_start":376,"suggested_replacement":"ridx","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":35,"highlight_start":25,"text":"                        ridx: ridx,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":27205,"byte_start":27195,"column_end":35,"column_start":25,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":376,"line_start":376,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":25,"text":"                        ridx: ridx,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n  --> src/bigwig.rs:87:8\n   |\n87 |     if bigwig_file_url.starts_with(\"http://\") == true\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `bigwig_file_url.starts_with(\"http://\")`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::bool_comparison)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":4968,"byte_start":4922,"column_end":54,"column_start":8,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":87,"line_start":87,"suggested_replacement":"bigwig_file_url.starts_with(\"http://\")","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":8,"text":"    if bigwig_file_url.starts_with(\"http://\") == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":4968,"byte_start":4922,"column_end":54,"column_start":8,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":87,"line_start":87,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":8,"text":"    if bigwig_file_url.starts_with(\"http://\") == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n  --> src/bigwig.rs:88:12\n   |\n88 |         || bigwig_file_url.starts_with(\"https://\") == true\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `bigwig_file_url.starts_with(\"https://\")`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":5027,"byte_start":4980,"column_end":59,"column_start":12,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":88,"line_start":88,"suggested_replacement":"bigwig_file_url.starts_with(\"https://\")","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":59,"highlight_start":12,"text":"        || bigwig_file_url.starts_with(\"https://\") == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":5027,"byte_start":4980,"column_end":59,"column_start":12,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":88,"line_start":88,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":59,"highlight_start":12,"text":"        || bigwig_file_url.starts_with(\"https://\") == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n  --> src/bigwig.rs:89:12\n   |\n89 |         || bigwig_file_url.starts_with(\"www.\") == true\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `bigwig_file_url.starts_with(\"www.\")`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":5082,"byte_start":5039,"column_end":55,"column_start":12,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":89,"line_start":89,"suggested_replacement":"bigwig_file_url.starts_with(\"www.\")","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":55,"highlight_start":12,"text":"        || bigwig_file_url.starts_with(\"www.\") == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":5082,"byte_start":5039,"column_end":55,"column_start":12,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":89,"line_start":89,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":12,"text":"        || bigwig_file_url.starts_with(\"www.\") == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:106:21\n    |\n106 |                     start_pos as f64,\n    |                     ^^^^^^^^^^^^^^^^ help: try: `start_pos`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::unnecessary_cast)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":5677,"byte_start":5661,"column_end":37,"column_start":21,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":106,"line_start":106,"suggested_replacement":"start_pos","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":37,"highlight_start":21,"text":"                    start_pos as f64,"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":5677,"byte_start":5661,"column_end":37,"column_start":21,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":106,"line_start":106,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":21,"text":"                    start_pos as f64,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:107:21\n    |\n107 |                     stop_pos as f64,\n    |                     ^^^^^^^^^^^^^^^ help: try: `stop_pos`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":5714,"byte_start":5699,"column_end":36,"column_start":21,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":107,"line_start":107,"suggested_replacement":"stop_pos","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":36,"highlight_start":21,"text":"                    stop_pos as f64,"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":5714,"byte_start":5699,"column_end":36,"column_start":21,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":107,"line_start":107,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":21,"text":"                    stop_pos as f64,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:130:21\n    |\n130 |                     start_pos as f64,\n    |                     ^^^^^^^^^^^^^^^^ help: try: `start_pos`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":6510,"byte_start":6494,"column_end":37,"column_start":21,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":130,"line_start":130,"suggested_replacement":"start_pos","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":37,"highlight_start":21,"text":"                    start_pos as f64,"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":6510,"byte_start":6494,"column_end":37,"column_start":21,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":130,"line_start":130,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":21,"text":"                    start_pos as f64,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:131:21\n    |\n131 |                     stop_pos as f64,\n    |                     ^^^^^^^^^^^^^^^ help: try: `stop_pos`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":6547,"byte_start":6532,"column_end":36,"column_start":21,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":131,"line_start":131,"suggested_replacement":"stop_pos","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":36,"highlight_start":21,"text":"                    stop_pos as f64,"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":6547,"byte_start":6532,"column_end":36,"column_start":21,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":131,"line_start":131,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":21,"text":"                    stop_pos as f64,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/bigwig.rs:188:31\n    |\n188 |         reduction_levels.push(reduction_level as u32);\n    |                               ^^^^^^^^^^^^^^^^^^^^^^ help: try: `reduction_level`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":8236,"byte_start":8214,"column_end":53,"column_start":31,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":188,"line_start":188,"suggested_replacement":"reduction_level","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":53,"highlight_start":31,"text":"        reduction_levels.push(reduction_level as u32);"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`u32` -> `u32`)","spans":[{"byte_end":8236,"byte_start":8214,"column_end":53,"column_start":31,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":188,"line_start":188,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":53,"highlight_start":31,"text":"        reduction_levels.push(reduction_level as u32);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/bigwig.rs:190:8\n    |\n190 |     if reduction_levels.contains(&1) == false {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!reduction_levels.contains(&1)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":8290,"byte_start":8252,"column_end":46,"column_start":8,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":190,"line_start":190,"suggested_replacement":"!reduction_levels.contains(&1)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":46,"highlight_start":8,"text":"    if reduction_levels.contains(&1) == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":8290,"byte_start":8252,"column_end":46,"column_start":8,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":190,"line_start":190,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":8,"text":"    if reduction_levels.contains(&1) == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"readHDF5","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/readHDF5.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: `to_string` applied to a type that implements `Display` in `format!` args\n   --> src/readHDF5.rs:264:39\n    |\n264 | ...                   samples[i].to_string(),\n    |                                 ^^^^^^^^^^^^ help: remove this\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#to_string_in_format_args\n    = note: `#[warn(clippy::to_string_in_format_args)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#to_string_in_format_args","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::to_string_in_format_args)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove this","rendered":null,"spans":[{"byte_end":9001,"byte_start":8989,"column_end":51,"column_start":39,"expansion":null,"file_name":"src/readHDF5.rs","is_primary":true,"label":null,"line_end":264,"line_start":264,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":39,"text":"                            samples[i].to_string(),"}]}]}],"code":{"code":"clippy::to_string_in_format_args","explanation":null},"level":"warning","message":"`to_string` applied to a type that implements `Display` in `format!` args","spans":[{"byte_end":9001,"byte_start":8989,"column_end":51,"column_start":39,"expansion":null,"file_name":"src/readHDF5.rs","is_primary":true,"label":null,"line_end":264,"line_start":264,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":39,"text":"                            samples[i].to_string(),"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"readHDF5","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/readHDF5.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: `to_string` applied to a type that implements `Display` in `format!` args\n   --> src/readHDF5.rs:265:47\n    |\n265 | ...                   gene_expression[i].to_string()\n    |                                         ^^^^^^^^^^^^ help: remove this\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#to_string_in_format_args\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#to_string_in_format_args","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove this","rendered":null,"spans":[{"byte_end":9061,"byte_start":9049,"column_end":59,"column_start":47,"expansion":null,"file_name":"src/readHDF5.rs","is_primary":true,"label":null,"line_end":265,"line_start":265,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":59,"highlight_start":47,"text":"                            gene_expression[i].to_string()"}]}]}],"code":{"code":"clippy::to_string_in_format_args","explanation":null},"level":"warning","message":"`to_string` applied to a type that implements `Display` in `format!` args","spans":[{"byte_end":9061,"byte_start":9049,"column_end":59,"column_start":47,"expansion":null,"file_name":"src/readHDF5.rs","is_primary":true,"label":null,"line_end":265,"line_start":265,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":59,"highlight_start":47,"text":"                            gene_expression[i].to_string()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: very complex type used. Consider factoring parts into `type` definitions\n   --> src/topGeneByExpressionVariance.rs:326:6\n    |\n326 |   ) -> (\n    |  ______^\n327 | |     Matrix<f64, Dyn, Dyn, VecStorage<f64, Dyn, Dyn>>,\n328 | |     Vec<String>,\n329 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity","rendered":null,"spans":[]}],"code":{"code":"clippy::type_complexity","explanation":null},"level":"warning","message":"very complex type used. Consider factoring parts into `type` definitions","spans":[{"byte_end":11791,"byte_start":11717,"column_end":2,"column_start":6,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":329,"line_start":326,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":7,"highlight_start":6,"text":") -> ("},{"highlight_end":54,"highlight_start":1,"text":"    Matrix<f64, Dyn, Dyn, VecStorage<f64, Dyn, Dyn>>,"},{"highlight_end":17,"highlight_start":1,"text":"    Vec<String>,"},{"highlight_end":2,"highlight_start":1,"text":") {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/topGeneByExpressionVariance.rs:343:12\n    |\n343 |         if first == true {\n    |            ^^^^^^^^^^^^^ help: try simplifying it as shown: `first`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n    = note: `#[warn(clippy::bool_comparison)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::bool_comparison)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":12363,"byte_start":12350,"column_end":25,"column_start":12,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":343,"line_start":343,"suggested_replacement":"first","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":25,"highlight_start":12,"text":"        if first == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":12363,"byte_start":12350,"column_end":25,"column_start":12,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":343,"line_start":343,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":25,"highlight_start":12,"text":"        if first == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:198:13\n    |\n198 |         if (difference as f64 / level as f64).floor() < max_entries_parsed_limit as f64 {\n    |             ^^^^^^^^^^^^^^^^^ help: try: `difference`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":8593,"byte_start":8576,"column_end":30,"column_start":13,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":198,"line_start":198,"suggested_replacement":"difference","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":30,"highlight_start":13,"text":"        if (difference as f64 / level as f64).floor() < max_entries_parsed_limit as f64 {"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":8593,"byte_start":8576,"column_end":30,"column_start":13,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":198,"line_start":198,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":13,"text":"        if (difference as f64 / level as f64).floor() < max_entries_parsed_limit as f64 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/stats_functions.rs:194:12\n    |\n194 |         if is_repeat == false {\n    |            ^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!is_repeat`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n    = note: `#[warn(clippy::bool_comparison)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::bool_comparison)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":7870,"byte_start":7852,"column_end":30,"column_start":12,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":194,"line_start":194,"suggested_replacement":"!is_repeat","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":30,"highlight_start":12,"text":"        if is_repeat == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":7870,"byte_start":7852,"column_end":30,"column_start":12,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":194,"line_start":194,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":12,"text":"        if is_repeat == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/stats_functions.rs:208:16\n    |\n208 |             if is_repeat == false {\n    |                ^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!is_repeat`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":8390,"byte_start":8372,"column_end":34,"column_start":16,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":208,"line_start":208,"suggested_replacement":"!is_repeat","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":34,"highlight_start":16,"text":"            if is_repeat == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":8390,"byte_start":8372,"column_end":34,"column_start":16,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":208,"line_start":208,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":16,"text":"            if is_repeat == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/bigwig.rs:202:36\n    |\n202 |     if closest_level == Some(1) && unity_added == true {\n    |                                    ^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `unity_added`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":8743,"byte_start":8724,"column_end":55,"column_start":36,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":202,"line_start":202,"suggested_replacement":"unity_added","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":55,"highlight_start":36,"text":"    if closest_level == Some(1) && unity_added == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":8743,"byte_start":8724,"column_end":55,"column_start":36,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":202,"line_start":202,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":36,"text":"    if closest_level == Some(1) && unity_added == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/stats_functions.rs:266:26\n    |\n266 |     let u_y = weight_y - (group2.len() as f64 * (group2.len() as f64 + 1.0) / 2.0) as f64;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(group2.len() as f64 * (group2.len() as f64 + 1.0) / 2.0)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::unnecessary_cast)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":10522,"byte_start":10458,"column_end":90,"column_start":26,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":266,"line_start":266,"suggested_replacement":"(group2.len() as f64 * (group2.len() as f64 + 1.0) / 2.0)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":90,"highlight_start":26,"text":"    let u_y = weight_y - (group2.len() as f64 * (group2.len() as f64 + 1.0) / 2.0) as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":10522,"byte_start":10458,"column_end":90,"column_start":26,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":266,"line_start":266,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":90,"highlight_start":26,"text":"    let u_y = weight_y - (group2.len() as f64 * (group2.len() as f64 + 1.0) / 2.0) as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/stats_functions.rs:270:26\n    |\n270 |     let u_x = weight_x - (group1.len() as f64 * (group1.len() as f64 + 1.0) / 2.0) as f64;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(group1.len() as f64 * (group1.len() as f64 + 1.0) / 2.0)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":10726,"byte_start":10662,"column_end":90,"column_start":26,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":270,"line_start":270,"suggested_replacement":"(group1.len() as f64 * (group1.len() as f64 + 1.0) / 2.0)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":90,"highlight_start":26,"text":"    let u_x = weight_x - (group1.len() as f64 * (group1.len() as f64 + 1.0) / 2.0) as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":10726,"byte_start":10662,"column_end":90,"column_start":26,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":270,"line_start":270,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":90,"highlight_start":26,"text":"    let u_x = weight_x - (group1.len() as f64 * (group1.len() as f64 + 1.0) / 2.0) as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/stats_functions.rs:286:64\n    |\n286 |     if group1.len() < threshold && group2.len() < threshold && repeat_present == false {\n    |                                                                ^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!repeat_present`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":11290,"byte_start":11267,"column_end":87,"column_start":64,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":286,"line_start":286,"suggested_replacement":"!repeat_present","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":64,"text":"    if group1.len() < threshold && group2.len() < threshold && repeat_present == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":11290,"byte_start":11267,"column_end":87,"column_start":64,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":286,"line_start":286,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":64,"text":"    if group1.len() < threshold && group2.len() < threshold && repeat_present == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:215:35\n    |\n215 |     let desired_reduction: u32 = ((exact_offset as f64) / 2.0).floor() as u32;\n    |                                   ^^^^^^^^^^^^^^^^^^^^^ help: try: `exact_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":9180,"byte_start":9159,"column_end":56,"column_start":35,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":215,"line_start":215,"suggested_replacement":"exact_offset","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":56,"highlight_start":35,"text":"    let desired_reduction: u32 = ((exact_offset as f64) / 2.0).floor() as u32;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":9180,"byte_start":9159,"column_end":56,"column_start":35,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":215,"line_start":215,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":35,"text":"    let desired_reduction: u32 = ((exact_offset as f64) / 2.0).floor() as u32;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/bigwig.rs:224:35\n    |\n224 |             reduction_levels.push(reduction_level as u32);\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^ help: try: `reduction_level`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":9532,"byte_start":9510,"column_end":57,"column_start":35,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":224,"line_start":224,"suggested_replacement":"reduction_level","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":57,"highlight_start":35,"text":"            reduction_levels.push(reduction_level as u32);"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`u32` -> `u32`)","spans":[{"byte_end":9532,"byte_start":9510,"column_end":57,"column_start":35,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":224,"line_start":224,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":57,"highlight_start":35,"text":"            reduction_levels.push(reduction_level as u32);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/bigwig.rs:226:12\n    |\n226 |         if reduction_levels.contains(&1) == false {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!reduction_levels.contains(&1)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":9594,"byte_start":9556,"column_end":50,"column_start":12,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":226,"line_start":226,"suggested_replacement":"!reduction_levels.contains(&1)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":50,"highlight_start":12,"text":"        if reduction_levels.contains(&1) == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":9594,"byte_start":9556,"column_end":50,"column_start":12,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":226,"line_start":226,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":12,"text":"        if reduction_levels.contains(&1) == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is only used to index `rank_frequencies`\n   --> src/stats_functions.rs:317:18\n    |\n317 |         for i in 0..rank_frequencies.len() {\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n317 -         for i in 0..rank_frequencies.len() {\n317 +         for <item> in &rank_frequencies {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_range_loop)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":12588,"byte_start":12587,"column_end":14,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":317,"line_start":317,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":14,"highlight_start":13,"text":"        for i in 0..rank_frequencies.len() {"}]},{"byte_end":12617,"byte_start":12592,"column_end":43,"column_start":18,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":317,"line_start":317,"suggested_replacement":"&rank_frequencies","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":43,"highlight_start":18,"text":"        for i in 0..rank_frequencies.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is only used to index `rank_frequencies`","spans":[{"byte_end":12617,"byte_start":12592,"column_end":43,"column_start":18,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":317,"line_start":317,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":18,"text":"        for i in 0..rank_frequencies.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting the result of `i64::abs()` to u64\n   --> src/bigwig.rs:234:29\n    |\n234 |             let diff: u64 = (desired_reduction as i64 - level as i64).abs() as u64;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `(desired_reduction as i64 - level as i64).unsigned_abs()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_abs_to_unsigned\n    = note: `#[warn(clippy::cast_abs_to_unsigned)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_abs_to_unsigned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::cast_abs_to_unsigned)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace with","rendered":null,"spans":[{"byte_end":10033,"byte_start":9979,"column_end":83,"column_start":29,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":234,"line_start":234,"suggested_replacement":"(desired_reduction as i64 - level as i64).unsigned_abs()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":83,"highlight_start":29,"text":"            let diff: u64 = (desired_reduction as i64 - level as i64).abs() as u64;"}]}]}],"code":{"code":"clippy::cast_abs_to_unsigned","explanation":null},"level":"warning","message":"casting the result of `i64::abs()` to u64","spans":[{"byte_end":10033,"byte_start":9979,"column_end":83,"column_start":29,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":234,"line_start":234,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":83,"highlight_start":29,"text":"            let diff: u64 = (desired_reduction as i64 - level as i64).abs() as u64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this import is redundant\n  --> src/cluster.rs:54:1\n   |\n54 | use colorgrad;\n   | ^^^^^^^^^^^^^^ help: remove it entirely\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports\n   = note: `#[warn(clippy::single_component_path_imports)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::single_component_path_imports)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove it entirely","rendered":null,"spans":[{"byte_end":3619,"byte_start":3604,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":55,"line_start":54,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":15,"highlight_start":1,"text":"use colorgrad;"},{"highlight_end":1,"highlight_start":1,"text":"use json;"}]}]}],"code":{"code":"clippy::single_component_path_imports","explanation":null},"level":"warning","message":"this import is redundant","spans":[{"byte_end":3618,"byte_start":3604,"column_end":15,"column_start":1,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":54,"line_start":54,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"use colorgrad;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this import is redundant\n  --> src/cluster.rs:55:1\n   |\n55 | use json;\n   | ^^^^^^^^^ help: remove it entirely\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove it entirely","rendered":null,"spans":[{"byte_end":3629,"byte_start":3619,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":56,"line_start":55,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":10,"highlight_start":1,"text":"use json;"},{"highlight_end":1,"highlight_start":1,"text":"use json::JsonValue;"}]}]}],"code":{"code":"clippy::single_component_path_imports","explanation":null},"level":"warning","message":"this import is redundant","spans":[{"byte_end":3628,"byte_start":3619,"column_end":10,"column_start":1,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":55,"line_start":55,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":10,"highlight_start":1,"text":"use json;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/stats_functions.rs:330:12\n    |\n330 |         if correct == true {\n    |            ^^^^^^^^^^^^^^^ help: try simplifying it as shown: `correct`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":13169,"byte_start":13154,"column_end":27,"column_start":12,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":330,"line_start":330,"suggested_replacement":"correct","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":27,"highlight_start":12,"text":"        if correct == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":13169,"byte_start":13154,"column_end":27,"column_start":12,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":330,"line_start":330,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":12,"text":"        if correct == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this import is redundant\n  --> src/cluster.rs:63:1\n   |\n63 | use serde_json;\n   | ^^^^^^^^^^^^^^^ help: remove it entirely\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove it entirely","rendered":null,"spans":[{"byte_end":3853,"byte_start":3837,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":64,"line_start":63,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":16,"highlight_start":1,"text":"use serde_json;"},{"highlight_end":1,"highlight_start":1,"text":"use std::env;"}]}]}],"code":{"code":"clippy::single_component_path_imports","explanation":null},"level":"warning","message":"this import is redundant","spans":[{"byte_end":3852,"byte_start":3837,"column_end":16,"column_start":1,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":63,"line_start":63,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":1,"text":"use serde_json;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/bigwig.rs:244:36\n    |\n244 |     if closest_level == Some(1) && unity_added == true {\n    |                                    ^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `unity_added`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":10395,"byte_start":10376,"column_end":55,"column_start":36,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":244,"line_start":244,"suggested_replacement":"unity_added","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":55,"highlight_start":36,"text":"    if closest_level == Some(1) && unity_added == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":10395,"byte_start":10376,"column_end":55,"column_start":36,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":244,"line_start":244,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":36,"text":"    if closest_level == Some(1) && unity_added == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this function has too many arguments (9/7)\n   --> src/bigwig.rs:251:1\n    |\n251 | / fn calculate_datapoints<\n252 | |     R: bigtools::utils::file::seekableread::Reopen<S>,\n253 | |     S: bigtools::utils::file::seekableread::SeekableRead,\n254 | | >(\n...   |\n263 | |     stop_pos: f64,\n264 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::too_many_arguments)]` on by default","rendered":null,"spans":[]}],"code":{"code":"clippy::too_many_arguments","explanation":null},"level":"warning","message":"this function has too many arguments (9/7)","spans":[{"byte_end":10870,"byte_start":10508,"column_end":2,"column_start":1,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":264,"line_start":251,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":25,"highlight_start":1,"text":"fn calculate_datapoints<"},{"highlight_end":55,"highlight_start":1,"text":"    R: bigtools::utils::file::seekableread::Reopen<S>,"},{"highlight_end":58,"highlight_start":1,"text":"    S: bigtools::utils::file::seekableread::SeekableRead,"},{"highlight_end":3,"highlight_start":1,"text":">("},{"highlight_end":35,"highlight_start":1,"text":"    zoom_headers: Vec<ZoomHeader>,"},{"highlight_end":34,"highlight_start":1,"text":"    mut reader: BigWigRead<R, S>,"},{"highlight_end":30,"highlight_start":1,"text":"    bigwig_file_url: &String,"},{"highlight_end":21,"highlight_start":1,"text":"    is_weburl: bool,"},{"highlight_end":21,"highlight_start":1,"text":"    datapoints: u32,"},{"highlight_end":21,"highlight_start":1,"text":"    difference: f64,"},{"highlight_end":19,"highlight_start":1,"text":"    chrom: String,"},{"highlight_end":20,"highlight_start":1,"text":"    start_pos: f64,"},{"highlight_end":19,"highlight_start":1,"text":"    stop_pos: f64,"},{"highlight_end":2,"highlight_start":1,"text":") {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:265:29\n    |\n265 |     let exact_offset: f64 = difference as f64 / datapoints as f64;\n    |                             ^^^^^^^^^^^^^^^^^ help: try: `difference`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":10918,"byte_start":10901,"column_end":46,"column_start":29,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":265,"line_start":265,"suggested_replacement":"difference","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":46,"highlight_start":29,"text":"    let exact_offset: f64 = difference as f64 / datapoints as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":10918,"byte_start":10901,"column_end":46,"column_start":29,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":265,"line_start":265,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":29,"text":"    let exact_offset: f64 = difference as f64 / datapoints as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting float literal to `f64` is unnecessary\n   --> src/bigwig.rs:268:35\n    |\n268 |     let mut datapoints_sum = vec![0.0 as f64; datapoints as usize]; // Sum of all values within a region\n    |                                   ^^^^^^^^^^ help: try: `0.0_f64`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":11115,"byte_start":11105,"column_end":45,"column_start":35,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":268,"line_start":268,"suggested_replacement":"0.0_f64","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":45,"highlight_start":35,"text":"    let mut datapoints_sum = vec![0.0 as f64; datapoints as usize]; // Sum of all values within a region"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting float literal to `f64` is unnecessary","spans":[{"byte_end":11115,"byte_start":11105,"column_end":45,"column_start":35,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":268,"line_start":268,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":35,"text":"    let mut datapoints_sum = vec![0.0 as f64; datapoints as usize]; // Sum of all values within a region"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:274:32\n    |\n274 |     let mut current_pos: f64 = start_pos as f64; // Initializing current_pos to start position\n    |                                ^^^^^^^^^^^^^^^^ help: try: `start_pos`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":11502,"byte_start":11486,"column_end":48,"column_start":32,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":274,"line_start":274,"suggested_replacement":"start_pos","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":48,"highlight_start":32,"text":"    let mut current_pos: f64 = start_pos as f64; // Initializing current_pos to start position"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":11502,"byte_start":11486,"column_end":48,"column_start":32,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":274,"line_start":274,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":32,"text":"    let mut current_pos: f64 = start_pos as f64; // Initializing current_pos to start position"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:277:23\n    |\n277 |         current_pos = current_pos as f64 + exact_offset as f64;\n    |                       ^^^^^^^^^^^^^^^^^^ help: try: `current_pos`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":11663,"byte_start":11645,"column_end":41,"column_start":23,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":277,"line_start":277,"suggested_replacement":"current_pos","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":41,"highlight_start":23,"text":"        current_pos = current_pos as f64 + exact_offset as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":11663,"byte_start":11645,"column_end":41,"column_start":23,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":277,"line_start":277,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":23,"text":"        current_pos = current_pos as f64 + exact_offset as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:277:44\n    |\n277 |         current_pos = current_pos as f64 + exact_offset as f64;\n    |                                            ^^^^^^^^^^^^^^^^^^^ help: try: `exact_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":11685,"byte_start":11666,"column_end":63,"column_start":44,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":277,"line_start":277,"suggested_replacement":"exact_offset","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":63,"highlight_start":44,"text":"        current_pos = current_pos as f64 + exact_offset as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":11685,"byte_start":11666,"column_end":63,"column_start":44,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":277,"line_start":277,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":63,"highlight_start":44,"text":"        current_pos = current_pos as f64 + exact_offset as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:279:26\n    |\n279 |     datapoints_list.push(stop_pos as f64);\n    |                          ^^^^^^^^^^^^^^^ help: try: `stop_pos`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":11733,"byte_start":11718,"column_end":41,"column_start":26,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":279,"line_start":279,"suggested_replacement":"stop_pos","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":41,"highlight_start":26,"text":"    datapoints_list.push(stop_pos as f64);"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":11733,"byte_start":11718,"column_end":41,"column_start":26,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":279,"line_start":279,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":26,"text":"    datapoints_list.push(stop_pos as f64);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/bigwig.rs:282:8\n    |\n282 |     if is_weburl == true {\n    |        ^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `is_weburl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":11818,"byte_start":11801,"column_end":25,"column_start":8,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":282,"line_start":282,"suggested_replacement":"is_weburl","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":25,"highlight_start":8,"text":"    if is_weburl == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":11818,"byte_start":11801,"column_end":25,"column_start":8,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":282,"line_start":282,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":25,"highlight_start":8,"text":"    if is_weburl == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:323:58\n    |\n323 |   ...                   datapoints_num[i] += (stop_entry_within_region\n    |  ____________________________________________^\n324 | | ...                       - start_entry_within_region)\n325 | | ...                       as f64;\n    | |________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\nhelp: try\n    |\n323 ~                                     datapoints_num[i] += (stop_entry_within_region\n324 ~                                         - start_entry_within_region);\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":14294,"byte_start":14153,"column_end":47,"column_start":58,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":325,"line_start":323,"suggested_replacement":"(stop_entry_within_region\n                                        - start_entry_within_region)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":83,"highlight_start":58,"text":"                                    datapoints_num[i] += (stop_entry_within_region"},{"highlight_end":69,"highlight_start":1,"text":"                                        - start_entry_within_region)"},{"highlight_end":47,"highlight_start":1,"text":"                                        as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":14294,"byte_start":14153,"column_end":47,"column_start":58,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":325,"line_start":323,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":83,"highlight_start":58,"text":"                                    datapoints_num[i] += (stop_entry_within_region"},{"highlight_end":69,"highlight_start":1,"text":"                                        - start_entry_within_region)"},{"highlight_end":47,"highlight_start":1,"text":"                                        as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:326:58\n    |\n326 |   ...                   datapoints_sum[i] += (stop_entry_within_region\n    |  ____________________________________________^\n327 | | ...                       - start_entry_within_region)\n328 | | ...                       as f64\n    | |________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\nhelp: try\n    |\n326 ~                                     datapoints_sum[i] += (stop_entry_within_region\n327 +                                         - start_entry_within_region)\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":14494,"byte_start":14353,"column_end":47,"column_start":58,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":328,"line_start":326,"suggested_replacement":"(stop_entry_within_region\n                                        - start_entry_within_region)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":83,"highlight_start":58,"text":"                                    datapoints_sum[i] += (stop_entry_within_region"},{"highlight_end":69,"highlight_start":1,"text":"                                        - start_entry_within_region)"},{"highlight_end":47,"highlight_start":1,"text":"                                        as f64"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":14494,"byte_start":14353,"column_end":47,"column_start":58,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":328,"line_start":326,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":83,"highlight_start":58,"text":"                                    datapoints_sum[i] += (stop_entry_within_region"},{"highlight_end":69,"highlight_start":1,"text":"                                        - start_entry_within_region)"},{"highlight_end":47,"highlight_start":1,"text":"                                        as f64"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:329:44\n    |\n329 | ...                   * ((v.summary.sum as f64) / v.summary.bases_covered as f64);\n    |                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `v.summary.sum`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":14560,"byte_start":14538,"column_end":66,"column_start":44,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":329,"line_start":329,"suggested_replacement":"v.summary.sum","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":44,"text":"                                        * ((v.summary.sum as f64) / v.summary.bases_covered as f64);"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":14560,"byte_start":14538,"column_end":66,"column_start":44,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":329,"line_start":329,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":44,"text":"                                        * ((v.summary.sum as f64) / v.summary.bases_covered as f64);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:365:62\n    |\n365 |   ...                   datapoints_num[i] += (stop_entry_within_region\n    |  ____________________________________________^\n366 | | ...                       - start_entry_within_region)\n367 | | ...                       as f64;\n    | |________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\nhelp: try\n    |\n365 ~                                         datapoints_num[i] += (stop_entry_within_region\n366 ~                                             - start_entry_within_region);\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":17192,"byte_start":17043,"column_end":51,"column_start":62,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":367,"line_start":365,"suggested_replacement":"(stop_entry_within_region\n                                            - start_entry_within_region)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":62,"text":"                                        datapoints_num[i] += (stop_entry_within_region"},{"highlight_end":73,"highlight_start":1,"text":"                                            - start_entry_within_region)"},{"highlight_end":51,"highlight_start":1,"text":"                                            as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":17192,"byte_start":17043,"column_end":51,"column_start":62,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":367,"line_start":365,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":62,"text":"                                        datapoints_num[i] += (stop_entry_within_region"},{"highlight_end":73,"highlight_start":1,"text":"                                            - start_entry_within_region)"},{"highlight_end":51,"highlight_start":1,"text":"                                            as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:368:62\n    |\n368 |   ...                   datapoints_sum[i] += (stop_entry_within_region\n    |  ____________________________________________^\n369 | | ...                       - start_entry_within_region)\n370 | | ...                       as f64\n    | |________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\nhelp: try\n    |\n368 ~                                         datapoints_sum[i] += (stop_entry_within_region\n369 +                                             - start_entry_within_region)\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":17404,"byte_start":17255,"column_end":51,"column_start":62,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":370,"line_start":368,"suggested_replacement":"(stop_entry_within_region\n                                            - start_entry_within_region)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":62,"text":"                                        datapoints_sum[i] += (stop_entry_within_region"},{"highlight_end":73,"highlight_start":1,"text":"                                            - start_entry_within_region)"},{"highlight_end":51,"highlight_start":1,"text":"                                            as f64"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":17404,"byte_start":17255,"column_end":51,"column_start":62,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":370,"line_start":368,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":62,"text":"                                        datapoints_sum[i] += (stop_entry_within_region"},{"highlight_end":73,"highlight_start":1,"text":"                                            - start_entry_within_region)"},{"highlight_end":51,"highlight_start":1,"text":"                                            as f64"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:371:48\n    |\n371 | ...                   * ((v.summary.sum as f64)\n    |                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `v.summary.sum`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":17474,"byte_start":17452,"column_end":70,"column_start":48,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":371,"line_start":371,"suggested_replacement":"v.summary.sum","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":48,"text":"                                            * ((v.summary.sum as f64)"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":17474,"byte_start":17452,"column_end":70,"column_start":48,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":371,"line_start":371,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":48,"text":"                                            * ((v.summary.sum as f64)"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:434:58\n    |\n434 |   ...                   datapoints_num[i] += (stop_entry_within_region\n    |  ____________________________________________^\n435 | | ...                       - start_entry_within_region)\n436 | | ...                       as f64;\n    | |________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\nhelp: try\n    |\n434 ~                                     datapoints_num[i] += (stop_entry_within_region\n435 ~                                         - start_entry_within_region);\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":21331,"byte_start":21190,"column_end":47,"column_start":58,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":436,"line_start":434,"suggested_replacement":"(stop_entry_within_region\n                                        - start_entry_within_region)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":83,"highlight_start":58,"text":"                                    datapoints_num[i] += (stop_entry_within_region"},{"highlight_end":69,"highlight_start":1,"text":"                                        - start_entry_within_region)"},{"highlight_end":47,"highlight_start":1,"text":"                                        as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":21331,"byte_start":21190,"column_end":47,"column_start":58,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":436,"line_start":434,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":83,"highlight_start":58,"text":"                                    datapoints_num[i] += (stop_entry_within_region"},{"highlight_end":69,"highlight_start":1,"text":"                                        - start_entry_within_region)"},{"highlight_end":47,"highlight_start":1,"text":"                                        as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:437:58\n    |\n437 |   ...                   datapoints_sum[i] += (stop_entry_within_region\n    |  ____________________________________________^\n438 | | ...                       - start_entry_within_region)\n439 | | ...                       as f64\n    | |________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\nhelp: try\n    |\n437 ~                                     datapoints_sum[i] += (stop_entry_within_region\n438 +                                         - start_entry_within_region)\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":21531,"byte_start":21390,"column_end":47,"column_start":58,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":439,"line_start":437,"suggested_replacement":"(stop_entry_within_region\n                                        - start_entry_within_region)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":83,"highlight_start":58,"text":"                                    datapoints_sum[i] += (stop_entry_within_region"},{"highlight_end":69,"highlight_start":1,"text":"                                        - start_entry_within_region)"},{"highlight_end":47,"highlight_start":1,"text":"                                        as f64"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":21531,"byte_start":21390,"column_end":47,"column_start":58,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":439,"line_start":437,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":83,"highlight_start":58,"text":"                                    datapoints_sum[i] += (stop_entry_within_region"},{"highlight_end":69,"highlight_start":1,"text":"                                        - start_entry_within_region)"},{"highlight_end":47,"highlight_start":1,"text":"                                        as f64"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:476:62\n    |\n476 |   ...                   datapoints_num[i] += (stop_entry_within_region\n    |  ____________________________________________^\n477 | | ...                       - start_entry_within_region)\n478 | | ...                       as f64;\n    | |________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\nhelp: try\n    |\n476 ~                                         datapoints_num[i] += (stop_entry_within_region\n477 ~                                             - start_entry_within_region);\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":24186,"byte_start":24037,"column_end":51,"column_start":62,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":478,"line_start":476,"suggested_replacement":"(stop_entry_within_region\n                                            - start_entry_within_region)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":62,"text":"                                        datapoints_num[i] += (stop_entry_within_region"},{"highlight_end":73,"highlight_start":1,"text":"                                            - start_entry_within_region)"},{"highlight_end":51,"highlight_start":1,"text":"                                            as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":24186,"byte_start":24037,"column_end":51,"column_start":62,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":478,"line_start":476,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":62,"text":"                                        datapoints_num[i] += (stop_entry_within_region"},{"highlight_end":73,"highlight_start":1,"text":"                                            - start_entry_within_region)"},{"highlight_end":51,"highlight_start":1,"text":"                                            as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:479:62\n    |\n479 |   ...                   datapoints_sum[i] += (stop_entry_within_region\n    |  ____________________________________________^\n480 | | ...                       - start_entry_within_region)\n481 | | ...                       as f64\n    | |________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\nhelp: try\n    |\n479 ~                                         datapoints_sum[i] += (stop_entry_within_region\n480 +                                             - start_entry_within_region)\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":24398,"byte_start":24249,"column_end":51,"column_start":62,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":481,"line_start":479,"suggested_replacement":"(stop_entry_within_region\n                                            - start_entry_within_region)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":62,"text":"                                        datapoints_sum[i] += (stop_entry_within_region"},{"highlight_end":73,"highlight_start":1,"text":"                                            - start_entry_within_region)"},{"highlight_end":51,"highlight_start":1,"text":"                                            as f64"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":24398,"byte_start":24249,"column_end":51,"column_start":62,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":481,"line_start":479,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":62,"text":"                                        datapoints_sum[i] += (stop_entry_within_region"},{"highlight_end":73,"highlight_start":1,"text":"                                            - start_entry_within_region)"},{"highlight_end":51,"highlight_start":1,"text":"                                            as f64"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/bigwig.rs:517:59\n    |\n517 |         let mut reader = BigWigRead::from_file_and_attach(&bigwig_file_url).unwrap();\n    |                                                           ^^^^^^^^^^^^^^^^ help: change this to: `bigwig_file_url`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_borrow)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":26296,"byte_start":26280,"column_end":75,"column_start":59,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":517,"line_start":517,"suggested_replacement":"bigwig_file_url","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":75,"highlight_start":59,"text":"        let mut reader = BigWigRead::from_file_and_attach(&bigwig_file_url).unwrap();"}]}]}],"code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","message":"this expression creates a reference which is immediately dereferenced by the compiler","spans":[{"byte_end":26296,"byte_start":26280,"column_end":75,"column_start":59,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":517,"line_start":517,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":75,"highlight_start":59,"text":"        let mut reader = BigWigRead::from_file_and_attach(&bigwig_file_url).unwrap();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:555:58\n    |\n555 |   ...                   datapoints_num[i] += (stop_entry_within_region\n    |  ____________________________________________^\n556 | | ...                       - start_entry_within_region)\n557 | | ...                       as f64;\n    | |________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\nhelp: try\n    |\n555 ~                                     datapoints_num[i] += (stop_entry_within_region\n556 ~                                         - start_entry_within_region);\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":28656,"byte_start":28515,"column_end":47,"column_start":58,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":557,"line_start":555,"suggested_replacement":"(stop_entry_within_region\n                                        - start_entry_within_region)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":83,"highlight_start":58,"text":"                                    datapoints_num[i] += (stop_entry_within_region"},{"highlight_end":69,"highlight_start":1,"text":"                                        - start_entry_within_region)"},{"highlight_end":47,"highlight_start":1,"text":"                                        as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":28656,"byte_start":28515,"column_end":47,"column_start":58,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":557,"line_start":555,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":83,"highlight_start":58,"text":"                                    datapoints_num[i] += (stop_entry_within_region"},{"highlight_end":69,"highlight_start":1,"text":"                                        - start_entry_within_region)"},{"highlight_end":47,"highlight_start":1,"text":"                                        as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:558:58\n    |\n558 |   ...                   datapoints_sum[i] += (stop_entry_within_region\n    |  ____________________________________________^\n559 | | ...                       - start_entry_within_region)\n560 | | ...                       as f64\n    | |________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\nhelp: try\n    |\n558 ~                                     datapoints_sum[i] += (stop_entry_within_region\n559 +                                         - start_entry_within_region)\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":28856,"byte_start":28715,"column_end":47,"column_start":58,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":560,"line_start":558,"suggested_replacement":"(stop_entry_within_region\n                                        - start_entry_within_region)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":83,"highlight_start":58,"text":"                                    datapoints_sum[i] += (stop_entry_within_region"},{"highlight_end":69,"highlight_start":1,"text":"                                        - start_entry_within_region)"},{"highlight_end":47,"highlight_start":1,"text":"                                        as f64"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":28856,"byte_start":28715,"column_end":47,"column_start":58,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":560,"line_start":558,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":83,"highlight_start":58,"text":"                                    datapoints_sum[i] += (stop_entry_within_region"},{"highlight_end":69,"highlight_start":1,"text":"                                        - start_entry_within_region)"},{"highlight_end":47,"highlight_start":1,"text":"                                        as f64"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:561:44\n    |\n561 | ...                   * ((v.summary.sum as f64) / v.summary.bases_covered as f64);\n    |                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `v.summary.sum`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":28922,"byte_start":28900,"column_end":66,"column_start":44,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":561,"line_start":561,"suggested_replacement":"v.summary.sum","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":44,"text":"                                        * ((v.summary.sum as f64) / v.summary.bases_covered as f64);"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":28922,"byte_start":28900,"column_end":66,"column_start":44,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":561,"line_start":561,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":44,"text":"                                        * ((v.summary.sum as f64) / v.summary.bases_covered as f64);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:596:62\n    |\n596 |   ...                   datapoints_num[i] += (stop_entry_within_region\n    |  ____________________________________________^\n597 | | ...                       - start_entry_within_region)\n598 | | ...                       as f64;\n    | |________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\nhelp: try\n    |\n596 ~                                         datapoints_num[i] += (stop_entry_within_region\n597 ~                                             - start_entry_within_region);\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":31493,"byte_start":31344,"column_end":51,"column_start":62,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":598,"line_start":596,"suggested_replacement":"(stop_entry_within_region\n                                            - start_entry_within_region)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":62,"text":"                                        datapoints_num[i] += (stop_entry_within_region"},{"highlight_end":73,"highlight_start":1,"text":"                                            - start_entry_within_region)"},{"highlight_end":51,"highlight_start":1,"text":"                                            as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":31493,"byte_start":31344,"column_end":51,"column_start":62,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":598,"line_start":596,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":62,"text":"                                        datapoints_num[i] += (stop_entry_within_region"},{"highlight_end":73,"highlight_start":1,"text":"                                            - start_entry_within_region)"},{"highlight_end":51,"highlight_start":1,"text":"                                            as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:599:62\n    |\n599 |   ...                   datapoints_sum[i] += (stop_entry_within_region\n    |  ____________________________________________^\n600 | | ...                       - start_entry_within_region)\n601 | | ...                       as f64\n    | |________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\nhelp: try\n    |\n599 ~                                         datapoints_sum[i] += (stop_entry_within_region\n600 +                                             - start_entry_within_region)\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":31705,"byte_start":31556,"column_end":51,"column_start":62,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":601,"line_start":599,"suggested_replacement":"(stop_entry_within_region\n                                            - start_entry_within_region)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":62,"text":"                                        datapoints_sum[i] += (stop_entry_within_region"},{"highlight_end":73,"highlight_start":1,"text":"                                            - start_entry_within_region)"},{"highlight_end":51,"highlight_start":1,"text":"                                            as f64"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":31705,"byte_start":31556,"column_end":51,"column_start":62,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":601,"line_start":599,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":62,"text":"                                        datapoints_sum[i] += (stop_entry_within_region"},{"highlight_end":73,"highlight_start":1,"text":"                                            - start_entry_within_region)"},{"highlight_end":51,"highlight_start":1,"text":"                                            as f64"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:602:48\n    |\n602 | ...                   * ((v.summary.sum as f64)\n    |                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `v.summary.sum`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":31775,"byte_start":31753,"column_end":70,"column_start":48,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":602,"line_start":602,"suggested_replacement":"v.summary.sum","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":48,"text":"                                            * ((v.summary.sum as f64)"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":31775,"byte_start":31753,"column_end":70,"column_start":48,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":602,"line_start":602,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":48,"text":"                                            * ((v.summary.sum as f64)"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:667:58\n    |\n667 |   ...                   datapoints_num[i] += (stop_entry_within_region\n    |  ____________________________________________^\n668 | | ...                       - start_entry_within_region)\n669 | | ...                       as f64;\n    | |________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\nhelp: try\n    |\n667 ~                                     datapoints_num[i] += (stop_entry_within_region\n668 ~                                         - start_entry_within_region);\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":35732,"byte_start":35591,"column_end":47,"column_start":58,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":669,"line_start":667,"suggested_replacement":"(stop_entry_within_region\n                                        - start_entry_within_region)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":83,"highlight_start":58,"text":"                                    datapoints_num[i] += (stop_entry_within_region"},{"highlight_end":69,"highlight_start":1,"text":"                                        - start_entry_within_region)"},{"highlight_end":47,"highlight_start":1,"text":"                                        as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":35732,"byte_start":35591,"column_end":47,"column_start":58,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":669,"line_start":667,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":83,"highlight_start":58,"text":"                                    datapoints_num[i] += (stop_entry_within_region"},{"highlight_end":69,"highlight_start":1,"text":"                                        - start_entry_within_region)"},{"highlight_end":47,"highlight_start":1,"text":"                                        as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:670:58\n    |\n670 |   ...                   datapoints_sum[i] += (stop_entry_within_region\n    |  ____________________________________________^\n671 | | ...                       - start_entry_within_region)\n672 | | ...                       as f64\n    | |________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\nhelp: try\n    |\n670 ~                                     datapoints_sum[i] += (stop_entry_within_region\n671 +                                         - start_entry_within_region)\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":35932,"byte_start":35791,"column_end":47,"column_start":58,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":672,"line_start":670,"suggested_replacement":"(stop_entry_within_region\n                                        - start_entry_within_region)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":83,"highlight_start":58,"text":"                                    datapoints_sum[i] += (stop_entry_within_region"},{"highlight_end":69,"highlight_start":1,"text":"                                        - start_entry_within_region)"},{"highlight_end":47,"highlight_start":1,"text":"                                        as f64"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":35932,"byte_start":35791,"column_end":47,"column_start":58,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":672,"line_start":670,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":83,"highlight_start":58,"text":"                                    datapoints_sum[i] += (stop_entry_within_region"},{"highlight_end":69,"highlight_start":1,"text":"                                        - start_entry_within_region)"},{"highlight_end":47,"highlight_start":1,"text":"                                        as f64"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:709:62\n    |\n709 |   ...                   datapoints_num[i] += (stop_entry_within_region\n    |  ____________________________________________^\n710 | | ...                       - start_entry_within_region)\n711 | | ...                       as f64;\n    | |________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\nhelp: try\n    |\n709 ~                                         datapoints_num[i] += (stop_entry_within_region\n710 ~                                             - start_entry_within_region);\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":38587,"byte_start":38438,"column_end":51,"column_start":62,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":711,"line_start":709,"suggested_replacement":"(stop_entry_within_region\n                                            - start_entry_within_region)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":62,"text":"                                        datapoints_num[i] += (stop_entry_within_region"},{"highlight_end":73,"highlight_start":1,"text":"                                            - start_entry_within_region)"},{"highlight_end":51,"highlight_start":1,"text":"                                            as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":38587,"byte_start":38438,"column_end":51,"column_start":62,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":711,"line_start":709,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":62,"text":"                                        datapoints_num[i] += (stop_entry_within_region"},{"highlight_end":73,"highlight_start":1,"text":"                                            - start_entry_within_region)"},{"highlight_end":51,"highlight_start":1,"text":"                                            as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/bigwig.rs:712:62\n    |\n712 |   ...                   datapoints_sum[i] += (stop_entry_within_region\n    |  ____________________________________________^\n713 | | ...                       - start_entry_within_region)\n714 | | ...                       as f64\n    | |________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\nhelp: try\n    |\n712 ~                                         datapoints_sum[i] += (stop_entry_within_region\n713 +                                             - start_entry_within_region)\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":38799,"byte_start":38650,"column_end":51,"column_start":62,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":714,"line_start":712,"suggested_replacement":"(stop_entry_within_region\n                                            - start_entry_within_region)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":62,"text":"                                        datapoints_sum[i] += (stop_entry_within_region"},{"highlight_end":73,"highlight_start":1,"text":"                                            - start_entry_within_region)"},{"highlight_end":51,"highlight_start":1,"text":"                                            as f64"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":38799,"byte_start":38650,"column_end":51,"column_start":62,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":714,"line_start":712,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":62,"text":"                                        datapoints_sum[i] += (stop_entry_within_region"},{"highlight_end":73,"highlight_start":1,"text":"                                            - start_entry_within_region)"},{"highlight_end":51,"highlight_start":1,"text":"                                            as f64"}]}]}}
{"reason":"compiler-artifact","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"validateHDF5","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/validateHDF5.rs","edition":"2018","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libvalidateHDF5-fa9d151231797071.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unneeded late initialization\n   --> src/bigwig.rs:754:9\n    |\n754 |         let mean;\n    |         ^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init\n    = note: `#[warn(clippy::needless_late_init)]` on by default\nhelp: move the declaration `mean` here and remove the assignments from the branches\n    |\n754 ~         \n755 ~         let mean = if datapoints_num[i] == 0.0 {\n756 ~             0.0\n757 |         } else {\n758 ~             datapoints_sum[i] / datapoints_num[i] as f64\n759 ~         };\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_late_init)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"move the declaration `mean` here and remove the assignments from the branches","rendered":null,"spans":[{"byte_end":40831,"byte_start":40824,"column_end":20,"column_start":13,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":756,"line_start":756,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":20,"highlight_start":13,"text":"            mean = 0.0;"}]},{"byte_end":40835,"byte_start":40834,"column_end":24,"column_start":23,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":756,"line_start":756,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":24,"highlight_start":23,"text":"            mean = 0.0;"}]},{"byte_end":40872,"byte_start":40865,"column_end":20,"column_start":13,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":758,"line_start":758,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":20,"highlight_start":13,"text":"            mean = datapoints_sum[i] / datapoints_num[i] as f64;"}]},{"byte_end":40917,"byte_start":40916,"column_end":65,"column_start":64,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":758,"line_start":758,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":65,"highlight_start":64,"text":"            mean = datapoints_sum[i] / datapoints_num[i] as f64;"}]},{"byte_end":40773,"byte_start":40764,"column_end":18,"column_start":9,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":754,"line_start":754,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":18,"highlight_start":9,"text":"        let mean;"}]},{"byte_end":40782,"byte_start":40782,"column_end":9,"column_start":9,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":755,"line_start":755,"suggested_replacement":"let mean = ","suggestion_applicability":"Unspecified","text":[{"highlight_end":9,"highlight_start":9,"text":"        if datapoints_num[i] == 0.0 {"}]},{"byte_end":40927,"byte_start":40927,"column_end":10,"column_start":10,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":759,"line_start":759,"suggested_replacement":";","suggestion_applicability":"Unspecified","text":[{"highlight_end":10,"highlight_start":10,"text":"        }"}]}]}],"code":{"code":"clippy::needless_late_init","explanation":null},"level":"warning","message":"unneeded late initialization","spans":[{"byte_end":40773,"byte_start":40764,"column_end":18,"column_start":9,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":754,"line_start":754,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":9,"text":"        let mean;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/bigwig.rs:761:29\n    |\n761 |         output_vec.push_str(&\"\\t\".to_string());\n    |                             ^^^^^^^^^^^^^^^^^ help: use: `\"\\t\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n    = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::unnecessary_to_owned)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":41021,"byte_start":41004,"column_end":46,"column_start":29,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":761,"line_start":761,"suggested_replacement":"\"\\t\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":46,"highlight_start":29,"text":"        output_vec.push_str(&\"\\t\".to_string());"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":41021,"byte_start":41004,"column_end":46,"column_start":29,"expansion":null,"file_name":"src/bigwig.rs","is_primary":true,"label":null,"line_end":761,"line_start":761,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":29,"text":"        output_vec.push_str(&\"\\t\".to_string());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"gdcmaf","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/gdcmaf.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: calling `push_str()` using a single-character string literal\n  --> src/gdcmaf.rs:62:13\n   |\n62 |             maf_str.push_str(\"\\n\");\n   |             ^^^^^^^^^^^^^^^^^^^^^^ help: consider using `push` with a character literal: `maf_str.push('\\n')`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_add_str\n   = note: `#[warn(clippy::single_char_add_str)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_add_str","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::single_char_add_str)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using `push` with a character literal","rendered":null,"spans":[{"byte_end":2410,"byte_start":2388,"column_end":35,"column_start":13,"expansion":null,"file_name":"src/gdcmaf.rs","is_primary":true,"label":null,"line_end":62,"line_start":62,"suggested_replacement":"maf_str.push('\\n')","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":35,"highlight_start":13,"text":"            maf_str.push_str(\"\\n\");"}]}]}],"code":{"code":"clippy::single_char_add_str","explanation":null},"level":"warning","message":"calling `push_str()` using a single-character string literal","spans":[{"byte_end":2410,"byte_start":2388,"column_end":35,"column_start":13,"expansion":null,"file_name":"src/gdcmaf.rs","is_primary":true,"label":null,"line_end":62,"line_start":62,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":13,"text":"            maf_str.push_str(\"\\n\");"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"readHDF5","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/readHDF5.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: `to_string` applied to a type that implements `Display` in `format!` args\n   --> src/readHDF5.rs:419:26\n    |\n419 |             gene_array[i].to_string()\n    |                          ^^^^^^^^^^^^ help: remove this\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#to_string_in_format_args\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#to_string_in_format_args","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove this","rendered":null,"spans":[{"byte_end":14572,"byte_start":14560,"column_end":38,"column_start":26,"expansion":null,"file_name":"src/readHDF5.rs","is_primary":true,"label":null,"line_end":419,"line_start":419,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":38,"highlight_start":26,"text":"            gene_array[i].to_string()"}]}]}],"code":{"code":"clippy::to_string_in_format_args","explanation":null},"level":"warning","message":"`to_string` applied to a type that implements `Display` in `format!` args","spans":[{"byte_end":14572,"byte_start":14560,"column_end":38,"column_start":26,"expansion":null,"file_name":"src/readHDF5.rs","is_primary":true,"label":null,"line_end":419,"line_start":419,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":26,"text":"            gene_array[i].to_string()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"readHDF5","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/readHDF5.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/readHDF5.rs:423:30\n    |\n423 |             output_string += &\",\";\n    |                              ^^^^ help: change this to: `\",\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_borrow)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":14657,"byte_start":14653,"column_end":34,"column_start":30,"expansion":null,"file_name":"src/readHDF5.rs","is_primary":true,"label":null,"line_end":423,"line_start":423,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":34,"highlight_start":30,"text":"            output_string += &\",\";"}]}]}],"code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","message":"this expression creates a reference which is immediately dereferenced by the compiler","spans":[{"byte_end":14657,"byte_start":14653,"column_end":34,"column_start":30,"expansion":null,"file_name":"src/readHDF5.rs","is_primary":true,"label":null,"line_end":423,"line_start":423,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":30,"text":"            output_string += &\",\";"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"readHDF5","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/readHDF5.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/readHDF5.rs:426:22\n    |\n426 |     output_string += &\"}\".to_string();\n    |                      ^^^^^^^^^^^^^^^^ help: use: `\"}\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n    = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::unnecessary_to_owned)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":14712,"byte_start":14696,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/readHDF5.rs","is_primary":true,"label":null,"line_end":426,"line_start":426,"suggested_replacement":"\"}\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":38,"highlight_start":22,"text":"    output_string += &\"}\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":14712,"byte_start":14696,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/readHDF5.rs","is_primary":true,"label":null,"line_end":426,"line_start":426,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":22,"text":"    output_string += &\"}\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"gdcmaf","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/gdcmaf.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: use of `writeln!(stderr(), ...).unwrap()`\n  --> src/gdcmaf.rs:96:21\n   |\n96 |                     writeln!(io::stderr(), \"{}\", serde_json::to_string(&stdin_error).unwrap()).unwrap();\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `eprintln!(\"{}\", serde_json::to_string(&stdin_error).unwrap())`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_write\n   = note: `#[warn(clippy::explicit_write)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_write","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::explicit_write)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":3780,"byte_start":3697,"column_end":104,"column_start":21,"expansion":null,"file_name":"src/gdcmaf.rs","is_primary":true,"label":null,"line_end":96,"line_start":96,"suggested_replacement":"eprintln!(\"{}\", serde_json::to_string(&stdin_error).unwrap())","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":104,"highlight_start":21,"text":"                    writeln!(io::stderr(), \"{}\", serde_json::to_string(&stdin_error).unwrap()).unwrap();"}]}]}],"code":{"code":"clippy::explicit_write","explanation":null},"level":"warning","message":"use of `writeln!(stderr(), ...).unwrap()`","spans":[{"byte_end":3780,"byte_start":3697,"column_end":104,"column_start":21,"expansion":null,"file_name":"src/gdcmaf.rs","is_primary":true,"label":null,"line_end":96,"line_start":96,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":104,"highlight_start":21,"text":"                    writeln!(io::stderr(), \"{}\", serde_json::to_string(&stdin_error).unwrap()).unwrap();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"readHDF5","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/readHDF5.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: `if` chain can be rewritten with `match`\n   --> src/readHDF5.rs:564:5\n    |\n564 | /     if gene_names.len() > 1 {\n565 | |         // For multiple genes: preload all data and use parallel processing\n566 | |         timings.insert(\"parallel_processing\".to_string(), Value::from(true));\n...   |\n812 | |     }\n    | |_____^ help: consider rewriting the `if` chain with `match`: `match gene_names.len().cmp(&1) {...}`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain\n    = note: `#[warn(clippy::comparison_chain)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::comparison_chain)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider rewriting the `if` chain with `match`","rendered":null,"spans":[{"byte_end":31584,"byte_start":18901,"column_end":6,"column_start":5,"expansion":null,"file_name":"src/readHDF5.rs","is_primary":true,"label":null,"line_end":812,"line_start":564,"suggested_replacement":"match gene_names.len().cmp(&1) {...}","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":30,"highlight_start":5,"text":"    if gene_names.len() > 1 {"},{"highlight_end":76,"highlight_start":1,"text":"        // For multiple genes: preload all data and use parallel processing"},{"highlight_end":78,"highlight_start":1,"text":"        timings.insert(\"parallel_processing\".to_string(), Value::from(true));"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":74,"highlight_start":1,"text":"        // Load all gene data upfront only when processing multiple genes"},{"highlight_end":50,"highlight_start":1,"text":"        let all_data_start_time = Instant::now();"},{"highlight_end":82,"highlight_start":1,"text":"        let all_gene_data = match counts_dataset.read::<f64, Dim<[usize; 2]>>() {"},{"highlight_end":26,"highlight_start":1,"text":"            Ok(data) => {"},{"highlight_end":32,"highlight_start":1,"text":"                timings.insert("},{"highlight_end":57,"highlight_start":1,"text":"                    \"read_all_gene_data_ms\".to_string(),"},{"highlight_end":83,"highlight_start":1,"text":"                    Value::from(all_data_start_time.elapsed().as_millis() as u64),"},{"highlight_end":19,"highlight_start":1,"text":"                );"},{"highlight_end":27,"highlight_start":1,"text":"                Some(data)"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":26,"highlight_start":1,"text":"            Err(err) => {"},{"highlight_end":86,"highlight_start":1,"text":"                // Failed to read all data at once, will fallback to per-gene reading"},{"highlight_end":32,"highlight_start":1,"text":"                timings.insert("},{"highlight_end":60,"highlight_start":1,"text":"                    \"read_all_gene_data_error\".to_string(),"},{"highlight_end":57,"highlight_start":1,"text":"                    Value::String(format!(\"{:?}\", err)),"},{"highlight_end":19,"highlight_start":1,"text":"                );"},{"highlight_end":21,"highlight_start":1,"text":"                None"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":11,"highlight_start":1,"text":"        };"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":49,"highlight_start":1,"text":"        // Configurable thread count for testing"},{"highlight_end":31,"highlight_start":1,"text":"        let thread_count = 2; "},{"highlight_end":79,"highlight_start":1,"text":"        timings.insert(\"thread_count\".to_string(), Value::from(thread_count));"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":72,"highlight_start":1,"text":"        // Create a scoped thread pool with specified number of threads"},{"highlight_end":46,"highlight_start":1,"text":"        match rayon::ThreadPoolBuilder::new()"},{"highlight_end":39,"highlight_start":1,"text":"            .num_threads(thread_count)"},{"highlight_end":21,"highlight_start":1,"text":"            .build()"},{"highlight_end":10,"highlight_start":1,"text":"        {"},{"highlight_end":26,"highlight_start":1,"text":"            Ok(pool) => {"},{"highlight_end":55,"highlight_start":1,"text":"                // Use the pool for this specific work"},{"highlight_end":34,"highlight_start":1,"text":"                pool.install(|| {"},{"highlight_end":65,"highlight_start":1,"text":"                    gene_names.par_iter().for_each(|gene_name| {"},{"highlight_end":62,"highlight_start":1,"text":"                        let gene_start_time = Instant::now();"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":74,"highlight_start":1,"text":"                        // Use HashMap for O(1) lookup for multiple genes"},{"highlight_end":64,"highlight_start":1,"text":"                        let gene_index = match &gene_to_index {"},{"highlight_end":70,"highlight_start":1,"text":"                            Some(map) => map.get(gene_name).cloned(),"},{"highlight_end":81,"highlight_start":1,"text":"                            None => genes.iter().position(|x| *x == *gene_name),"},{"highlight_end":27,"highlight_start":1,"text":"                        };"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":43,"highlight_start":1,"text":"                        match gene_index {"},{"highlight_end":50,"highlight_start":1,"text":"                            Some(gene_index) => {"},{"highlight_end":86,"highlight_start":1,"text":"                                // Make sure the gene index is valid for this dataset"},{"highlight_end":77,"highlight_start":1,"text":"                                if gene_index >= counts_dataset.shape()[0] {"},{"highlight_end":68,"highlight_start":1,"text":"                                    let mut error_map = Map::new();"},{"highlight_end":54,"highlight_start":1,"text":"                                    error_map.insert("},{"highlight_end":61,"highlight_start":1,"text":"                                        \"error\".to_string(),"},{"highlight_end":95,"highlight_start":1,"text":"                                        Value::String(\"Gene index out of bounds\".to_string()),"},{"highlight_end":39,"highlight_start":1,"text":"                                    );"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":62,"highlight_start":1,"text":"                                    // Store the error result"},{"highlight_end":83,"highlight_start":1,"text":"                                    let mut genes_map = genes_map.lock().unwrap();"},{"highlight_end":99,"highlight_start":1,"text":"                                    genes_map.insert(gene_name.clone(), Value::Object(error_map));"},{"highlight_end":41,"highlight_start":1,"text":"                                } else {"},{"highlight_end":72,"highlight_start":1,"text":"                                    // Use pre-loaded data if available"},{"highlight_end":80,"highlight_start":1,"text":"                                    if let Some(ref all_data) = all_gene_data {"},{"highlight_end":89,"highlight_start":1,"text":"                                        // Extract the row directly from pre-loaded data"},{"highlight_end":98,"highlight_start":1,"text":"                                        let gene_expression = all_data.slice(s![gene_index, ..]);"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":76,"highlight_start":1,"text":"                                        // Create samples map for this gene"},{"highlight_end":74,"highlight_start":1,"text":"                                        let mut samples_map = Map::new();"},{"highlight_end":88,"highlight_start":1,"text":"                                        for (i, sample) in samples.iter().enumerate() {"},{"highlight_end":75,"highlight_start":1,"text":"                                            if i < gene_expression.len() {"},{"highlight_end":91,"highlight_start":1,"text":"                                                // Handle potential NaN or infinity values"},{"highlight_end":96,"highlight_start":1,"text":"                                                let value = if gene_expression[i].is_finite() {"},{"highlight_end":84,"highlight_start":1,"text":"                                                    Value::from(gene_expression[i])"},{"highlight_end":57,"highlight_start":1,"text":"                                                } else {"},{"highlight_end":64,"highlight_start":1,"text":"                                                    Value::Null"},{"highlight_end":51,"highlight_start":1,"text":"                                                };"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":101,"highlight_start":1,"text":"                                                samples_map.insert(sample.replace(\"\\\\\", \"\"), value);"},{"highlight_end":46,"highlight_start":1,"text":"                                            }"},{"highlight_end":42,"highlight_start":1,"text":"                                        }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":73,"highlight_start":1,"text":"                                        // Create gene data and store it"},{"highlight_end":64,"highlight_start":1,"text":"                                        let gene_data = json!({"},{"highlight_end":65,"highlight_start":1,"text":"                                            \"dataId\": gene_name,"},{"highlight_end":67,"highlight_start":1,"text":"                                            \"samples\": samples_map"},{"highlight_end":44,"highlight_start":1,"text":"                                        });"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":87,"highlight_start":1,"text":"                                        let mut genes_map = genes_map.lock().unwrap();"},{"highlight_end":88,"highlight_start":1,"text":"                                        genes_map.insert(gene_name.clone(), gene_data);"},{"highlight_end":45,"highlight_start":1,"text":"                                    } else {"},{"highlight_end":92,"highlight_start":1,"text":"                                        // Fallback to per-gene reading if bulk load failed"},{"highlight_end":61,"highlight_start":1,"text":"                                        match counts_dataset"},{"highlight_end":89,"highlight_start":1,"text":"                                            .read_slice_1d::<f64, _>(s![gene_index, ..])"},{"highlight_end":42,"highlight_start":1,"text":"                                        {"},{"highlight_end":69,"highlight_start":1,"text":"                                            Ok(gene_expression) => {"},{"highlight_end":84,"highlight_start":1,"text":"                                                // Create samples map for this gene"},{"highlight_end":82,"highlight_start":1,"text":"                                                let mut samples_map = Map::new();"},{"highlight_end":96,"highlight_start":1,"text":"                                                for (i, sample) in samples.iter().enumerate() {"},{"highlight_end":83,"highlight_start":1,"text":"                                                    if i < gene_expression.len() {"},{"highlight_end":99,"highlight_start":1,"text":"                                                        // Handle potential NaN or infinity values"},{"highlight_end":68,"highlight_start":1,"text":"                                                        let value ="},{"highlight_end":96,"highlight_start":1,"text":"                                                            if gene_expression[i].is_finite() {"},{"highlight_end":96,"highlight_start":1,"text":"                                                                Value::from(gene_expression[i])"},{"highlight_end":69,"highlight_start":1,"text":"                                                            } else {"},{"highlight_end":76,"highlight_start":1,"text":"                                                                Value::Null"},{"highlight_end":63,"highlight_start":1,"text":"                                                            };"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":76,"highlight_start":1,"text":"                                                        samples_map.insert("},{"highlight_end":86,"highlight_start":1,"text":"                                                            sample.replace(\"\\\\\", \"\"),"},{"highlight_end":67,"highlight_start":1,"text":"                                                            value,"},{"highlight_end":59,"highlight_start":1,"text":"                                                        );"},{"highlight_end":54,"highlight_start":1,"text":"                                                    }"},{"highlight_end":50,"highlight_start":1,"text":"                                                }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":81,"highlight_start":1,"text":"                                                // Create gene data and store it"},{"highlight_end":72,"highlight_start":1,"text":"                                                let gene_data = json!({"},{"highlight_end":73,"highlight_start":1,"text":"                                                    \"dataId\": gene_name,"},{"highlight_end":75,"highlight_start":1,"text":"                                                    \"samples\": samples_map"},{"highlight_end":52,"highlight_start":1,"text":"                                                });"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":95,"highlight_start":1,"text":"                                                let mut genes_map = genes_map.lock().unwrap();"},{"highlight_end":96,"highlight_start":1,"text":"                                                genes_map.insert(gene_name.clone(), gene_data);"},{"highlight_end":46,"highlight_start":1,"text":"                                            }"},{"highlight_end":59,"highlight_start":1,"text":"                                            Err(err1) => {"},{"highlight_end":80,"highlight_start":1,"text":"                                                let mut error_map = Map::new();"},{"highlight_end":66,"highlight_start":1,"text":"                                                error_map.insert("},{"highlight_end":73,"highlight_start":1,"text":"                                                    \"error\".to_string(),"},{"highlight_end":75,"highlight_start":1,"text":"                                                    Value::String(format!("},{"highlight_end":98,"highlight_start":1,"text":"                                                        \"Failed to read expression values: {:?}\","},{"highlight_end":61,"highlight_start":1,"text":"                                                        err1"},{"highlight_end":56,"highlight_start":1,"text":"                                                    )),"},{"highlight_end":51,"highlight_start":1,"text":"                                                );"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":95,"highlight_start":1,"text":"                                                let mut genes_map = genes_map.lock().unwrap();"},{"highlight_end":66,"highlight_start":1,"text":"                                                genes_map.insert("},{"highlight_end":71,"highlight_start":1,"text":"                                                    gene_name.clone(),"},{"highlight_end":78,"highlight_start":1,"text":"                                                    Value::Object(error_map),"},{"highlight_end":51,"highlight_start":1,"text":"                                                );"},{"highlight_end":46,"highlight_start":1,"text":"                                            }"},{"highlight_end":42,"highlight_start":1,"text":"                                        }"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":34,"highlight_start":1,"text":"                                }"},{"highlight_end":30,"highlight_start":1,"text":"                            }"},{"highlight_end":38,"highlight_start":1,"text":"                            None => {"},{"highlight_end":50,"highlight_start":1,"text":"                                // Gene not found"},{"highlight_end":64,"highlight_start":1,"text":"                                let mut error_map = Map::new();"},{"highlight_end":50,"highlight_start":1,"text":"                                error_map.insert("},{"highlight_end":57,"highlight_start":1,"text":"                                    \"error\".to_string(),"},{"highlight_end":92,"highlight_start":1,"text":"                                    Value::String(\"Gene not found in dataset\".to_string()),"},{"highlight_end":35,"highlight_start":1,"text":"                                );"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":79,"highlight_start":1,"text":"                                let mut genes_map = genes_map.lock().unwrap();"},{"highlight_end":95,"highlight_start":1,"text":"                                genes_map.insert(gene_name.clone(), Value::Object(error_map));"},{"highlight_end":30,"highlight_start":1,"text":"                            }"},{"highlight_end":26,"highlight_start":1,"text":"                        }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":41,"highlight_start":1,"text":"                        // Record timing"},{"highlight_end":89,"highlight_start":1,"text":"                        let elapsed_time = gene_start_time.elapsed().as_millis() as u64;"},{"highlight_end":77,"highlight_start":1,"text":"                        let mut gene_timings = gene_timings.lock().unwrap();"},{"highlight_end":91,"highlight_start":1,"text":"                        gene_timings.insert(gene_name.clone(), Value::from(elapsed_time));"},{"highlight_end":24,"highlight_start":1,"text":"                    });"},{"highlight_end":20,"highlight_start":1,"text":"                });"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":26,"highlight_start":1,"text":"            Err(err) => {"},{"highlight_end":85,"highlight_start":1,"text":"                // If thread pool creation fails, fall back to sequential processing"},{"highlight_end":32,"highlight_start":1,"text":"                timings.insert("},{"highlight_end":53,"highlight_start":1,"text":"                    \"thread_pool_error\".to_string(),"},{"highlight_end":87,"highlight_start":1,"text":"                    Value::String(format!(\"Failed to create thread pool: {:?}\", err)),"},{"highlight_end":19,"highlight_start":1,"text":"                );"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":44,"highlight_start":1,"text":"                process_genes_sequentially("},{"highlight_end":33,"highlight_start":1,"text":"                    &gene_names,"},{"highlight_end":28,"highlight_start":1,"text":"                    &genes,"},{"highlight_end":36,"highlight_start":1,"text":"                    &gene_to_index,"},{"highlight_end":37,"highlight_start":1,"text":"                    &counts_dataset,"},{"highlight_end":36,"highlight_start":1,"text":"                    &all_gene_data,"},{"highlight_end":30,"highlight_start":1,"text":"                    &samples,"},{"highlight_end":31,"highlight_start":1,"text":"                    &genes_map"},{"highlight_end":19,"highlight_start":1,"text":"                );"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":10,"highlight_start":1,"text":"        }"},{"highlight_end":38,"highlight_start":1,"text":"    } else if gene_names.len() == 1 {"},{"highlight_end":40,"highlight_start":1,"text":"        let gene_name = &gene_names[0];"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":60,"highlight_start":1,"text":"        match genes.iter().position(|x| *x == *gene_name) {"},{"highlight_end":34,"highlight_start":1,"text":"            Some(gene_index) => {"},{"highlight_end":61,"highlight_start":1,"text":"                if gene_index >= counts_dataset.shape()[0] {"},{"highlight_end":52,"highlight_start":1,"text":"                    let mut error_map = Map::new();"},{"highlight_end":38,"highlight_start":1,"text":"                    error_map.insert("},{"highlight_end":45,"highlight_start":1,"text":"                        \"error\".to_string(),"},{"highlight_end":79,"highlight_start":1,"text":"                        Value::String(\"Gene index out of bounds\".to_string()),"},{"highlight_end":23,"highlight_start":1,"text":"                    );"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":67,"highlight_start":1,"text":"                    let mut genes_map = genes_map.lock().unwrap();"},{"highlight_end":83,"highlight_start":1,"text":"                    genes_map.insert(gene_name.clone(), Value::Object(error_map));"},{"highlight_end":25,"highlight_start":1,"text":"                } else {"},{"highlight_end":66,"highlight_start":1,"text":"                    // Read just this single gene's data directly"},{"highlight_end":87,"highlight_start":1,"text":"                    match counts_dataset.read_slice_1d::<f64, _>(s![gene_index, ..]) {"},{"highlight_end":49,"highlight_start":1,"text":"                        Ok(gene_expression) => {"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":64,"highlight_start":1,"text":"                            // Create samples map for this gene"},{"highlight_end":62,"highlight_start":1,"text":"                            let mut samples_map = Map::new();"},{"highlight_end":76,"highlight_start":1,"text":"                            for (i, sample) in samples.iter().enumerate() {"},{"highlight_end":63,"highlight_start":1,"text":"                                if i < gene_expression.len() {"},{"highlight_end":79,"highlight_start":1,"text":"                                    // Handle potential NaN or infinity values"},{"highlight_end":84,"highlight_start":1,"text":"                                    let value = if gene_expression[i].is_finite() {"},{"highlight_end":72,"highlight_start":1,"text":"                                        Value::from(gene_expression[i])"},{"highlight_end":45,"highlight_start":1,"text":"                                    } else {"},{"highlight_end":52,"highlight_start":1,"text":"                                        Value::Null"},{"highlight_end":39,"highlight_start":1,"text":"                                    };"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":89,"highlight_start":1,"text":"                                    samples_map.insert(sample.replace(\"\\\\\", \"\"), value);"},{"highlight_end":34,"highlight_start":1,"text":"                                }"},{"highlight_end":30,"highlight_start":1,"text":"                            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":52,"highlight_start":1,"text":"                            let gene_data = json!({"},{"highlight_end":53,"highlight_start":1,"text":"                                \"dataId\": gene_name,"},{"highlight_end":55,"highlight_start":1,"text":"                                \"samples\": samples_map"},{"highlight_end":32,"highlight_start":1,"text":"                            });"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":75,"highlight_start":1,"text":"                            let mut genes_map = genes_map.lock().unwrap();"},{"highlight_end":76,"highlight_start":1,"text":"                            genes_map.insert(gene_name.clone(), gene_data);"},{"highlight_end":26,"highlight_start":1,"text":"                        }"},{"highlight_end":38,"highlight_start":1,"text":"                        Err(err) => {"},{"highlight_end":60,"highlight_start":1,"text":"                            let mut error_map = Map::new();"},{"highlight_end":46,"highlight_start":1,"text":"                            error_map.insert("},{"highlight_end":53,"highlight_start":1,"text":"                                \"error\".to_string(),"},{"highlight_end":55,"highlight_start":1,"text":"                                Value::String(format!("},{"highlight_end":78,"highlight_start":1,"text":"                                    \"Failed to read expression values: {:?}\","},{"highlight_end":40,"highlight_start":1,"text":"                                    err"},{"highlight_end":36,"highlight_start":1,"text":"                                )),"},{"highlight_end":31,"highlight_start":1,"text":"                            );"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":75,"highlight_start":1,"text":"                            let mut genes_map = genes_map.lock().unwrap();"},{"highlight_end":91,"highlight_start":1,"text":"                            genes_map.insert(gene_name.clone(), Value::Object(error_map));"},{"highlight_end":26,"highlight_start":1,"text":"                        }"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":22,"highlight_start":1,"text":"            None => {"},{"highlight_end":48,"highlight_start":1,"text":"                let mut error_map = Map::new();"},{"highlight_end":34,"highlight_start":1,"text":"                error_map.insert("},{"highlight_end":41,"highlight_start":1,"text":"                    \"error\".to_string(),"},{"highlight_end":76,"highlight_start":1,"text":"                    Value::String(\"Gene not found in dataset\".to_string()),"},{"highlight_end":19,"highlight_start":1,"text":"                );"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":63,"highlight_start":1,"text":"                let mut genes_map = genes_map.lock().unwrap();"},{"highlight_end":79,"highlight_start":1,"text":"                genes_map.insert(gene_name.clone(), Value::Object(error_map));"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":10,"highlight_start":1,"text":"        }"},{"highlight_end":6,"highlight_start":1,"text":"    }"}]}]}],"code":{"code":"clippy::comparison_chain","explanation":null},"level":"warning","message":"`if` chain can be rewritten with `match`","spans":[{"byte_end":31584,"byte_start":18901,"column_end":6,"column_start":5,"expansion":null,"file_name":"src/readHDF5.rs","is_primary":true,"label":null,"line_end":812,"line_start":564,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":5,"text":"    if gene_names.len() > 1 {"},{"highlight_end":76,"highlight_start":1,"text":"        // For multiple genes: preload all data and use parallel processing"},{"highlight_end":78,"highlight_start":1,"text":"        timings.insert(\"parallel_processing\".to_string(), Value::from(true));"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":74,"highlight_start":1,"text":"        // Load all gene data upfront only when processing multiple genes"},{"highlight_end":50,"highlight_start":1,"text":"        let all_data_start_time = Instant::now();"},{"highlight_end":82,"highlight_start":1,"text":"        let all_gene_data = match counts_dataset.read::<f64, Dim<[usize; 2]>>() {"},{"highlight_end":26,"highlight_start":1,"text":"            Ok(data) => {"},{"highlight_end":32,"highlight_start":1,"text":"                timings.insert("},{"highlight_end":57,"highlight_start":1,"text":"                    \"read_all_gene_data_ms\".to_string(),"},{"highlight_end":83,"highlight_start":1,"text":"                    Value::from(all_data_start_time.elapsed().as_millis() as u64),"},{"highlight_end":19,"highlight_start":1,"text":"                );"},{"highlight_end":27,"highlight_start":1,"text":"                Some(data)"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":26,"highlight_start":1,"text":"            Err(err) => {"},{"highlight_end":86,"highlight_start":1,"text":"                // Failed to read all data at once, will fallback to per-gene reading"},{"highlight_end":32,"highlight_start":1,"text":"                timings.insert("},{"highlight_end":60,"highlight_start":1,"text":"                    \"read_all_gene_data_error\".to_string(),"},{"highlight_end":57,"highlight_start":1,"text":"                    Value::String(format!(\"{:?}\", err)),"},{"highlight_end":19,"highlight_start":1,"text":"                );"},{"highlight_end":21,"highlight_start":1,"text":"                None"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":11,"highlight_start":1,"text":"        };"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":49,"highlight_start":1,"text":"        // Configurable thread count for testing"},{"highlight_end":31,"highlight_start":1,"text":"        let thread_count = 2; "},{"highlight_end":79,"highlight_start":1,"text":"        timings.insert(\"thread_count\".to_string(), Value::from(thread_count));"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":72,"highlight_start":1,"text":"        // Create a scoped thread pool with specified number of threads"},{"highlight_end":46,"highlight_start":1,"text":"        match rayon::ThreadPoolBuilder::new()"},{"highlight_end":39,"highlight_start":1,"text":"            .num_threads(thread_count)"},{"highlight_end":21,"highlight_start":1,"text":"            .build()"},{"highlight_end":10,"highlight_start":1,"text":"        {"},{"highlight_end":26,"highlight_start":1,"text":"            Ok(pool) => {"},{"highlight_end":55,"highlight_start":1,"text":"                // Use the pool for this specific work"},{"highlight_end":34,"highlight_start":1,"text":"                pool.install(|| {"},{"highlight_end":65,"highlight_start":1,"text":"                    gene_names.par_iter().for_each(|gene_name| {"},{"highlight_end":62,"highlight_start":1,"text":"                        let gene_start_time = Instant::now();"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":74,"highlight_start":1,"text":"                        // Use HashMap for O(1) lookup for multiple genes"},{"highlight_end":64,"highlight_start":1,"text":"                        let gene_index = match &gene_to_index {"},{"highlight_end":70,"highlight_start":1,"text":"                            Some(map) => map.get(gene_name).cloned(),"},{"highlight_end":81,"highlight_start":1,"text":"                            None => genes.iter().position(|x| *x == *gene_name),"},{"highlight_end":27,"highlight_start":1,"text":"                        };"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":43,"highlight_start":1,"text":"                        match gene_index {"},{"highlight_end":50,"highlight_start":1,"text":"                            Some(gene_index) => {"},{"highlight_end":86,"highlight_start":1,"text":"                                // Make sure the gene index is valid for this dataset"},{"highlight_end":77,"highlight_start":1,"text":"                                if gene_index >= counts_dataset.shape()[0] {"},{"highlight_end":68,"highlight_start":1,"text":"                                    let mut error_map = Map::new();"},{"highlight_end":54,"highlight_start":1,"text":"                                    error_map.insert("},{"highlight_end":61,"highlight_start":1,"text":"                                        \"error\".to_string(),"},{"highlight_end":95,"highlight_start":1,"text":"                                        Value::String(\"Gene index out of bounds\".to_string()),"},{"highlight_end":39,"highlight_start":1,"text":"                                    );"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":62,"highlight_start":1,"text":"                                    // Store the error result"},{"highlight_end":83,"highlight_start":1,"text":"                                    let mut genes_map = genes_map.lock().unwrap();"},{"highlight_end":99,"highlight_start":1,"text":"                                    genes_map.insert(gene_name.clone(), Value::Object(error_map));"},{"highlight_end":41,"highlight_start":1,"text":"                                } else {"},{"highlight_end":72,"highlight_start":1,"text":"                                    // Use pre-loaded data if available"},{"highlight_end":80,"highlight_start":1,"text":"                                    if let Some(ref all_data) = all_gene_data {"},{"highlight_end":89,"highlight_start":1,"text":"                                        // Extract the row directly from pre-loaded data"},{"highlight_end":98,"highlight_start":1,"text":"                                        let gene_expression = all_data.slice(s![gene_index, ..]);"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":76,"highlight_start":1,"text":"                                        // Create samples map for this gene"},{"highlight_end":74,"highlight_start":1,"text":"                                        let mut samples_map = Map::new();"},{"highlight_end":88,"highlight_start":1,"text":"                                        for (i, sample) in samples.iter().enumerate() {"},{"highlight_end":75,"highlight_start":1,"text":"                                            if i < gene_expression.len() {"},{"highlight_end":91,"highlight_start":1,"text":"                                                // Handle potential NaN or infinity values"},{"highlight_end":96,"highlight_start":1,"text":"                                                let value = if gene_expression[i].is_finite() {"},{"highlight_end":84,"highlight_start":1,"text":"                                                    Value::from(gene_expression[i])"},{"highlight_end":57,"highlight_start":1,"text":"                                                } else {"},{"highlight_end":64,"highlight_start":1,"text":"                                                    Value::Null"},{"highlight_end":51,"highlight_start":1,"text":"                                                };"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":101,"highlight_start":1,"text":"                                                samples_map.insert(sample.replace(\"\\\\\", \"\"), value);"},{"highlight_end":46,"highlight_start":1,"text":"                                            }"},{"highlight_end":42,"highlight_start":1,"text":"                                        }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":73,"highlight_start":1,"text":"                                        // Create gene data and store it"},{"highlight_end":64,"highlight_start":1,"text":"                                        let gene_data = json!({"},{"highlight_end":65,"highlight_start":1,"text":"                                            \"dataId\": gene_name,"},{"highlight_end":67,"highlight_start":1,"text":"                                            \"samples\": samples_map"},{"highlight_end":44,"highlight_start":1,"text":"                                        });"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":87,"highlight_start":1,"text":"                                        let mut genes_map = genes_map.lock().unwrap();"},{"highlight_end":88,"highlight_start":1,"text":"                                        genes_map.insert(gene_name.clone(), gene_data);"},{"highlight_end":45,"highlight_start":1,"text":"                                    } else {"},{"highlight_end":92,"highlight_start":1,"text":"                                        // Fallback to per-gene reading if bulk load failed"},{"highlight_end":61,"highlight_start":1,"text":"                                        match counts_dataset"},{"highlight_end":89,"highlight_start":1,"text":"                                            .read_slice_1d::<f64, _>(s![gene_index, ..])"},{"highlight_end":42,"highlight_start":1,"text":"                                        {"},{"highlight_end":69,"highlight_start":1,"text":"                                            Ok(gene_expression) => {"},{"highlight_end":84,"highlight_start":1,"text":"                                                // Create samples map for this gene"},{"highlight_end":82,"highlight_start":1,"text":"                                                let mut samples_map = Map::new();"},{"highlight_end":96,"highlight_start":1,"text":"                                                for (i, sample) in samples.iter().enumerate() {"},{"highlight_end":83,"highlight_start":1,"text":"                                                    if i < gene_expression.len() {"},{"highlight_end":99,"highlight_start":1,"text":"                                                        // Handle potential NaN or infinity values"},{"highlight_end":68,"highlight_start":1,"text":"                                                        let value ="},{"highlight_end":96,"highlight_start":1,"text":"                                                            if gene_expression[i].is_finite() {"},{"highlight_end":96,"highlight_start":1,"text":"                                                                Value::from(gene_expression[i])"},{"highlight_end":69,"highlight_start":1,"text":"                                                            } else {"},{"highlight_end":76,"highlight_start":1,"text":"                                                                Value::Null"},{"highlight_end":63,"highlight_start":1,"text":"                                                            };"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":76,"highlight_start":1,"text":"                                                        samples_map.insert("},{"highlight_end":86,"highlight_start":1,"text":"                                                            sample.replace(\"\\\\\", \"\"),"},{"highlight_end":67,"highlight_start":1,"text":"                                                            value,"},{"highlight_end":59,"highlight_start":1,"text":"                                                        );"},{"highlight_end":54,"highlight_start":1,"text":"                                                    }"},{"highlight_end":50,"highlight_start":1,"text":"                                                }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":81,"highlight_start":1,"text":"                                                // Create gene data and store it"},{"highlight_end":72,"highlight_start":1,"text":"                                                let gene_data = json!({"},{"highlight_end":73,"highlight_start":1,"text":"                                                    \"dataId\": gene_name,"},{"highlight_end":75,"highlight_start":1,"text":"                                                    \"samples\": samples_map"},{"highlight_end":52,"highlight_start":1,"text":"                                                });"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":95,"highlight_start":1,"text":"                                                let mut genes_map = genes_map.lock().unwrap();"},{"highlight_end":96,"highlight_start":1,"text":"                                                genes_map.insert(gene_name.clone(), gene_data);"},{"highlight_end":46,"highlight_start":1,"text":"                                            }"},{"highlight_end":59,"highlight_start":1,"text":"                                            Err(err1) => {"},{"highlight_end":80,"highlight_start":1,"text":"                                                let mut error_map = Map::new();"},{"highlight_end":66,"highlight_start":1,"text":"                                                error_map.insert("},{"highlight_end":73,"highlight_start":1,"text":"                                                    \"error\".to_string(),"},{"highlight_end":75,"highlight_start":1,"text":"                                                    Value::String(format!("},{"highlight_end":98,"highlight_start":1,"text":"                                                        \"Failed to read expression values: {:?}\","},{"highlight_end":61,"highlight_start":1,"text":"                                                        err1"},{"highlight_end":56,"highlight_start":1,"text":"                                                    )),"},{"highlight_end":51,"highlight_start":1,"text":"                                                );"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":95,"highlight_start":1,"text":"                                                let mut genes_map = genes_map.lock().unwrap();"},{"highlight_end":66,"highlight_start":1,"text":"                                                genes_map.insert("},{"highlight_end":71,"highlight_start":1,"text":"                                                    gene_name.clone(),"},{"highlight_end":78,"highlight_start":1,"text":"                                                    Value::Object(error_map),"},{"highlight_end":51,"highlight_start":1,"text":"                                                );"},{"highlight_end":46,"highlight_start":1,"text":"                                            }"},{"highlight_end":42,"highlight_start":1,"text":"                                        }"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":34,"highlight_start":1,"text":"                                }"},{"highlight_end":30,"highlight_start":1,"text":"                            }"},{"highlight_end":38,"highlight_start":1,"text":"                            None => {"},{"highlight_end":50,"highlight_start":1,"text":"                                // Gene not found"},{"highlight_end":64,"highlight_start":1,"text":"                                let mut error_map = Map::new();"},{"highlight_end":50,"highlight_start":1,"text":"                                error_map.insert("},{"highlight_end":57,"highlight_start":1,"text":"                                    \"error\".to_string(),"},{"highlight_end":92,"highlight_start":1,"text":"                                    Value::String(\"Gene not found in dataset\".to_string()),"},{"highlight_end":35,"highlight_start":1,"text":"                                );"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":79,"highlight_start":1,"text":"                                let mut genes_map = genes_map.lock().unwrap();"},{"highlight_end":95,"highlight_start":1,"text":"                                genes_map.insert(gene_name.clone(), Value::Object(error_map));"},{"highlight_end":30,"highlight_start":1,"text":"                            }"},{"highlight_end":26,"highlight_start":1,"text":"                        }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":41,"highlight_start":1,"text":"                        // Record timing"},{"highlight_end":89,"highlight_start":1,"text":"                        let elapsed_time = gene_start_time.elapsed().as_millis() as u64;"},{"highlight_end":77,"highlight_start":1,"text":"                        let mut gene_timings = gene_timings.lock().unwrap();"},{"highlight_end":91,"highlight_start":1,"text":"                        gene_timings.insert(gene_name.clone(), Value::from(elapsed_time));"},{"highlight_end":24,"highlight_start":1,"text":"                    });"},{"highlight_end":20,"highlight_start":1,"text":"                });"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":26,"highlight_start":1,"text":"            Err(err) => {"},{"highlight_end":85,"highlight_start":1,"text":"                // If thread pool creation fails, fall back to sequential processing"},{"highlight_end":32,"highlight_start":1,"text":"                timings.insert("},{"highlight_end":53,"highlight_start":1,"text":"                    \"thread_pool_error\".to_string(),"},{"highlight_end":87,"highlight_start":1,"text":"                    Value::String(format!(\"Failed to create thread pool: {:?}\", err)),"},{"highlight_end":19,"highlight_start":1,"text":"                );"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":44,"highlight_start":1,"text":"                process_genes_sequentially("},{"highlight_end":33,"highlight_start":1,"text":"                    &gene_names,"},{"highlight_end":28,"highlight_start":1,"text":"                    &genes,"},{"highlight_end":36,"highlight_start":1,"text":"                    &gene_to_index,"},{"highlight_end":37,"highlight_start":1,"text":"                    &counts_dataset,"},{"highlight_end":36,"highlight_start":1,"text":"                    &all_gene_data,"},{"highlight_end":30,"highlight_start":1,"text":"                    &samples,"},{"highlight_end":31,"highlight_start":1,"text":"                    &genes_map"},{"highlight_end":19,"highlight_start":1,"text":"                );"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":10,"highlight_start":1,"text":"        }"},{"highlight_end":38,"highlight_start":1,"text":"    } else if gene_names.len() == 1 {"},{"highlight_end":40,"highlight_start":1,"text":"        let gene_name = &gene_names[0];"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":60,"highlight_start":1,"text":"        match genes.iter().position(|x| *x == *gene_name) {"},{"highlight_end":34,"highlight_start":1,"text":"            Some(gene_index) => {"},{"highlight_end":61,"highlight_start":1,"text":"                if gene_index >= counts_dataset.shape()[0] {"},{"highlight_end":52,"highlight_start":1,"text":"                    let mut error_map = Map::new();"},{"highlight_end":38,"highlight_start":1,"text":"                    error_map.insert("},{"highlight_end":45,"highlight_start":1,"text":"                        \"error\".to_string(),"},{"highlight_end":79,"highlight_start":1,"text":"                        Value::String(\"Gene index out of bounds\".to_string()),"},{"highlight_end":23,"highlight_start":1,"text":"                    );"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":67,"highlight_start":1,"text":"                    let mut genes_map = genes_map.lock().unwrap();"},{"highlight_end":83,"highlight_start":1,"text":"                    genes_map.insert(gene_name.clone(), Value::Object(error_map));"},{"highlight_end":25,"highlight_start":1,"text":"                } else {"},{"highlight_end":66,"highlight_start":1,"text":"                    // Read just this single gene's data directly"},{"highlight_end":87,"highlight_start":1,"text":"                    match counts_dataset.read_slice_1d::<f64, _>(s![gene_index, ..]) {"},{"highlight_end":49,"highlight_start":1,"text":"                        Ok(gene_expression) => {"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":64,"highlight_start":1,"text":"                            // Create samples map for this gene"},{"highlight_end":62,"highlight_start":1,"text":"                            let mut samples_map = Map::new();"},{"highlight_end":76,"highlight_start":1,"text":"                            for (i, sample) in samples.iter().enumerate() {"},{"highlight_end":63,"highlight_start":1,"text":"                                if i < gene_expression.len() {"},{"highlight_end":79,"highlight_start":1,"text":"                                    // Handle potential NaN or infinity values"},{"highlight_end":84,"highlight_start":1,"text":"                                    let value = if gene_expression[i].is_finite() {"},{"highlight_end":72,"highlight_start":1,"text":"                                        Value::from(gene_expression[i])"},{"highlight_end":45,"highlight_start":1,"text":"                                    } else {"},{"highlight_end":52,"highlight_start":1,"text":"                                        Value::Null"},{"highlight_end":39,"highlight_start":1,"text":"                                    };"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":89,"highlight_start":1,"text":"                                    samples_map.insert(sample.replace(\"\\\\\", \"\"), value);"},{"highlight_end":34,"highlight_start":1,"text":"                                }"},{"highlight_end":30,"highlight_start":1,"text":"                            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":52,"highlight_start":1,"text":"                            let gene_data = json!({"},{"highlight_end":53,"highlight_start":1,"text":"                                \"dataId\": gene_name,"},{"highlight_end":55,"highlight_start":1,"text":"                                \"samples\": samples_map"},{"highlight_end":32,"highlight_start":1,"text":"                            });"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":75,"highlight_start":1,"text":"                            let mut genes_map = genes_map.lock().unwrap();"},{"highlight_end":76,"highlight_start":1,"text":"                            genes_map.insert(gene_name.clone(), gene_data);"},{"highlight_end":26,"highlight_start":1,"text":"                        }"},{"highlight_end":38,"highlight_start":1,"text":"                        Err(err) => {"},{"highlight_end":60,"highlight_start":1,"text":"                            let mut error_map = Map::new();"},{"highlight_end":46,"highlight_start":1,"text":"                            error_map.insert("},{"highlight_end":53,"highlight_start":1,"text":"                                \"error\".to_string(),"},{"highlight_end":55,"highlight_start":1,"text":"                                Value::String(format!("},{"highlight_end":78,"highlight_start":1,"text":"                                    \"Failed to read expression values: {:?}\","},{"highlight_end":40,"highlight_start":1,"text":"                                    err"},{"highlight_end":36,"highlight_start":1,"text":"                                )),"},{"highlight_end":31,"highlight_start":1,"text":"                            );"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":75,"highlight_start":1,"text":"                            let mut genes_map = genes_map.lock().unwrap();"},{"highlight_end":91,"highlight_start":1,"text":"                            genes_map.insert(gene_name.clone(), Value::Object(error_map));"},{"highlight_end":26,"highlight_start":1,"text":"                        }"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":22,"highlight_start":1,"text":"            None => {"},{"highlight_end":48,"highlight_start":1,"text":"                let mut error_map = Map::new();"},{"highlight_end":34,"highlight_start":1,"text":"                error_map.insert("},{"highlight_end":41,"highlight_start":1,"text":"                    \"error\".to_string(),"},{"highlight_end":76,"highlight_start":1,"text":"                    Value::String(\"Gene not found in dataset\".to_string()),"},{"highlight_end":19,"highlight_start":1,"text":"                );"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":63,"highlight_start":1,"text":"                let mut genes_map = genes_map.lock().unwrap();"},{"highlight_end":79,"highlight_start":1,"text":"                genes_map.insert(gene_name.clone(), Value::Object(error_map));"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":10,"highlight_start":1,"text":"        }"},{"highlight_end":6,"highlight_start":1,"text":"    }"}]}]}}
{"reason":"compiler-artifact","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"bigwig","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/bigwig.rs","edition":"2018","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libbigwig-7b9653862126f423.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"gdcmaf","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/gdcmaf.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unneeded `return` statement\n   --> src/gdcmaf.rs:198:41\n    |\n198 | ...                   return Ok((url.clone(),text))\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n198 -                                         return Ok((url.clone(),text))\n198 +                                         Ok((url.clone(),text))\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_return)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove `return`","rendered":null,"spans":[{"byte_end":8848,"byte_start":8819,"column_end":70,"column_start":41,"expansion":null,"file_name":"src/gdcmaf.rs","is_primary":true,"label":null,"line_end":198,"line_start":198,"suggested_replacement":"Ok((url.clone(),text))","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":41,"text":"                                        return Ok((url.clone(),text))"}]}]}],"code":{"code":"clippy::needless_return","explanation":null},"level":"warning","message":"unneeded `return` statement","spans":[{"byte_end":8848,"byte_start":8819,"column_end":70,"column_start":41,"expansion":null,"file_name":"src/gdcmaf.rs","is_primary":true,"label":null,"line_end":198,"line_start":198,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":41,"text":"                                        return Ok((url.clone(),text))"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unneeded late initialization\n   --> src/fisher.rs:103:9\n    |\n103 |         let final_p_val;\n    |         ^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init\n    = note: `#[warn(clippy::needless_late_init)]` on by default\nhelp: move the declaration `final_p_val` here and remove the assignments from the `match` arms\n    |\n103 ~         \n104 ~         let final_p_val = match self.p_value {\n105 |             Some(p_val) => {\n106 ~                 p_val\n107 |             }\n108 |             None => {\n109 ~                 0.0\n110 |             }\n111 ~         };\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_late_init)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"move the declaration `final_p_val` here and remove the assignments from the `match` arms","rendered":null,"spans":[{"byte_end":10017,"byte_start":10003,"column_end":31,"column_start":17,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":106,"line_start":106,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":31,"highlight_start":17,"text":"                final_p_val = p_val;"}]},{"byte_end":10023,"byte_start":10022,"column_end":37,"column_start":36,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":106,"line_start":106,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":37,"highlight_start":36,"text":"                final_p_val = p_val;"}]},{"byte_end":10090,"byte_start":10076,"column_end":31,"column_start":17,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":109,"line_start":109,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":31,"highlight_start":17,"text":"                final_p_val = 0.0;"}]},{"byte_end":10094,"byte_start":10093,"column_end":35,"column_start":34,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":109,"line_start":109,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":35,"highlight_start":34,"text":"                final_p_val = 0.0;"}]},{"byte_end":9928,"byte_start":9912,"column_end":25,"column_start":9,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":103,"line_start":103,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":25,"highlight_start":9,"text":"        let final_p_val;"}]},{"byte_end":9937,"byte_start":9937,"column_end":9,"column_start":9,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":104,"line_start":104,"suggested_replacement":"let final_p_val = ","suggestion_applicability":"Unspecified","text":[{"highlight_end":9,"highlight_start":9,"text":"        match self.p_value {"}]},{"byte_end":10118,"byte_start":10118,"column_end":10,"column_start":10,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":111,"line_start":111,"suggested_replacement":";","suggestion_applicability":"Unspecified","text":[{"highlight_end":10,"highlight_start":10,"text":"        }"}]}]}],"code":{"code":"clippy::needless_late_init","explanation":null},"level":"warning","message":"unneeded late initialization","spans":[{"byte_end":9928,"byte_start":9912,"column_end":25,"column_start":9,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":103,"line_start":103,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":25,"highlight_start":9,"text":"        let final_p_val;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n   --> src/topGeneByExpressionVariance.rs:409:5\n    |\n409 | /     match min_count_option {\n410 | |         Some(x) => min_count = x,\n411 | |         None => {}\n412 | |     }\n    | |_____^ help: try: `if let Some(x) = min_count_option { min_count = x }`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n    = note: `#[warn(clippy::single_match)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::single_match)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":14693,"byte_start":14610,"column_end":6,"column_start":5,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":412,"line_start":409,"suggested_replacement":"if let Some(x) = min_count_option { min_count = x }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":29,"highlight_start":5,"text":"    match min_count_option {"},{"highlight_end":34,"highlight_start":1,"text":"        Some(x) => min_count = x,"},{"highlight_end":19,"highlight_start":1,"text":"        None => {}"},{"highlight_end":6,"highlight_start":1,"text":"    }"}]}]}],"code":{"code":"clippy::single_match","explanation":null},"level":"warning","message":"you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`","spans":[{"byte_end":14693,"byte_start":14610,"column_end":6,"column_start":5,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":412,"line_start":409,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":5,"text":"    match min_count_option {"},{"highlight_end":34,"highlight_start":1,"text":"        Some(x) => min_count = x,"},{"highlight_end":19,"highlight_start":1,"text":"        None => {}"},{"highlight_end":6,"highlight_start":1,"text":"    }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n   --> src/topGeneByExpressionVariance.rs:414:5\n    |\n414 | /     match min_total_count_option {\n415 | |         Some(x) => min_total_count = x,\n416 | |         None => {}\n417 | |     }\n    | |_____^ help: try: `if let Some(x) = min_total_count_option { min_total_count = x }`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":14834,"byte_start":14739,"column_end":6,"column_start":5,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":417,"line_start":414,"suggested_replacement":"if let Some(x) = min_total_count_option { min_total_count = x }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":35,"highlight_start":5,"text":"    match min_total_count_option {"},{"highlight_end":40,"highlight_start":1,"text":"        Some(x) => min_total_count = x,"},{"highlight_end":19,"highlight_start":1,"text":"        None => {}"},{"highlight_end":6,"highlight_start":1,"text":"    }"}]}]}],"code":{"code":"clippy::single_match","explanation":null},"level":"warning","message":"you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`","spans":[{"byte_end":14834,"byte_start":14739,"column_end":6,"column_start":5,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":417,"line_start":414,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":5,"text":"    match min_total_count_option {"},{"highlight_end":40,"highlight_start":1,"text":"        Some(x) => min_total_count = x,"},{"highlight_end":19,"highlight_start":1,"text":"        None => {}"},{"highlight_end":6,"highlight_start":1,"text":"    }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"computeTopTerms","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/computeTopTerms.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/computeTopTerms.rs:136:47\n    |\n136 |     let (input_matrix, metabolites) = input_data(&file_name, &samples_list);\n    |                                                  ^^^^^^^^^^ help: change this to: `file_name`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_borrow)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":5178,"byte_start":5168,"column_end":57,"column_start":47,"expansion":null,"file_name":"src/computeTopTerms.rs","is_primary":true,"label":null,"line_end":136,"line_start":136,"suggested_replacement":"file_name","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":57,"highlight_start":47,"text":"\tlet (input_matrix, metabolites) = input_data(&file_name, &samples_list);"}]}]}],"code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","message":"this expression creates a reference which is immediately dereferenced by the compiler","spans":[{"byte_end":5178,"byte_start":5168,"column_end":57,"column_start":47,"expansion":null,"file_name":"src/computeTopTerms.rs","is_primary":true,"label":null,"line_end":136,"line_start":136,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":57,"highlight_start":47,"text":"\tlet (input_matrix, metabolites) = input_data(&file_name, &samples_list);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"computeTopTerms","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/computeTopTerms.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/computeTopTerms.rs:147:21\n    |\n147 |             output_string += &\",\".to_string();\n    |                              ^^^^^^^^^^^^^^^^ help: use: `\",\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n    = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::unnecessary_to_owned)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":5573,"byte_start":5557,"column_end":37,"column_start":21,"expansion":null,"file_name":"src/computeTopTerms.rs","is_primary":true,"label":null,"line_end":147,"line_start":147,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":37,"highlight_start":21,"text":"\t\t\toutput_string += &\",\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":5573,"byte_start":5557,"column_end":37,"column_start":21,"expansion":null,"file_name":"src/computeTopTerms.rs","is_primary":true,"label":null,"line_end":147,"line_start":147,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":21,"text":"\t\t\toutput_string += &\",\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"computeTopTerms","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/computeTopTerms.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/computeTopTerms.rs:150:19\n    |\n150 |     output_string += &\"]\".to_string();\n    |                      ^^^^^^^^^^^^^^^^ help: use: `\"]\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":5616,"byte_start":5600,"column_end":35,"column_start":19,"expansion":null,"file_name":"src/computeTopTerms.rs","is_primary":true,"label":null,"line_end":150,"line_start":150,"suggested_replacement":"\"]\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":35,"highlight_start":19,"text":"\toutput_string += &\"]\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":5616,"byte_start":5600,"column_end":35,"column_start":19,"expansion":null,"file_name":"src/computeTopTerms.rs","is_primary":true,"label":null,"line_end":150,"line_start":150,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":19,"text":"\toutput_string += &\"]\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"readHDF5","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/readHDF5.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n   --> src/readHDF5.rs:831:12\n    |\n831 |     genes: &Vec<String>,\n    |            ^^^^^^^^^^^^ help: change this to: `&[String]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n    = note: `#[warn(clippy::ptr_arg)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::ptr_arg)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":32092,"byte_start":32080,"column_end":24,"column_start":12,"expansion":null,"file_name":"src/readHDF5.rs","is_primary":true,"label":null,"line_end":831,"line_start":831,"suggested_replacement":"&[String]","suggestion_applicability":"Unspecified","text":[{"highlight_end":24,"highlight_start":12,"text":"    genes: &Vec<String>,"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":32092,"byte_start":32080,"column_end":24,"column_start":12,"expansion":null,"file_name":"src/readHDF5.rs","is_primary":true,"label":null,"line_end":831,"line_start":831,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":24,"highlight_start":12,"text":"    genes: &Vec<String>,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"readHDF5","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/readHDF5.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n   --> src/readHDF5.rs:835:14\n    |\n835 |     samples: &Vec<String>,\n    |              ^^^^^^^^^^^^ help: change this to: `&[String]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":32324,"byte_start":32312,"column_end":26,"column_start":14,"expansion":null,"file_name":"src/readHDF5.rs","is_primary":true,"label":null,"line_end":835,"line_start":835,"suggested_replacement":"&[String]","suggestion_applicability":"Unspecified","text":[{"highlight_end":26,"highlight_start":14,"text":"    samples: &Vec<String>,"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":32324,"byte_start":32312,"column_end":26,"column_start":14,"expansion":null,"file_name":"src/readHDF5.rs","is_primary":true,"label":null,"line_end":835,"line_start":835,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":14,"text":"    samples: &Vec<String>,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: useless conversion to the same type: `f64`\n   --> src/topGeneByExpressionVariance.rs:435:24\n    |\n435 |         lib_sizes.push(lib_sizes_vector[(0, i)].into());\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `lib_sizes_vector[(0, i)]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::useless_conversion)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider removing `.into()`","rendered":null,"spans":[{"byte_end":15609,"byte_start":15578,"column_end":55,"column_start":24,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":435,"line_start":435,"suggested_replacement":"lib_sizes_vector[(0, i)]","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":55,"highlight_start":24,"text":"        lib_sizes.push(lib_sizes_vector[(0, i)].into());"}]}]}],"code":{"code":"clippy::useless_conversion","explanation":null},"level":"warning","message":"useless conversion to the same type: `f64`","spans":[{"byte_end":15609,"byte_start":15578,"column_end":55,"column_start":24,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":435,"line_start":435,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":24,"text":"        lib_sizes.push(lib_sizes_vector[(0, i)].into());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/topGeneByExpressionVariance.rs:462:12\n    |\n462 |         if row_sums[(row, 0)] as f64 >= min_total_count - TOL {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `row_sums[(row, 0)]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::unnecessary_cast)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":16603,"byte_start":16578,"column_end":37,"column_start":12,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":462,"line_start":462,"suggested_replacement":"row_sums[(row, 0)]","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":37,"highlight_start":12,"text":"        if row_sums[(row, 0)] as f64 >= min_total_count - TOL {"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":16603,"byte_start":16578,"column_end":37,"column_start":12,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":462,"line_start":462,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":12,"text":"        if row_sums[(row, 0)] as f64 >= min_total_count - TOL {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` has identical blocks\n   --> src/topGeneByExpressionVariance.rs:478:13\n    |\n478 | /             {\n479 | |                 gene_infos.push(GeneInfo {\n480 | |                     rank_type: gene_counts.variance(),\n481 | |                     gene_symbol: gene_names[row].clone(),\n482 | |                 });\n483 | |             } else if filter_extreme_values == false {\n    | |_____________^\n    |\nnote: same as this\n   --> src/topGeneByExpressionVariance.rs:483:54\n    |\n483 |               } else if filter_extreme_values == false {\n    |  ______________________________________________________^\n484 | |                 gene_infos.push(GeneInfo {\n485 | |                     rank_type: gene_counts.variance(),\n486 | |                     gene_symbol: gene_names[row].clone(),\n487 | |                 });\n488 | |             }\n    | |_____________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else\n    = note: `#[warn(clippy::if_same_then_else)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"same as this","rendered":null,"spans":[{"byte_end":17657,"byte_start":17466,"column_end":14,"column_start":54,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":488,"line_start":483,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":54,"text":"            } else if filter_extreme_values == false {"},{"highlight_end":43,"highlight_start":1,"text":"                gene_infos.push(GeneInfo {"},{"highlight_end":55,"highlight_start":1,"text":"                    rank_type: gene_counts.variance(),"},{"highlight_end":58,"highlight_start":1,"text":"                    gene_symbol: gene_names[row].clone(),"},{"highlight_end":20,"highlight_start":1,"text":"                });"},{"highlight_end":14,"highlight_start":1,"text":"            }"}]}]},{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::if_same_then_else)]` on by default","rendered":null,"spans":[]}],"code":{"code":"clippy::if_same_then_else","explanation":null},"level":"warning","message":"this `if` has identical blocks","spans":[{"byte_end":17426,"byte_start":17235,"column_end":14,"column_start":13,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":483,"line_start":478,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":14,"highlight_start":13,"text":"            {"},{"highlight_end":43,"highlight_start":1,"text":"                gene_infos.push(GeneInfo {"},{"highlight_end":55,"highlight_start":1,"text":"                    rank_type: gene_counts.variance(),"},{"highlight_end":58,"highlight_start":1,"text":"                    gene_symbol: gene_names[row].clone(),"},{"highlight_end":20,"highlight_start":1,"text":"                });"},{"highlight_end":14,"highlight_start":1,"text":"            } else if filter_extreme_values == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/topGeneByExpressionVariance.rs:474:16\n    |\n474 |             if gene_counts.clone().variance().is_nan() == true {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `gene_counts.clone().variance().is_nan()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":17084,"byte_start":17037,"column_end":63,"column_start":16,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":474,"line_start":474,"suggested_replacement":"gene_counts.clone().variance().is_nan()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":63,"highlight_start":16,"text":"            if gene_counts.clone().variance().is_nan() == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":17084,"byte_start":17037,"column_end":63,"column_start":16,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":474,"line_start":474,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":63,"highlight_start":16,"text":"            if gene_counts.clone().variance().is_nan() == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/topGeneByExpressionVariance.rs:475:23\n    |\n475 |             } else if filter_extreme_values == true\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `filter_extreme_values`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":17138,"byte_start":17109,"column_end":52,"column_start":23,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":475,"line_start":475,"suggested_replacement":"filter_extreme_values","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":52,"highlight_start":23,"text":"            } else if filter_extreme_values == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":17138,"byte_start":17109,"column_end":52,"column_start":23,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":475,"line_start":475,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":23,"text":"            } else if filter_extreme_values == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/topGeneByExpressionVariance.rs:476:20\n    |\n476 |                 && keep_cpm_bool == true\n    |                    ^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `keep_cpm_bool`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":17179,"byte_start":17158,"column_end":41,"column_start":20,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":476,"line_start":476,"suggested_replacement":"keep_cpm_bool","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":41,"highlight_start":20,"text":"                && keep_cpm_bool == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":17179,"byte_start":17158,"column_end":41,"column_start":20,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":476,"line_start":476,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":20,"text":"                && keep_cpm_bool == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/topGeneByExpressionVariance.rs:477:20\n    |\n477 |                 && keep_total_bool == true\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `keep_total_bool`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":17222,"byte_start":17199,"column_end":43,"column_start":20,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":477,"line_start":477,"suggested_replacement":"keep_total_bool","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":20,"text":"                && keep_total_bool == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":17222,"byte_start":17199,"column_end":43,"column_start":20,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":477,"line_start":477,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":20,"text":"                && keep_total_bool == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/topGeneByExpressionVariance.rs:483:23\n    |\n483 |             } else if filter_extreme_values == false {\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!filter_extreme_values`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":17465,"byte_start":17435,"column_end":53,"column_start":23,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":483,"line_start":483,"suggested_replacement":"!filter_extreme_values","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":53,"highlight_start":23,"text":"            } else if filter_extreme_values == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":17465,"byte_start":17435,"column_end":53,"column_start":23,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":483,"line_start":483,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":53,"highlight_start":23,"text":"            } else if filter_extreme_values == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` has identical blocks\n   --> src/topGeneByExpressionVariance.rs:496:13\n    |\n496 | /             {\n497 | |                 gene_infos.push(GeneInfo {\n498 | |                     rank_type: gene_counts_data.interquartile_range(),\n499 | |                     gene_symbol: gene_names[row].clone(),\n500 | |                 });\n501 | |             } else if filter_extreme_values == false {\n    | |_____________^\n    |\nnote: same as this\n   --> src/topGeneByExpressionVariance.rs:501:54\n    |\n501 |               } else if filter_extreme_values == false {\n    |  ______________________________________________________^\n502 | |                 gene_infos.push(GeneInfo {\n503 | |                     rank_type: gene_counts_data.interquartile_range(),\n504 | |                     gene_symbol: gene_names[row].clone(),\n505 | |                 });\n506 | |             }\n    | |_____________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"same as this","rendered":null,"spans":[{"byte_end":18469,"byte_start":18262,"column_end":14,"column_start":54,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":506,"line_start":501,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":54,"text":"            } else if filter_extreme_values == false {"},{"highlight_end":43,"highlight_start":1,"text":"                gene_infos.push(GeneInfo {"},{"highlight_end":71,"highlight_start":1,"text":"                    rank_type: gene_counts_data.interquartile_range(),"},{"highlight_end":58,"highlight_start":1,"text":"                    gene_symbol: gene_names[row].clone(),"},{"highlight_end":20,"highlight_start":1,"text":"                });"},{"highlight_end":14,"highlight_start":1,"text":"            }"}]}]},{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else","rendered":null,"spans":[]}],"code":{"code":"clippy::if_same_then_else","explanation":null},"level":"warning","message":"this `if` has identical blocks","spans":[{"byte_end":18222,"byte_start":18015,"column_end":14,"column_start":13,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":501,"line_start":496,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":14,"highlight_start":13,"text":"            {"},{"highlight_end":43,"highlight_start":1,"text":"                gene_infos.push(GeneInfo {"},{"highlight_end":71,"highlight_start":1,"text":"                    rank_type: gene_counts_data.interquartile_range(),"},{"highlight_end":58,"highlight_start":1,"text":"                    gene_symbol: gene_names[row].clone(),"},{"highlight_end":20,"highlight_start":1,"text":"                });"},{"highlight_end":14,"highlight_start":1,"text":"            } else if filter_extreme_values == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/topGeneByExpressionVariance.rs:492:16\n    |\n492 |             if gene_counts_data.clone().interquartile_range().is_nan() == true {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `gene_counts_data.clone().interquartile_range().is_nan()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":17864,"byte_start":17801,"column_end":79,"column_start":16,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":492,"line_start":492,"suggested_replacement":"gene_counts_data.clone().interquartile_range().is_nan()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":79,"highlight_start":16,"text":"            if gene_counts_data.clone().interquartile_range().is_nan() == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":17864,"byte_start":17801,"column_end":79,"column_start":16,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":492,"line_start":492,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":79,"highlight_start":16,"text":"            if gene_counts_data.clone().interquartile_range().is_nan() == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/topGeneByExpressionVariance.rs:493:23\n    |\n493 |             } else if filter_extreme_values == true\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `filter_extreme_values`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":17918,"byte_start":17889,"column_end":52,"column_start":23,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":493,"line_start":493,"suggested_replacement":"filter_extreme_values","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":52,"highlight_start":23,"text":"            } else if filter_extreme_values == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":17918,"byte_start":17889,"column_end":52,"column_start":23,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":493,"line_start":493,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":23,"text":"            } else if filter_extreme_values == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/topGeneByExpressionVariance.rs:494:20\n    |\n494 |                 && keep_cpm_bool == true\n    |                    ^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `keep_cpm_bool`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":17959,"byte_start":17938,"column_end":41,"column_start":20,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":494,"line_start":494,"suggested_replacement":"keep_cpm_bool","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":41,"highlight_start":20,"text":"                && keep_cpm_bool == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":17959,"byte_start":17938,"column_end":41,"column_start":20,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":494,"line_start":494,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":20,"text":"                && keep_cpm_bool == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/topGeneByExpressionVariance.rs:495:20\n    |\n495 |                 && keep_total_bool == true\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `keep_total_bool`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":18002,"byte_start":17979,"column_end":43,"column_start":20,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":495,"line_start":495,"suggested_replacement":"keep_total_bool","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":20,"text":"                && keep_total_bool == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":18002,"byte_start":17979,"column_end":43,"column_start":20,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":495,"line_start":495,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":20,"text":"                && keep_total_bool == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/topGeneByExpressionVariance.rs:501:23\n    |\n501 |             } else if filter_extreme_values == false {\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!filter_extreme_values`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":18261,"byte_start":18231,"column_end":53,"column_start":23,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":501,"line_start":501,"suggested_replacement":"!filter_extreme_values","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":53,"highlight_start":23,"text":"            } else if filter_extreme_values == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":18261,"byte_start":18231,"column_end":53,"column_start":23,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":501,"line_start":501,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":53,"highlight_start":23,"text":"            } else if filter_extreme_values == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/topGeneByExpressionVariance.rs:531:18\n    |\n531 |                 (input_matrix[(row, col)] as f64 * 1000000.0) / norm_factor as f64;\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `input_matrix[(row, col)]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":19380,"byte_start":19349,"column_end":49,"column_start":18,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":531,"line_start":531,"suggested_replacement":"input_matrix[(row, col)]","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":49,"highlight_start":18,"text":"                (input_matrix[(row, col)] as f64 * 1000000.0) / norm_factor as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":19380,"byte_start":19349,"column_end":49,"column_start":18,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":531,"line_start":531,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":49,"highlight_start":18,"text":"                (input_matrix[(row, col)] as f64 * 1000000.0) / norm_factor as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/topGeneByExpressionVariance.rs:531:65\n    |\n531 |                 (input_matrix[(row, col)] as f64 * 1000000.0) / norm_factor as f64;\n    |                                                                 ^^^^^^^^^^^^^^^^^^ help: try: `norm_factor`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":19414,"byte_start":19396,"column_end":83,"column_start":65,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":531,"line_start":531,"suggested_replacement":"norm_factor","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":83,"highlight_start":65,"text":"                (input_matrix[(row, col)] as f64 * 1000000.0) / norm_factor as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":19414,"byte_start":19396,"column_end":83,"column_start":65,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":531,"line_start":531,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":83,"highlight_start":65,"text":"                (input_matrix[(row, col)] as f64 * 1000000.0) / norm_factor as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n   --> src/fisher.rs:152:21\n    |\n152 | /                     match mtc_string.as_str() {\n153 | |                         Some(mtc) => {\n154 | |                             if mtc == \"fdr\" {\n155 | |                                 fdr_bool = true;\n...   |\n162 | |                         None => {}\n163 | |                     }\n    | |_____________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n    = note: `#[warn(clippy::single_match)]` on by default\nhelp: try\n    |\n152 ~                     if let Some(mtc) = mtc_string.as_str() {\n153 +                         if mtc == \"fdr\" {\n154 +                             fdr_bool = true;\n155 +                         } else if mtc == \"bon\" {\n156 +                             bon_bool = true;\n157 +                         } else {\n158 +                             panic!(\"Unrecognized option, mtc field should be fdr/bon\");\n159 +                         }\n160 +                     }\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::single_match)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":12266,"byte_start":11761,"column_end":22,"column_start":21,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":163,"line_start":152,"suggested_replacement":"if let Some(mtc) = mtc_string.as_str() {\n                        if mtc == \"fdr\" {\n                            fdr_bool = true;\n                        } else if mtc == \"bon\" {\n                            bon_bool = true;\n                        } else {\n                            panic!(\"Unrecognized option, mtc field should be fdr/bon\");\n                        }\n                    }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":48,"highlight_start":21,"text":"                    match mtc_string.as_str() {"},{"highlight_end":39,"highlight_start":1,"text":"                        Some(mtc) => {"},{"highlight_end":46,"highlight_start":1,"text":"                            if mtc == \"fdr\" {"},{"highlight_end":49,"highlight_start":1,"text":"                                fdr_bool = true;"},{"highlight_end":53,"highlight_start":1,"text":"                            } else if mtc == \"bon\" {"},{"highlight_end":49,"highlight_start":1,"text":"                                bon_bool = true;"},{"highlight_end":37,"highlight_start":1,"text":"                            } else {"},{"highlight_end":92,"highlight_start":1,"text":"                                panic!(\"Unrecognized option, mtc field should be fdr/bon\");"},{"highlight_end":30,"highlight_start":1,"text":"                            }"},{"highlight_end":26,"highlight_start":1,"text":"                        }"},{"highlight_end":35,"highlight_start":1,"text":"                        None => {}"},{"highlight_end":22,"highlight_start":1,"text":"                    }"}]}]}],"code":{"code":"clippy::single_match","explanation":null},"level":"warning","message":"you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`","spans":[{"byte_end":12266,"byte_start":11761,"column_end":22,"column_start":21,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":163,"line_start":152,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":21,"text":"                    match mtc_string.as_str() {"},{"highlight_end":39,"highlight_start":1,"text":"                        Some(mtc) => {"},{"highlight_end":46,"highlight_start":1,"text":"                            if mtc == \"fdr\" {"},{"highlight_end":49,"highlight_start":1,"text":"                                fdr_bool = true;"},{"highlight_end":53,"highlight_start":1,"text":"                            } else if mtc == \"bon\" {"},{"highlight_end":49,"highlight_start":1,"text":"                                bon_bool = true;"},{"highlight_end":37,"highlight_start":1,"text":"                            } else {"},{"highlight_end":92,"highlight_start":1,"text":"                                panic!(\"Unrecognized option, mtc field should be fdr/bon\");"},{"highlight_end":30,"highlight_start":1,"text":"                            }"},{"highlight_end":26,"highlight_start":1,"text":"                        }"},{"highlight_end":35,"highlight_start":1,"text":"                        None => {}"},{"highlight_end":22,"highlight_start":1,"text":"                    }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n   --> src/fisher.rs:181:21\n    |\n181 | /                     match low_sample_size_string.as_bool() {\n182 | |                         Some(low_sample_size) => match low_sample_size {\n183 | |                             true => low_sample_size_bool = true,\n184 | |                             false => {}\n185 | |                         },\n186 | |                         None => {}\n187 | |                     }\n    | |_____________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\nhelp: try\n    |\n181 ~                     if let Some(low_sample_size) = low_sample_size_string.as_bool() { match low_sample_size {\n182 +                         true => low_sample_size_bool = true,\n183 +                         false => {}\n184 +                     } }\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":13249,"byte_start":12947,"column_end":22,"column_start":21,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":187,"line_start":181,"suggested_replacement":"if let Some(low_sample_size) = low_sample_size_string.as_bool() { match low_sample_size {\n                        true => low_sample_size_bool = true,\n                        false => {}\n                    } }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":21,"text":"                    match low_sample_size_string.as_bool() {"},{"highlight_end":73,"highlight_start":1,"text":"                        Some(low_sample_size) => match low_sample_size {"},{"highlight_end":65,"highlight_start":1,"text":"                            true => low_sample_size_bool = true,"},{"highlight_end":40,"highlight_start":1,"text":"                            false => {}"},{"highlight_end":27,"highlight_start":1,"text":"                        },"},{"highlight_end":35,"highlight_start":1,"text":"                        None => {}"},{"highlight_end":22,"highlight_start":1,"text":"                    }"}]}]}],"code":{"code":"clippy::single_match","explanation":null},"level":"warning","message":"you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`","spans":[{"byte_end":13249,"byte_start":12947,"column_end":22,"column_start":21,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":187,"line_start":181,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":61,"highlight_start":21,"text":"                    match low_sample_size_string.as_bool() {"},{"highlight_end":73,"highlight_start":1,"text":"                        Some(low_sample_size) => match low_sample_size {"},{"highlight_end":65,"highlight_start":1,"text":"                            true => low_sample_size_bool = true,"},{"highlight_end":40,"highlight_start":1,"text":"                            false => {}"},{"highlight_end":27,"highlight_start":1,"text":"                        },"},{"highlight_end":35,"highlight_start":1,"text":"                        None => {}"},{"highlight_end":22,"highlight_start":1,"text":"                    }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unneeded late initialization\n   --> src/topGeneByExpressionVariance.rs:553:21\n    |\n553 |                     let samples_string;\n    |                     ^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init\n    = note: `#[warn(clippy::needless_late_init)]` on by default\nhelp: move the declaration `samples_string` here and remove the assignments from the `match` arms\n    |\n553 ~                     \n554 ~                     let samples_string = match samples_string_result.as_str() {\n555 |                         Some(x) => {\n556 ~                             x.to_string()\n557 |                             // println!(\"Samples: {}\", samples_string);\n...\n569 |                         }\n570 ~                     };\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_late_init)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"move the declaration `samples_string` here and remove the assignments from the `match` arms","rendered":null,"spans":[{"byte_end":20423,"byte_start":20406,"column_end":46,"column_start":29,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":556,"line_start":556,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":46,"highlight_start":29,"text":"                            samples_string = x.to_string();"}]},{"byte_end":20437,"byte_start":20436,"column_end":60,"column_start":59,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":556,"line_start":556,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":60,"highlight_start":59,"text":"                            samples_string = x.to_string();"}]},{"byte_end":20281,"byte_start":20262,"column_end":40,"column_start":21,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":553,"line_start":553,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":40,"highlight_start":21,"text":"                    let samples_string;"}]},{"byte_end":20302,"byte_start":20302,"column_end":21,"column_start":21,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":554,"line_start":554,"suggested_replacement":"let samples_string = ","suggestion_applicability":"Unspecified","text":[{"highlight_end":21,"highlight_start":21,"text":"                    match samples_string_result.as_str() {"}]},{"byte_end":21053,"byte_start":21053,"column_end":22,"column_start":22,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":570,"line_start":570,"suggested_replacement":";","suggestion_applicability":"Unspecified","text":[{"highlight_end":22,"highlight_start":22,"text":"                    }"}]}]}],"code":{"code":"clippy::needless_late_init","explanation":null},"level":"warning","message":"unneeded late initialization","spans":[{"byte_end":20281,"byte_start":20262,"column_end":40,"column_start":21,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":553,"line_start":553,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":40,"highlight_start":21,"text":"                    let samples_string;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"gdcmaf","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/gdcmaf.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_vec`\n   --> src/gdcmaf.rs:231:33\n    |\n231 |         encoder_guard.write_all(&maf_col.join(\"\\t\").as_bytes().to_vec()).expect(\"Failed to write header\");\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `maf_col.join(\"\\t\").as_bytes()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n    = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::unnecessary_to_owned)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":10272,"byte_start":10233,"column_end":72,"column_start":33,"expansion":null,"file_name":"src/gdcmaf.rs","is_primary":true,"label":null,"line_end":231,"line_start":231,"suggested_replacement":"maf_col.join(\"\\t\").as_bytes()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":72,"highlight_start":33,"text":"        encoder_guard.write_all(&maf_col.join(\"\\t\").as_bytes().to_vec()).expect(\"Failed to write header\");"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_vec`","spans":[{"byte_end":10272,"byte_start":10233,"column_end":72,"column_start":33,"expansion":null,"file_name":"src/gdcmaf.rs","is_primary":true,"label":null,"line_end":231,"line_start":231,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":72,"highlight_start":33,"text":"        encoder_guard.write_all(&maf_col.join(\"\\t\").as_bytes().to_vec()).expect(\"Failed to write header\");"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unneeded late initialization\n   --> src/topGeneByExpressionVariance.rs:573:21\n    |\n573 |                     let file_name;\n    |                     ^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init\nhelp: move the declaration `file_name` here and remove the assignments from the `match` arms\n    |\n573 ~                     \n574 |\n575 ~                     let file_name = match file_name_result.as_str() {\n576 |                         Some(x) => {\n577 ~                             x.to_string()\n578 |                             // eprintln!(\"Input file: {}\", file_name);\n...\n595 |                         }\n596 ~                     };\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"move the declaration `file_name` here and remove the assignments from the `match` arms","rendered":null,"spans":[{"byte_end":21293,"byte_start":21281,"column_end":41,"column_start":29,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":577,"line_start":577,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":41,"highlight_start":29,"text":"                            file_name = x.to_string();"}]},{"byte_end":21307,"byte_start":21306,"column_end":55,"column_start":54,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":577,"line_start":577,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":55,"highlight_start":54,"text":"                            file_name = x.to_string();"}]},{"byte_end":21160,"byte_start":21146,"column_end":35,"column_start":21,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":573,"line_start":573,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":35,"highlight_start":21,"text":"                    let file_name;"}]},{"byte_end":21182,"byte_start":21182,"column_end":21,"column_start":21,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":575,"line_start":575,"suggested_replacement":"let file_name = ","suggestion_applicability":"Unspecified","text":[{"highlight_end":21,"highlight_start":21,"text":"                    match file_name_result.as_str() {"}]},{"byte_end":22226,"byte_start":22226,"column_end":22,"column_start":22,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":596,"line_start":596,"suggested_replacement":";","suggestion_applicability":"Unspecified","text":[{"highlight_end":22,"highlight_start":22,"text":"                    }"}]}]}],"code":{"code":"clippy::needless_late_init","explanation":null},"level":"warning","message":"unneeded late initialization","spans":[{"byte_end":21160,"byte_start":21146,"column_end":35,"column_start":21,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":573,"line_start":573,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":21,"text":"                    let file_name;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: you seem to be trying to use `match` for an equality check. Consider using `if`\n   --> src/fisher.rs:182:50\n    |\n182 |                           Some(low_sample_size) => match low_sample_size {\n    |  __________________________________________________^\n183 | |                             true => low_sample_size_bool = true,\n184 | |                             false => {}\n185 | |                         },\n    | |_________________________^ help: try: `if low_sample_size == true { low_sample_size_bool = true }`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":13191,"byte_start":13037,"column_end":26,"column_start":50,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":185,"line_start":182,"suggested_replacement":"if low_sample_size == true { low_sample_size_bool = true }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":73,"highlight_start":50,"text":"                        Some(low_sample_size) => match low_sample_size {"},{"highlight_end":65,"highlight_start":1,"text":"                            true => low_sample_size_bool = true,"},{"highlight_end":40,"highlight_start":1,"text":"                            false => {}"},{"highlight_end":26,"highlight_start":1,"text":"                        },"}]}]}],"code":{"code":"clippy::single_match","explanation":null},"level":"warning","message":"you seem to be trying to use `match` for an equality check. Consider using `if`","spans":[{"byte_end":13191,"byte_start":13037,"column_end":26,"column_start":50,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":185,"line_start":182,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":50,"text":"                        Some(low_sample_size) => match low_sample_size {"},{"highlight_end":65,"highlight_start":1,"text":"                            true => low_sample_size_bool = true,"},{"highlight_end":40,"highlight_start":1,"text":"                            false => {}"},{"highlight_end":26,"highlight_start":1,"text":"                        },"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/fisher.rs:189:24\n    |\n189 |                     if fdr_bool == false && bon_bool == false && low_sample_size_bool == true {\n    |                        ^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!fdr_bool`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":13291,"byte_start":13274,"column_end":41,"column_start":24,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":189,"line_start":189,"suggested_replacement":"!fdr_bool","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":41,"highlight_start":24,"text":"                    if fdr_bool == false && bon_bool == false && low_sample_size_bool == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":13291,"byte_start":13274,"column_end":41,"column_start":24,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":189,"line_start":189,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":24,"text":"                    if fdr_bool == false && bon_bool == false && low_sample_size_bool == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unneeded late initialization\n   --> src/topGeneByExpressionVariance.rs:599:21\n    |\n599 |                     let file_type: String;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init\nhelp: move the declaration `file_type` here and remove the assignments from the branches\n    |\n599 ~                     \n600 ~                     let file_type: String = if file_name.to_lowercase().ends_with(\".h5\") {\n601 ~                         \"hdf5\".to_string()\n602 |                         // eprintln!(\"Detected HDF5 file format based on .h5 extension\");\n603 |                     } else {\n604 ~                         \"text\".to_string()\n605 |                         // eprintln!(\"Using default text file format (no .h5 extension found)\");\n606 ~                     };\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"move the declaration `file_type` here and remove the assignments from the branches","rendered":null,"spans":[{"byte_end":22436,"byte_start":22424,"column_end":37,"column_start":25,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":601,"line_start":601,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":37,"highlight_start":25,"text":"                        file_type = \"hdf5\".to_string();"}]},{"byte_end":22455,"byte_start":22454,"column_end":56,"column_start":55,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":601,"line_start":601,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":56,"highlight_start":55,"text":"                        file_type = \"hdf5\".to_string();"}]},{"byte_end":22611,"byte_start":22599,"column_end":37,"column_start":25,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":604,"line_start":604,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":37,"highlight_start":25,"text":"                        file_type = \"text\".to_string();"}]},{"byte_end":22630,"byte_start":22629,"column_end":56,"column_start":55,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":604,"line_start":604,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":56,"highlight_start":55,"text":"                        file_type = \"text\".to_string();"}]},{"byte_end":22332,"byte_start":22310,"column_end":43,"column_start":21,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":599,"line_start":599,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":43,"highlight_start":21,"text":"                    let file_type: String;"}]},{"byte_end":22353,"byte_start":22353,"column_end":21,"column_start":21,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":600,"line_start":600,"suggested_replacement":"let file_type: String = ","suggestion_applicability":"Unspecified","text":[{"highlight_end":21,"highlight_start":21,"text":"                    if file_name.to_lowercase().ends_with(\".h5\") {"}]},{"byte_end":22749,"byte_start":22749,"column_end":22,"column_start":22,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":606,"line_start":606,"suggested_replacement":";","suggestion_applicability":"Unspecified","text":[{"highlight_end":22,"highlight_start":22,"text":"                    }"}]}]}],"code":{"code":"clippy::needless_late_init","explanation":null},"level":"warning","message":"unneeded late initialization","spans":[{"byte_end":22332,"byte_start":22310,"column_end":43,"column_start":21,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":599,"line_start":599,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":21,"text":"                    let file_type: String;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/fisher.rs:189:45\n    |\n189 |                     if fdr_bool == false && bon_bool == false && low_sample_size_bool == true {\n    |                                             ^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!bon_bool`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":13312,"byte_start":13295,"column_end":62,"column_start":45,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":189,"line_start":189,"suggested_replacement":"!bon_bool","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":45,"text":"                    if fdr_bool == false && bon_bool == false && low_sample_size_bool == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":13312,"byte_start":13295,"column_end":62,"column_start":45,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":189,"line_start":189,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":45,"text":"                    if fdr_bool == false && bon_bool == false && low_sample_size_bool == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/fisher.rs:189:66\n    |\n189 |                     if fdr_bool == false && bon_bool == false && low_sample_size_bool == true {\n    |                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `low_sample_size_bool`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":13344,"byte_start":13316,"column_end":94,"column_start":66,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":189,"line_start":189,"suggested_replacement":"low_sample_size_bool","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":94,"highlight_start":66,"text":"                    if fdr_bool == false && bon_bool == false && low_sample_size_bool == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":13344,"byte_start":13316,"column_end":94,"column_start":66,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":189,"line_start":189,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":94,"highlight_start":66,"text":"                    if fdr_bool == false && bon_bool == false && low_sample_size_bool == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/fisher.rs:193:24\n    |\n193 |                     if fdr_bool == false && bon_bool == false {\n    |                        ^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!fdr_bool`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":13503,"byte_start":13486,"column_end":41,"column_start":24,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":193,"line_start":193,"suggested_replacement":"!fdr_bool","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":41,"highlight_start":24,"text":"                    if fdr_bool == false && bon_bool == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":13503,"byte_start":13486,"column_end":41,"column_start":24,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":193,"line_start":193,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":24,"text":"                    if fdr_bool == false && bon_bool == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unneeded late initialization\n   --> src/topGeneByExpressionVariance.rs:628:21\n    |\n628 |                     let filter_extreme_values;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init\nhelp: move the declaration `filter_extreme_values` here and remove the assignments from the `match` arms\n    |\n628 ~                     \n629 ~                     let filter_extreme_values = match filter_extreme_values_result.as_bool() {\n630 |                         Some(x) => {\n631 ~                             x\n632 |                             // eprintln!(\"Filter extreme values: {}\", filter_extreme_values);\n633 |                         }\n634 |                         None => {\n635 ~                             true // If filter_extreme_values field is missing, set it to true by default\n636 |                             // eprintln!(\n...\n640 |                         }\n641 ~                     };\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"move the declaration `filter_extreme_values` here and remove the assignments from the `match` arms","rendered":null,"spans":[{"byte_end":24005,"byte_start":23981,"column_end":53,"column_start":29,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":631,"line_start":631,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":53,"highlight_start":29,"text":"                            filter_extreme_values = x;"}]},{"byte_end":24007,"byte_start":24006,"column_end":55,"column_start":54,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":631,"line_start":631,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":55,"highlight_start":54,"text":"                            filter_extreme_values = x;"}]},{"byte_end":24214,"byte_start":24190,"column_end":53,"column_start":29,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":635,"line_start":635,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":53,"highlight_start":29,"text":"                            filter_extreme_values = true; // If filter_extreme_values field is missing, set it to true by default"}]},{"byte_end":24219,"byte_start":24218,"column_end":58,"column_start":57,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":635,"line_start":635,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":58,"highlight_start":57,"text":"                            filter_extreme_values = true; // If filter_extreme_values field is missing, set it to true by default"}]},{"byte_end":23848,"byte_start":23822,"column_end":47,"column_start":21,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":628,"line_start":628,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":47,"highlight_start":21,"text":"                    let filter_extreme_values;"}]},{"byte_end":23869,"byte_start":23869,"column_end":21,"column_start":21,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":629,"line_start":629,"suggested_replacement":"let filter_extreme_values = ","suggestion_applicability":"Unspecified","text":[{"highlight_end":21,"highlight_start":21,"text":"                    match filter_extreme_values_result.as_bool() {"}]},{"byte_end":24565,"byte_start":24565,"column_end":22,"column_start":22,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":641,"line_start":641,"suggested_replacement":";","suggestion_applicability":"Unspecified","text":[{"highlight_end":22,"highlight_start":22,"text":"                    }"}]}]}],"code":{"code":"clippy::needless_late_init","explanation":null},"level":"warning","message":"unneeded late initialization","spans":[{"byte_end":23848,"byte_start":23822,"column_end":47,"column_start":21,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":628,"line_start":628,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":21,"text":"                    let filter_extreme_values;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/fisher.rs:193:45\n    |\n193 |                     if fdr_bool == false && bon_bool == false {\n    |                                             ^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!bon_bool`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":13524,"byte_start":13507,"column_end":62,"column_start":45,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":193,"line_start":193,"suggested_replacement":"!bon_bool","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":45,"text":"                    if fdr_bool == false && bon_bool == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":13524,"byte_start":13507,"column_end":62,"column_start":45,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":193,"line_start":193,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":45,"text":"                    if fdr_bool == false && bon_bool == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/fisher.rs:202:31\n    |\n202 |                     } else if fdr_bool == true && bon_bool == false {\n    |                               ^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `fdr_bool`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":13935,"byte_start":13919,"column_end":47,"column_start":31,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":202,"line_start":202,"suggested_replacement":"fdr_bool","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":31,"text":"                    } else if fdr_bool == true && bon_bool == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":13935,"byte_start":13919,"column_end":47,"column_start":31,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":202,"line_start":202,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":31,"text":"                    } else if fdr_bool == true && bon_bool == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unneeded late initialization\n   --> src/topGeneByExpressionVariance.rs:644:21\n    |\n644 |                     let num_genes;\n    |                     ^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init\nhelp: move the declaration `num_genes` here and remove the assignments from the `match` arms\n    |\n644 ~                     \n645 ~                     let num_genes = match num_genes_result.as_usize() {\n646 |                         Some(x) => {\n647 ~                             x\n648 |                             // eprintln!(\"Number of genes requested: {}\", num_genes);\n...\n660 |                         }\n661 ~                     };\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"move the declaration `num_genes` here and remove the assignments from the `match` arms","rendered":null,"spans":[{"byte_end":24805,"byte_start":24793,"column_end":41,"column_start":29,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":647,"line_start":647,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":41,"highlight_start":29,"text":"                            num_genes = x;"}]},{"byte_end":24807,"byte_start":24806,"column_end":43,"column_start":42,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":647,"line_start":647,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":43,"highlight_start":42,"text":"                            num_genes = x;"}]},{"byte_end":24671,"byte_start":24657,"column_end":35,"column_start":21,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":644,"line_start":644,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":35,"highlight_start":21,"text":"                    let num_genes;"}]},{"byte_end":24692,"byte_start":24692,"column_end":21,"column_start":21,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":645,"line_start":645,"suggested_replacement":"let num_genes = ","suggestion_applicability":"Unspecified","text":[{"highlight_end":21,"highlight_start":21,"text":"                    match num_genes_result.as_usize() {"}]},{"byte_end":25465,"byte_start":25465,"column_end":22,"column_start":22,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":661,"line_start":661,"suggested_replacement":";","suggestion_applicability":"Unspecified","text":[{"highlight_end":22,"highlight_start":22,"text":"                    }"}]}]}],"code":{"code":"clippy::needless_late_init","explanation":null},"level":"warning","message":"unneeded late initialization","spans":[{"byte_end":24671,"byte_start":24657,"column_end":35,"column_start":21,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":644,"line_start":644,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":21,"text":"                    let num_genes;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/fisher.rs:202:51\n    |\n202 |                     } else if fdr_bool == true && bon_bool == false {\n    |                                                   ^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!bon_bool`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":13956,"byte_start":13939,"column_end":68,"column_start":51,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":202,"line_start":202,"suggested_replacement":"!bon_bool","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":68,"highlight_start":51,"text":"                    } else if fdr_bool == true && bon_bool == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":13956,"byte_start":13939,"column_end":68,"column_start":51,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":202,"line_start":202,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":51,"text":"                    } else if fdr_bool == true && bon_bool == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/fisher.rs:210:31\n    |\n210 |                     } else if fdr_bool == false && bon_bool == true {\n    |                               ^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!fdr_bool`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":14296,"byte_start":14279,"column_end":48,"column_start":31,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":210,"line_start":210,"suggested_replacement":"!fdr_bool","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":48,"highlight_start":31,"text":"                    } else if fdr_bool == false && bon_bool == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":14296,"byte_start":14279,"column_end":48,"column_start":31,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":210,"line_start":210,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":31,"text":"                    } else if fdr_bool == false && bon_bool == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"readHDF5","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/readHDF5.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: you seem to use `.enumerate()` and immediately discard the index\n    --> src/readHDF5.rs:1029:41\n     |\n1029 |                     for (_i, sample) in samples.iter().enumerate() {\n     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_enumerate_index\n     = note: `#[warn(clippy::unused_enumerate_index)]` on by default\nhelp: remove the `.enumerate()` call\n     |\n1029 -                     for (_i, sample) in samples.iter().enumerate() {\n1029 +                     for sample in samples.iter() {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_enumerate_index","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::unused_enumerate_index)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove the `.enumerate()` call","rendered":null,"spans":[{"byte_end":40541,"byte_start":40529,"column_end":37,"column_start":25,"expansion":null,"file_name":"src/readHDF5.rs","is_primary":true,"label":null,"line_end":1029,"line_start":1029,"suggested_replacement":"sample","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":37,"highlight_start":25,"text":"                    for (_i, sample) in samples.iter().enumerate() {"}]},{"byte_end":40571,"byte_start":40545,"column_end":67,"column_start":41,"expansion":null,"file_name":"src/readHDF5.rs","is_primary":true,"label":null,"line_end":1029,"line_start":1029,"suggested_replacement":"samples.iter()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":67,"highlight_start":41,"text":"                    for (_i, sample) in samples.iter().enumerate() {"}]}]}],"code":{"code":"clippy::unused_enumerate_index","explanation":null},"level":"warning","message":"you seem to use `.enumerate()` and immediately discard the index","spans":[{"byte_end":40571,"byte_start":40545,"column_end":67,"column_start":41,"expansion":null,"file_name":"src/readHDF5.rs","is_primary":true,"label":null,"line_end":1029,"line_start":1029,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":67,"highlight_start":41,"text":"                    for (_i, sample) in samples.iter().enumerate() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/fisher.rs:210:52\n    |\n210 |                     } else if fdr_bool == false && bon_bool == true {\n    |                                                    ^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `bon_bool`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":14316,"byte_start":14300,"column_end":68,"column_start":52,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":210,"line_start":210,"suggested_replacement":"bon_bool","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":68,"highlight_start":52,"text":"                    } else if fdr_bool == false && bon_bool == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":14316,"byte_start":14300,"column_end":68,"column_start":52,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":210,"line_start":210,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":52,"text":"                    } else if fdr_bool == false && bon_bool == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/fisher.rs:218:31\n    |\n218 |                     } else if fdr_bool == true && bon_bool == true {\n    |                               ^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `fdr_bool`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":14655,"byte_start":14639,"column_end":47,"column_start":31,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":218,"line_start":218,"suggested_replacement":"fdr_bool","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":31,"text":"                    } else if fdr_bool == true && bon_bool == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":14655,"byte_start":14639,"column_end":47,"column_start":31,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":218,"line_start":218,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":31,"text":"                    } else if fdr_bool == true && bon_bool == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/fisher.rs:218:51\n    |\n218 |                     } else if fdr_bool == true && bon_bool == true {\n    |                                                   ^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `bon_bool`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":14675,"byte_start":14659,"column_end":67,"column_start":51,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":218,"line_start":218,"suggested_replacement":"bon_bool","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":67,"highlight_start":51,"text":"                    } else if fdr_bool == true && bon_bool == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":14675,"byte_start":14659,"column_end":67,"column_start":51,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":218,"line_start":218,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":67,"highlight_start":51,"text":"                    } else if fdr_bool == true && bon_bool == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/topGeneByExpressionVariance.rs:799:46\n    |\n799 | ...                   output_string += &\",\".to_string();\n    |                                        ^^^^^^^^^^^^^^^^ help: use: `\",\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n    = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::unnecessary_to_owned)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":32244,"byte_start":32228,"column_end":62,"column_start":46,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":799,"line_start":799,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":46,"text":"                            output_string += &\",\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":32244,"byte_start":32228,"column_end":62,"column_start":46,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":799,"line_start":799,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":46,"text":"                            output_string += &\",\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/topGeneByExpressionVariance.rs:802:38\n    |\n802 |                     output_string += &\"]\".to_string();\n    |                                      ^^^^^^^^^^^^^^^^ help: use: `\"]\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":32347,"byte_start":32331,"column_end":54,"column_start":38,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":802,"line_start":802,"suggested_replacement":"\"]\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":38,"text":"                    output_string += &\"]\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":32347,"byte_start":32331,"column_end":54,"column_start":38,"expansion":null,"file_name":"src/topGeneByExpressionVariance.rs","is_primary":true,"label":null,"line_end":802,"line_start":802,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":38,"text":"                    output_string += &\"]\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/fisher.rs:264:20\n    |\n264 |                 && low_sample_size == true\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `low_sample_size`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":16573,"byte_start":16550,"column_end":43,"column_start":20,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":264,"line_start":264,"suggested_replacement":"low_sample_size","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":20,"text":"                && low_sample_size == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":16573,"byte_start":16550,"column_end":43,"column_start":20,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":264,"line_start":264,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":20,"text":"                && low_sample_size == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` statement can be collapsed\n    --> src/realign.rs:1670:17\n     |\n1670 | /                 if (i as usize) < r_seq_ref_vec.len() {\n1671 | |                     if r_seq_ref_vec[i as usize] != '-' {\n1672 | |                         is_complete_insertion = false;\n1673 | |                         break;\n1674 | |                     }\n1675 | |                 }\n     | |_________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n     = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n     |\n1670 ~                 if (i as usize) < r_seq_ref_vec.len() && r_seq_ref_vec[i as usize] != '-' {\n1671 +                     is_complete_insertion = false;\n1672 +                     break;\n1673 +                 }\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::collapsible_if)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"collapse nested if block","rendered":null,"spans":[{"byte_end":89814,"byte_start":89591,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1675,"line_start":1670,"suggested_replacement":"if (i as usize) < r_seq_ref_vec.len() && r_seq_ref_vec[i as usize] != '-' {\n                    is_complete_insertion = false;\n                    break;\n                }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":56,"highlight_start":17,"text":"                if (i as usize) < r_seq_ref_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_ref_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}],"code":{"code":"clippy::collapsible_if","explanation":null},"level":"warning","message":"this `if` statement can be collapsed","spans":[{"byte_end":89814,"byte_start":89591,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1675,"line_start":1670,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":17,"text":"                if (i as usize) < r_seq_ref_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_ref_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` statement can be collapsed\n    --> src/realign.rs:1687:17\n     |\n1687 | /                 if (i as usize) < r_seq_alt_vec.len() {\n1688 | |                     if r_seq_alt_vec[i as usize] != '-' {\n1689 | |                         is_complete_insertion = false;\n1690 | |                         break;\n1691 | |                     }\n1692 | |                 }\n     | |_________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n     |\n1687 ~                 if (i as usize) < r_seq_alt_vec.len() && r_seq_alt_vec[i as usize] != '-' {\n1688 +                     is_complete_insertion = false;\n1689 +                     break;\n1690 +                 }\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"collapse nested if block","rendered":null,"spans":[{"byte_end":90684,"byte_start":90461,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1692,"line_start":1687,"suggested_replacement":"if (i as usize) < r_seq_alt_vec.len() && r_seq_alt_vec[i as usize] != '-' {\n                    is_complete_insertion = false;\n                    break;\n                }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":56,"highlight_start":17,"text":"                if (i as usize) < r_seq_alt_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_alt_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}],"code":{"code":"clippy::collapsible_if","explanation":null},"level":"warning","message":"this `if` statement can be collapsed","spans":[{"byte_end":90684,"byte_start":90461,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1692,"line_start":1687,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":17,"text":"                if (i as usize) < r_seq_alt_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_alt_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` statement can be collapsed\n    --> src/realign.rs:1768:17\n     |\n1768 | /                 if (i as usize) < r_seq_ref_vec.len() {\n1769 | |                     if r_seq_ref_vec[i as usize] != '-' {\n1770 | |                         is_complete_insertion = false;\n1771 | |                         break;\n1772 | |                     }\n1773 | |                 }\n     | |_________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n     |\n1768 ~                 if (i as usize) < r_seq_ref_vec.len() && r_seq_ref_vec[i as usize] != '-' {\n1769 +                     is_complete_insertion = false;\n1770 +                     break;\n1771 +                 }\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"collapse nested if block","rendered":null,"spans":[{"byte_end":94568,"byte_start":94345,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1773,"line_start":1768,"suggested_replacement":"if (i as usize) < r_seq_ref_vec.len() && r_seq_ref_vec[i as usize] != '-' {\n                    is_complete_insertion = false;\n                    break;\n                }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":56,"highlight_start":17,"text":"                if (i as usize) < r_seq_ref_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_ref_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}],"code":{"code":"clippy::collapsible_if","explanation":null},"level":"warning","message":"this `if` statement can be collapsed","spans":[{"byte_end":94568,"byte_start":94345,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1773,"line_start":1768,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":17,"text":"                if (i as usize) < r_seq_ref_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_ref_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` statement can be collapsed\n    --> src/realign.rs:1785:17\n     |\n1785 | /                 if (i as usize) < r_seq_alt_vec.len() {\n1786 | |                     if r_seq_alt_vec[i as usize] != '-' {\n1787 | |                         is_complete_insertion = false;\n1788 | |                         break;\n1789 | |                     }\n1790 | |                 }\n     | |_________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n     |\n1785 ~                 if (i as usize) < r_seq_alt_vec.len() && r_seq_alt_vec[i as usize] != '-' {\n1786 +                     is_complete_insertion = false;\n1787 +                     break;\n1788 +                 }\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"collapse nested if block","rendered":null,"spans":[{"byte_end":95438,"byte_start":95215,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1790,"line_start":1785,"suggested_replacement":"if (i as usize) < r_seq_alt_vec.len() && r_seq_alt_vec[i as usize] != '-' {\n                    is_complete_insertion = false;\n                    break;\n                }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":56,"highlight_start":17,"text":"                if (i as usize) < r_seq_alt_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_alt_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}],"code":{"code":"clippy::collapsible_if","explanation":null},"level":"warning","message":"this `if` statement can be collapsed","spans":[{"byte_end":95438,"byte_start":95215,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1790,"line_start":1785,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":17,"text":"                if (i as usize) < r_seq_alt_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_alt_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/fisher.rs:328:46\n    |\n328 | ...                   output_string += &\",\".to_string();\n    |                                        ^^^^^^^^^^^^^^^^ help: use: `\",\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n    = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::unnecessary_to_owned)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":19316,"byte_start":19300,"column_end":62,"column_start":46,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":328,"line_start":328,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":46,"text":"                            output_string += &\",\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":19316,"byte_start":19300,"column_end":62,"column_start":46,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":328,"line_start":328,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":46,"text":"                            output_string += &\",\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/fisher.rs:331:38\n    |\n331 |                     output_string += &\"]\".to_string();\n    |                                      ^^^^^^^^^^^^^^^^ help: use: `\"]\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":19419,"byte_start":19403,"column_end":54,"column_start":38,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":331,"line_start":331,"suggested_replacement":"\"]\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":38,"text":"                    output_string += &\"]\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":19419,"byte_start":19403,"column_end":54,"column_start":38,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":331,"line_start":331,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":38,"text":"                    output_string += &\"]\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n  --> src/cluster.rs:98:30\n   |\n98 | fn euclidean_distance(item1: &Vec<f64>, item2: &Vec<f64>) -> f64 {\n   |                              ^^^^^^^^^ help: change this to: `&[f64]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::ptr_arg)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":4789,"byte_start":4780,"column_end":39,"column_start":30,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":98,"line_start":98,"suggested_replacement":"&[f64]","suggestion_applicability":"Unspecified","text":[{"highlight_end":39,"highlight_start":30,"text":"fn euclidean_distance(item1: &Vec<f64>, item2: &Vec<f64>) -> f64 {"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":4789,"byte_start":4780,"column_end":39,"column_start":30,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":98,"line_start":98,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":30,"text":"fn euclidean_distance(item1: &Vec<f64>, item2: &Vec<f64>) -> f64 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n  --> src/cluster.rs:98:48\n   |\n98 | fn euclidean_distance(item1: &Vec<f64>, item2: &Vec<f64>) -> f64 {\n   |                                                ^^^^^^^^^ help: change this to: `&[f64]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":4807,"byte_start":4798,"column_end":57,"column_start":48,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":98,"line_start":98,"suggested_replacement":"&[f64]","suggestion_applicability":"Unspecified","text":[{"highlight_end":57,"highlight_start":48,"text":"fn euclidean_distance(item1: &Vec<f64>, item2: &Vec<f64>) -> f64 {"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":4807,"byte_start":4798,"column_end":57,"column_start":48,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":98,"line_start":98,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":57,"highlight_start":48,"text":"fn euclidean_distance(item1: &Vec<f64>, item2: &Vec<f64>) -> f64 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `else { if .. }` block can be collapsed\n    --> src/indel.rs:1625:12\n     |\n1625 |       } else {\n     |  ____________^\n1626 | |         if ref_nucleotides.len() > alt_nucleotides.len() {\n1627 | |             // In case of deletion\n1628 | |             for j in 0..ref_nucleotides.len() {\n...    |\n1637 | |     }\n     | |_____^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n     = note: `#[warn(clippy::collapsible_else_if)]` on by default\nhelp: collapse nested if block\n     |\n1625 ~     } else if ref_nucleotides.len() > alt_nucleotides.len() {\n1626 +         // In case of deletion\n1627 +         for j in 0..ref_nucleotides.len() {\n1628 +             actual_indel += &ref_nucleotides[j].to_string();\n1629 +         }\n1630 +     } else {\n1631 +         // In case of insertion\n1632 +         for j in 0..alt_nucleotides.len() {\n1633 +             actual_indel += &alt_nucleotides[j].to_string();\n1634 +         }\n1635 +     }\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::collapsible_else_if)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"collapse nested if block","rendered":null,"spans":[{"byte_end":106750,"byte_start":106332,"column_end":6,"column_start":12,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1637,"line_start":1625,"suggested_replacement":"if ref_nucleotides.len() > alt_nucleotides.len() {\n        // In case of deletion\n        for j in 0..ref_nucleotides.len() {\n            actual_indel += &ref_nucleotides[j].to_string();\n        }\n    } else {\n        // In case of insertion\n        for j in 0..alt_nucleotides.len() {\n            actual_indel += &alt_nucleotides[j].to_string();\n        }\n    }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":13,"highlight_start":12,"text":"    } else {"},{"highlight_end":59,"highlight_start":1,"text":"        if ref_nucleotides.len() > alt_nucleotides.len() {"},{"highlight_end":35,"highlight_start":1,"text":"            // In case of deletion"},{"highlight_end":48,"highlight_start":1,"text":"            for j in 0..ref_nucleotides.len() {"},{"highlight_end":65,"highlight_start":1,"text":"                actual_indel += &ref_nucleotides[j].to_string();"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":17,"highlight_start":1,"text":"        } else {"},{"highlight_end":36,"highlight_start":1,"text":"            // In case of insertion"},{"highlight_end":48,"highlight_start":1,"text":"            for j in 0..alt_nucleotides.len() {"},{"highlight_end":65,"highlight_start":1,"text":"                actual_indel += &alt_nucleotides[j].to_string();"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":10,"highlight_start":1,"text":"        }"},{"highlight_end":6,"highlight_start":1,"text":"    }"}]}]}],"code":{"code":"clippy::collapsible_else_if","explanation":null},"level":"warning","message":"this `else { if .. }` block can be collapsed","spans":[{"byte_end":106750,"byte_start":106332,"column_end":6,"column_start":12,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1637,"line_start":1625,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":13,"highlight_start":12,"text":"    } else {"},{"highlight_end":59,"highlight_start":1,"text":"        if ref_nucleotides.len() > alt_nucleotides.len() {"},{"highlight_end":35,"highlight_start":1,"text":"            // In case of deletion"},{"highlight_end":48,"highlight_start":1,"text":"            for j in 0..ref_nucleotides.len() {"},{"highlight_end":65,"highlight_start":1,"text":"                actual_indel += &ref_nucleotides[j].to_string();"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":17,"highlight_start":1,"text":"        } else {"},{"highlight_end":36,"highlight_start":1,"text":"            // In case of insertion"},{"highlight_end":48,"highlight_start":1,"text":"            for j in 0..alt_nucleotides.len() {"},{"highlight_end":65,"highlight_start":1,"text":"                actual_indel += &alt_nucleotides[j].to_string();"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":10,"highlight_start":1,"text":"        }"},{"highlight_end":6,"highlight_start":1,"text":"    }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n   --> src/fisher.rs:359:9\n    |\n359 | /         match p_values_list[i].p_value {\n360 | |             Some(p_val) => {\n361 | |                 //println!(\"p_val:{}\", p_val);\n362 | |                 let mut adjusted_p_val: f64 = p_val * (num_of_tests / rank); // adjusted p-value = original_p_value * (N/rank)\n...   |\n379 | |             None => {}\n380 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\nhelp: try\n    |\n359 ~         if let Some(p_val) = p_values_list[i].p_value {\n360 +             //println!(\"p_val:{}\", p_val);\n361 +             let mut adjusted_p_val: f64 = p_val * (num_of_tests / rank); // adjusted p-value = original_p_value * (N/rank)\n362 +             if adjusted_p_val > 1.0 {\n363 +                 // p_value should NEVER be greater than 1\n364 +                 adjusted_p_val = 1.0;\n365 +             }\n366 +             //println!(\"Original p_value:{}\", p_values_list[i].p_value);\n367 +             //println!(\"Raw adjusted p_value:{}\", adjusted_p_value);\n368 +             if i != p_values_list.len() - 1 {\n369 +                 if adjusted_p_val > old_p_value {\n370 +                     adjusted_p_val = old_p_value;\n371 +                 }\n372 +             }\n373 +             old_p_value = adjusted_p_val;\n374 +             //println!(\"adjusted_p_value:{}\", adjusted_p_val);\n375 +             adjusted_p_value = Some(adjusted_p_val);\n376 +             rank -= 1.0;\n377 +         }\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":21333,"byte_start":20340,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":380,"line_start":359,"suggested_replacement":"if let Some(p_val) = p_values_list[i].p_value {\n            //println!(\"p_val:{}\", p_val);\n            let mut adjusted_p_val: f64 = p_val * (num_of_tests / rank); // adjusted p-value = original_p_value * (N/rank)\n            if adjusted_p_val > 1.0 {\n                // p_value should NEVER be greater than 1\n                adjusted_p_val = 1.0;\n            }\n            //println!(\"Original p_value:{}\", p_values_list[i].p_value);\n            //println!(\"Raw adjusted p_value:{}\", adjusted_p_value);\n            if i != p_values_list.len() - 1 {\n                if adjusted_p_val > old_p_value {\n                    adjusted_p_val = old_p_value;\n                }\n            }\n            old_p_value = adjusted_p_val;\n            //println!(\"adjusted_p_value:{}\", adjusted_p_val);\n            adjusted_p_value = Some(adjusted_p_val);\n            rank -= 1.0;\n        }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":41,"highlight_start":9,"text":"        match p_values_list[i].p_value {"},{"highlight_end":29,"highlight_start":1,"text":"            Some(p_val) => {"},{"highlight_end":47,"highlight_start":1,"text":"                //println!(\"p_val:{}\", p_val);"},{"highlight_end":127,"highlight_start":1,"text":"                let mut adjusted_p_val: f64 = p_val * (num_of_tests / rank); // adjusted p-value = original_p_value * (N/rank)"},{"highlight_end":42,"highlight_start":1,"text":"                if adjusted_p_val > 1.0 {"},{"highlight_end":62,"highlight_start":1,"text":"                    // p_value should NEVER be greater than 1"},{"highlight_end":42,"highlight_start":1,"text":"                    adjusted_p_val = 1.0;"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":77,"highlight_start":1,"text":"                //println!(\"Original p_value:{}\", p_values_list[i].p_value);"},{"highlight_end":73,"highlight_start":1,"text":"                //println!(\"Raw adjusted p_value:{}\", adjusted_p_value);"},{"highlight_end":50,"highlight_start":1,"text":"                if i != p_values_list.len() - 1 {"},{"highlight_end":54,"highlight_start":1,"text":"                    if adjusted_p_val > old_p_value {"},{"highlight_end":54,"highlight_start":1,"text":"                        adjusted_p_val = old_p_value;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":46,"highlight_start":1,"text":"                old_p_value = adjusted_p_val;"},{"highlight_end":67,"highlight_start":1,"text":"                //println!(\"adjusted_p_value:{}\", adjusted_p_val);"},{"highlight_end":57,"highlight_start":1,"text":"                adjusted_p_value = Some(adjusted_p_val);"},{"highlight_end":29,"highlight_start":1,"text":"                rank -= 1.0;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":23,"highlight_start":1,"text":"            None => {}"},{"highlight_end":10,"highlight_start":1,"text":"        }"}]}]}],"code":{"code":"clippy::single_match","explanation":null},"level":"warning","message":"you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`","spans":[{"byte_end":21333,"byte_start":20340,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":380,"line_start":359,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":9,"text":"        match p_values_list[i].p_value {"},{"highlight_end":29,"highlight_start":1,"text":"            Some(p_val) => {"},{"highlight_end":47,"highlight_start":1,"text":"                //println!(\"p_val:{}\", p_val);"},{"highlight_end":127,"highlight_start":1,"text":"                let mut adjusted_p_val: f64 = p_val * (num_of_tests / rank); // adjusted p-value = original_p_value * (N/rank)"},{"highlight_end":42,"highlight_start":1,"text":"                if adjusted_p_val > 1.0 {"},{"highlight_end":62,"highlight_start":1,"text":"                    // p_value should NEVER be greater than 1"},{"highlight_end":42,"highlight_start":1,"text":"                    adjusted_p_val = 1.0;"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":77,"highlight_start":1,"text":"                //println!(\"Original p_value:{}\", p_values_list[i].p_value);"},{"highlight_end":73,"highlight_start":1,"text":"                //println!(\"Raw adjusted p_value:{}\", adjusted_p_value);"},{"highlight_end":50,"highlight_start":1,"text":"                if i != p_values_list.len() - 1 {"},{"highlight_end":54,"highlight_start":1,"text":"                    if adjusted_p_val > old_p_value {"},{"highlight_end":54,"highlight_start":1,"text":"                        adjusted_p_val = old_p_value;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":46,"highlight_start":1,"text":"                old_p_value = adjusted_p_val;"},{"highlight_end":67,"highlight_start":1,"text":"                //println!(\"adjusted_p_value:{}\", adjusted_p_val);"},{"highlight_end":57,"highlight_start":1,"text":"                adjusted_p_value = Some(adjusted_p_val);"},{"highlight_end":29,"highlight_start":1,"text":"                rank -= 1.0;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":23,"highlight_start":1,"text":"            None => {}"},{"highlight_end":10,"highlight_start":1,"text":"        }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/fisher.rs:405:30\n    |\n405 |             output_string += &\",\".to_string();\n    |                              ^^^^^^^^^^^^^^^^ help: use: `\",\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":22277,"byte_start":22261,"column_end":46,"column_start":30,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":405,"line_start":405,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":46,"highlight_start":30,"text":"            output_string += &\",\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":22277,"byte_start":22261,"column_end":46,"column_start":30,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":405,"line_start":405,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":30,"text":"            output_string += &\",\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/fisher.rs:408:22\n    |\n408 |     output_string += &\"]\".to_string();\n    |                      ^^^^^^^^^^^^^^^^ help: use: `\"]\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":22332,"byte_start":22316,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":408,"line_start":408,"suggested_replacement":"\"]\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":38,"highlight_start":22,"text":"    output_string += &\"]\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":22332,"byte_start":22316,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":408,"line_start":408,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":22,"text":"    output_string += &\"]\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is only used to index `p_values_list`\n   --> src/fisher.rs:416:14\n    |\n416 |     for i in 0..p_values_list.len() {\n    |              ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n416 -     for i in 0..p_values_list.len() {\n416 +     for <item> in &p_values_list {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":22631,"byte_start":22630,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":416,"line_start":416,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":10,"highlight_start":9,"text":"    for i in 0..p_values_list.len() {"}]},{"byte_end":22657,"byte_start":22635,"column_end":36,"column_start":14,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":416,"line_start":416,"suggested_replacement":"&p_values_list","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":36,"highlight_start":14,"text":"    for i in 0..p_values_list.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is only used to index `p_values_list`","spans":[{"byte_end":22657,"byte_start":22635,"column_end":36,"column_start":14,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":416,"line_start":416,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":14,"text":"    for i in 0..p_values_list.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n   --> src/fisher.rs:418:9\n    |\n418 | / ...   match p_values_list[i].p_value {\n419 | | ...       Some(p_val) => {\n420 | | ...           //println!(\"p_val:{}\", p_val);\n421 | | ...           let mut adjusted_p_val: f64 = p_val * num_of_tests; // In bonferroni correction, multiplying p_value by number of tests (excluding...\n...   |\n428 | | ...       None => {}\n429 | | ...   }\n    | |_______^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\nhelp: try\n    |\n418 ~         if let Some(p_val) = p_values_list[i].p_value {\n419 +             //println!(\"p_val:{}\", p_val);\n420 +             let mut adjusted_p_val: f64 = p_val * num_of_tests; // In bonferroni correction, multiplying p_value by number of tests (excluding those with low sample sizes)\n421 +             if adjusted_p_val > 1.0 {\n422 +                 // p_value should NEVER be greater than 1\n423 +                 adjusted_p_val = 1.0;\n424 +             }\n425 +             adjusted_p_value = Some(adjusted_p_val);\n426 +         }\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":23274,"byte_start":22722,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":429,"line_start":418,"suggested_replacement":"if let Some(p_val) = p_values_list[i].p_value {\n            //println!(\"p_val:{}\", p_val);\n            let mut adjusted_p_val: f64 = p_val * num_of_tests; // In bonferroni correction, multiplying p_value by number of tests (excluding those with low sample sizes)\n            if adjusted_p_val > 1.0 {\n                // p_value should NEVER be greater than 1\n                adjusted_p_val = 1.0;\n            }\n            adjusted_p_value = Some(adjusted_p_val);\n        }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":41,"highlight_start":9,"text":"        match p_values_list[i].p_value {"},{"highlight_end":29,"highlight_start":1,"text":"            Some(p_val) => {"},{"highlight_end":47,"highlight_start":1,"text":"                //println!(\"p_val:{}\", p_val);"},{"highlight_end":176,"highlight_start":1,"text":"                let mut adjusted_p_val: f64 = p_val * num_of_tests; // In bonferroni correction, multiplying p_value by number of tests (excluding those with low sample sizes)"},{"highlight_end":42,"highlight_start":1,"text":"                if adjusted_p_val > 1.0 {"},{"highlight_end":62,"highlight_start":1,"text":"                    // p_value should NEVER be greater than 1"},{"highlight_end":42,"highlight_start":1,"text":"                    adjusted_p_val = 1.0;"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":57,"highlight_start":1,"text":"                adjusted_p_value = Some(adjusted_p_val);"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":23,"highlight_start":1,"text":"            None => {}"},{"highlight_end":10,"highlight_start":1,"text":"        }"}]}]}],"code":{"code":"clippy::single_match","explanation":null},"level":"warning","message":"you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`","spans":[{"byte_end":23274,"byte_start":22722,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":429,"line_start":418,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":9,"text":"        match p_values_list[i].p_value {"},{"highlight_end":29,"highlight_start":1,"text":"            Some(p_val) => {"},{"highlight_end":47,"highlight_start":1,"text":"                //println!(\"p_val:{}\", p_val);"},{"highlight_end":176,"highlight_start":1,"text":"                let mut adjusted_p_val: f64 = p_val * num_of_tests; // In bonferroni correction, multiplying p_value by number of tests (excluding those with low sample sizes)"},{"highlight_end":42,"highlight_start":1,"text":"                if adjusted_p_val > 1.0 {"},{"highlight_end":62,"highlight_start":1,"text":"                    // p_value should NEVER be greater than 1"},{"highlight_end":42,"highlight_start":1,"text":"                    adjusted_p_val = 1.0;"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":57,"highlight_start":1,"text":"                adjusted_p_value = Some(adjusted_p_val);"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":23,"highlight_start":1,"text":"            None => {}"},{"highlight_end":10,"highlight_start":1,"text":"        }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unneeded `return` statement\n   --> src/cluster.rs:159:5\n    |\n159 |     return num * num;\n    |     ^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n159 -     return num * num;\n159 +     num * num\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_return)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove `return`","rendered":null,"spans":[{"byte_end":6933,"byte_start":6917,"column_end":21,"column_start":5,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":159,"line_start":159,"suggested_replacement":"num * num","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":21,"highlight_start":5,"text":"    return num * num;"}]},{"byte_end":6934,"byte_start":6933,"column_end":22,"column_start":21,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":159,"line_start":159,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":22,"highlight_start":21,"text":"    return num * num;"}]}]}],"code":{"code":"clippy::needless_return","explanation":null},"level":"warning","message":"unneeded `return` statement","spans":[{"byte_end":6933,"byte_start":6917,"column_end":21,"column_start":5,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":159,"line_start":159,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":5,"text":"    return num * num;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/cluster.rs:221:8\n    |\n221 |     if coordinates.len() > 0 {\n    |        ^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!coordinates.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::len_zero)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":9328,"byte_start":9307,"column_end":29,"column_start":8,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":221,"line_start":221,"suggested_replacement":"!coordinates.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":29,"highlight_start":8,"text":"    if coordinates.len() > 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":9328,"byte_start":9307,"column_end":29,"column_start":8,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":221,"line_start":221,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":8,"text":"    if coordinates.len() > 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: taken reference of right operand\n   --> src/cluster.rs:239:12\n    |\n239 |         if cluster_method == &\"Single\" {\n    |            ^^^^^^^^^^^^^^^^^^---------\n    |                              |\n    |                              help: use the right value directly: `\"Single\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\n    = note: `#[warn(clippy::op_ref)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::op_ref)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the right value directly","rendered":null,"spans":[{"byte_end":10002,"byte_start":9993,"column_end":39,"column_start":30,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":239,"line_start":239,"suggested_replacement":"\"Single\"","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":39,"highlight_start":30,"text":"        if cluster_method == &\"Single\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"taken reference of right operand","spans":[{"byte_end":10002,"byte_start":9975,"column_end":39,"column_start":12,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":239,"line_start":239,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":12,"text":"        if cluster_method == &\"Single\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/fisher.rs:449:30\n    |\n449 |             output_string += &\",\".to_string();\n    |                              ^^^^^^^^^^^^^^^^ help: use: `\",\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":24008,"byte_start":23992,"column_end":46,"column_start":30,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":449,"line_start":449,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":46,"highlight_start":30,"text":"            output_string += &\",\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":24008,"byte_start":23992,"column_end":46,"column_start":30,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":449,"line_start":449,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":30,"text":"            output_string += &\",\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/fisher.rs:452:22\n    |\n452 |     output_string += &\"]\".to_string();\n    |                      ^^^^^^^^^^^^^^^^ help: use: `\"]\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":24063,"byte_start":24047,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":452,"line_start":452,"suggested_replacement":"\"]\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":38,"highlight_start":22,"text":"    output_string += &\"]\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":24063,"byte_start":24047,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/fisher.rs","is_primary":true,"label":null,"line_end":452,"line_start":452,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":22,"text":"    output_string += &\"]\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: taken reference of right operand\n   --> src/cluster.rs:241:19\n    |\n241 |         } else if cluster_method == &\"Complete\" {\n    |                   ^^^^^^^^^^^^^^^^^^-----------\n    |                                     |\n    |                                     help: use the right value directly: `\"Complete\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the right value directly","rendered":null,"spans":[{"byte_end":10133,"byte_start":10122,"column_end":48,"column_start":37,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":241,"line_start":241,"suggested_replacement":"\"Complete\"","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":48,"highlight_start":37,"text":"        } else if cluster_method == &\"Complete\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"taken reference of right operand","spans":[{"byte_end":10133,"byte_start":10104,"column_end":48,"column_start":19,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":241,"line_start":241,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":19,"text":"        } else if cluster_method == &\"Complete\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: taken reference of right operand\n   --> src/cluster.rs:243:19\n    |\n243 |         } else if cluster_method == &\"Average\" {\n    |                   ^^^^^^^^^^^^^^^^^^----------\n    |                                     |\n    |                                     help: use the right value directly: `\"Average\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the right value directly","rendered":null,"spans":[{"byte_end":10265,"byte_start":10255,"column_end":47,"column_start":37,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":243,"line_start":243,"suggested_replacement":"\"Average\"","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":47,"highlight_start":37,"text":"        } else if cluster_method == &\"Average\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"taken reference of right operand","spans":[{"byte_end":10265,"byte_start":10237,"column_end":47,"column_start":19,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":243,"line_start":243,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":19,"text":"        } else if cluster_method == &\"Average\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: taken reference of right operand\n   --> src/cluster.rs:245:19\n    |\n245 |         } else if cluster_method == &\"Weighted\" {\n    |                   ^^^^^^^^^^^^^^^^^^-----------\n    |                                     |\n    |                                     help: use the right value directly: `\"Weighted\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the right value directly","rendered":null,"spans":[{"byte_end":10397,"byte_start":10386,"column_end":48,"column_start":37,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":245,"line_start":245,"suggested_replacement":"\"Weighted\"","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":48,"highlight_start":37,"text":"        } else if cluster_method == &\"Weighted\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"taken reference of right operand","spans":[{"byte_end":10397,"byte_start":10368,"column_end":48,"column_start":19,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":245,"line_start":245,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":19,"text":"        } else if cluster_method == &\"Weighted\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: taken reference of right operand\n   --> src/cluster.rs:247:19\n    |\n247 |         } else if cluster_method == &\"Ward\" {\n    |                   ^^^^^^^^^^^^^^^^^^-------\n    |                                     |\n    |                                     help: use the right value directly: `\"Ward\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the right value directly","rendered":null,"spans":[{"byte_end":10526,"byte_start":10519,"column_end":44,"column_start":37,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":247,"line_start":247,"suggested_replacement":"\"Ward\"","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":44,"highlight_start":37,"text":"        } else if cluster_method == &\"Ward\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"taken reference of right operand","spans":[{"byte_end":10526,"byte_start":10501,"column_end":44,"column_start":19,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":247,"line_start":247,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":19,"text":"        } else if cluster_method == &\"Ward\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: taken reference of right operand\n   --> src/cluster.rs:249:19\n    |\n249 |         } else if cluster_method == &\"Centroid\" {\n    |                   ^^^^^^^^^^^^^^^^^^-----------\n    |                                     |\n    |                                     help: use the right value directly: `\"Centroid\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the right value directly","rendered":null,"spans":[{"byte_end":10655,"byte_start":10644,"column_end":48,"column_start":37,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":249,"line_start":249,"suggested_replacement":"\"Centroid\"","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":48,"highlight_start":37,"text":"        } else if cluster_method == &\"Centroid\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"taken reference of right operand","spans":[{"byte_end":10655,"byte_start":10626,"column_end":48,"column_start":19,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":249,"line_start":249,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":19,"text":"        } else if cluster_method == &\"Centroid\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: taken reference of right operand\n   --> src/cluster.rs:251:19\n    |\n251 |         } else if cluster_method == &\"Median\" {\n    |                   ^^^^^^^^^^^^^^^^^^---------\n    |                                     |\n    |                                     help: use the right value directly: `\"Median\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the right value directly","rendered":null,"spans":[{"byte_end":10786,"byte_start":10777,"column_end":46,"column_start":37,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":251,"line_start":251,"suggested_replacement":"\"Median\"","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":46,"highlight_start":37,"text":"        } else if cluster_method == &\"Median\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"taken reference of right operand","spans":[{"byte_end":10786,"byte_start":10759,"column_end":46,"column_start":19,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":251,"line_start":251,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":19,"text":"        } else if cluster_method == &\"Median\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n   --> src/cluster.rs:300:21\n    |\n300 | /                     match row_string_search.as_str() {\n301 | |                         Some(row_string_se) => {\n302 | |                             let row_string = row_string_se\n303 | |                                 .replace(\"[\", \"\")\n...   |\n312 | |                         None => {}\n313 | |                     }\n    | |_____________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n    = note: `#[warn(clippy::single_match)]` on by default\nhelp: try\n    |\n300 ~                     if let Some(row_string_se) = row_string_search.as_str() {\n301 +                         let row_string = row_string_se\n302 +                             .replace(\"[\", \"\")\n303 +                             .replace(\"]\", \"\")\n304 +                             .replace(\"\\n\", \"\");\n305 +                         row_names = row_string\n306 +                             .split(\",\")\n307 +                             .into_iter()\n308 +                             .map(|x| x.to_string())\n309 +                             .collect::<Vec<String>>(); // Row names\n310 +                     }\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::single_match)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":13368,"byte_start":12723,"column_end":22,"column_start":21,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":313,"line_start":300,"suggested_replacement":"if let Some(row_string_se) = row_string_search.as_str() {\n                        let row_string = row_string_se\n                            .replace(\"[\", \"\")\n                            .replace(\"]\", \"\")\n                            .replace(\"\\n\", \"\");\n                        row_names = row_string\n                            .split(\",\")\n                            .into_iter()\n                            .map(|x| x.to_string())\n                            .collect::<Vec<String>>(); // Row names\n                    }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":55,"highlight_start":21,"text":"                    match row_string_search.as_str() {"},{"highlight_end":49,"highlight_start":1,"text":"                        Some(row_string_se) => {"},{"highlight_end":59,"highlight_start":1,"text":"                            let row_string = row_string_se"},{"highlight_end":50,"highlight_start":1,"text":"                                .replace(\"[\", \"\")"},{"highlight_end":50,"highlight_start":1,"text":"                                .replace(\"]\", \"\")"},{"highlight_end":52,"highlight_start":1,"text":"                                .replace(\"\\n\", \"\");"},{"highlight_end":51,"highlight_start":1,"text":"                            row_names = row_string"},{"highlight_end":44,"highlight_start":1,"text":"                                .split(\",\")"},{"highlight_end":45,"highlight_start":1,"text":"                                .into_iter()"},{"highlight_end":56,"highlight_start":1,"text":"                                .map(|x| x.to_string())"},{"highlight_end":72,"highlight_start":1,"text":"                                .collect::<Vec<String>>(); // Row names"},{"highlight_end":26,"highlight_start":1,"text":"                        }"},{"highlight_end":35,"highlight_start":1,"text":"                        None => {}"},{"highlight_end":22,"highlight_start":1,"text":"                    }"}]}]}],"code":{"code":"clippy::single_match","explanation":null},"level":"warning","message":"you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`","spans":[{"byte_end":13368,"byte_start":12723,"column_end":22,"column_start":21,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":313,"line_start":300,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":21,"text":"                    match row_string_search.as_str() {"},{"highlight_end":49,"highlight_start":1,"text":"                        Some(row_string_se) => {"},{"highlight_end":59,"highlight_start":1,"text":"                            let row_string = row_string_se"},{"highlight_end":50,"highlight_start":1,"text":"                                .replace(\"[\", \"\")"},{"highlight_end":50,"highlight_start":1,"text":"                                .replace(\"]\", \"\")"},{"highlight_end":52,"highlight_start":1,"text":"                                .replace(\"\\n\", \"\");"},{"highlight_end":51,"highlight_start":1,"text":"                            row_names = row_string"},{"highlight_end":44,"highlight_start":1,"text":"                                .split(\",\")"},{"highlight_end":45,"highlight_start":1,"text":"                                .into_iter()"},{"highlight_end":56,"highlight_start":1,"text":"                                .map(|x| x.to_string())"},{"highlight_end":72,"highlight_start":1,"text":"                                .collect::<Vec<String>>(); // Row names"},{"highlight_end":26,"highlight_start":1,"text":"                        }"},{"highlight_end":35,"highlight_start":1,"text":"                        None => {}"},{"highlight_end":22,"highlight_start":1,"text":"                    }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"test_warning","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/test_warning.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unused variable: `unused`\n --> src/test_warning.rs:2:9\n  |\n2 |     let unused = \"this will trigger a warning\";\n  |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_unused`\n  |\n  = note: `#[warn(unused_variables)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"`#[warn(unused_variables)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"if this is intentional, prefix it with an underscore","rendered":null,"spans":[{"byte_end":32,"byte_start":26,"column_end":15,"column_start":9,"expansion":null,"file_name":"src/test_warning.rs","is_primary":true,"label":null,"line_end":2,"line_start":2,"suggested_replacement":"_unused","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":15,"highlight_start":9,"text":"    let unused = \"this will trigger a warning\";"}]}]}],"code":{"code":"unused_variables","explanation":null},"level":"warning","message":"unused variable: `unused`","spans":[{"byte_end":32,"byte_start":26,"column_end":15,"column_start":9,"expansion":null,"file_name":"src/test_warning.rs","is_primary":true,"label":null,"line_end":2,"line_start":2,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":9,"text":"    let unused = \"this will trigger a warning\";"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"test_warning","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/test_warning.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: function `unused_var` is never used\n --> src/test_warning.rs:1:4\n  |\n1 | fn unused_var() {\n  |    ^^^^^^^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"`#[warn(dead_code)]` on by default","rendered":null,"spans":[]}],"code":{"code":"dead_code","explanation":null},"level":"warning","message":"function `unused_var` is never used","spans":[{"byte_end":13,"byte_start":3,"column_end":14,"column_start":4,"expansion":null,"file_name":"src/test_warning.rs","is_primary":true,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":14,"highlight_start":4,"text":"fn unused_var() {"}]}]}}
{"reason":"compiler-artifact","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"computeTopTerms","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/computeTopTerms.rs","edition":"2018","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcomputeTopTerms-b84f748377043b5b.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"readHDF5","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/readHDF5.rs","edition":"2018","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libreadHDF5-58c6895001f7d9fd.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"test_warning","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/test_warning.rs","edition":"2018","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libtest_warning-121bdde59a67253b.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: useless conversion to the same type: `std::str::Split<'_, &str>`\n   --> src/cluster.rs:306:41\n    |\n306 |   ...                   row_names = row_string\n    |  ___________________________________^\n307 | | ...                       .split(\",\")\n308 | | ...                       .into_iter()\n    | |______________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\nhelp: consider removing `.into_iter()`\n    |\n306 ~                             row_names = row_string\n307 +                                 .split(\",\")\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::useless_conversion)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider removing `.into_iter()`","rendered":null,"spans":[{"byte_end":13157,"byte_start":13058,"column_end":45,"column_start":41,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":308,"line_start":306,"suggested_replacement":"row_string\n                                .split(\",\")","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":41,"text":"                            row_names = row_string"},{"highlight_end":44,"highlight_start":1,"text":"                                .split(\",\")"},{"highlight_end":45,"highlight_start":1,"text":"                                .into_iter()"}]}]}],"code":{"code":"clippy::useless_conversion","explanation":null},"level":"warning","message":"useless conversion to the same type: `std::str::Split<'_, &str>`","spans":[{"byte_end":13157,"byte_start":13058,"column_end":45,"column_start":41,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":308,"line_start":306,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":41,"text":"                            row_names = row_string"},{"highlight_end":44,"highlight_start":1,"text":"                                .split(\",\")"},{"highlight_end":45,"highlight_start":1,"text":"                                .into_iter()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n   --> src/cluster.rs:319:21\n    |\n319 | /                     match col_string_search.as_str() {\n320 | |                         Some(col_string_se) => {\n321 | |                             let col_string = col_string_se\n322 | |                                 .replace(\"[\", \"\")\n...   |\n331 | |                         None => {}\n332 | |                     }\n    | |_____________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\nhelp: try\n    |\n319 ~                     if let Some(col_string_se) = col_string_search.as_str() {\n320 +                         let col_string = col_string_se\n321 +                             .replace(\"[\", \"\")\n322 +                             .replace(\"]\", \"\")\n323 +                             .replace(\"\\n\", \"\");\n324 +                         col_names = col_string\n325 +                             .split(\",\")\n326 +                             .into_iter()\n327 +                             .map(|x| x.to_string())\n328 +                             .collect::<Vec<String>>(); // Col names\n329 +                     }\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":14316,"byte_start":13671,"column_end":22,"column_start":21,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":332,"line_start":319,"suggested_replacement":"if let Some(col_string_se) = col_string_search.as_str() {\n                        let col_string = col_string_se\n                            .replace(\"[\", \"\")\n                            .replace(\"]\", \"\")\n                            .replace(\"\\n\", \"\");\n                        col_names = col_string\n                            .split(\",\")\n                            .into_iter()\n                            .map(|x| x.to_string())\n                            .collect::<Vec<String>>(); // Col names\n                    }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":55,"highlight_start":21,"text":"                    match col_string_search.as_str() {"},{"highlight_end":49,"highlight_start":1,"text":"                        Some(col_string_se) => {"},{"highlight_end":59,"highlight_start":1,"text":"                            let col_string = col_string_se"},{"highlight_end":50,"highlight_start":1,"text":"                                .replace(\"[\", \"\")"},{"highlight_end":50,"highlight_start":1,"text":"                                .replace(\"]\", \"\")"},{"highlight_end":52,"highlight_start":1,"text":"                                .replace(\"\\n\", \"\");"},{"highlight_end":51,"highlight_start":1,"text":"                            col_names = col_string"},{"highlight_end":44,"highlight_start":1,"text":"                                .split(\",\")"},{"highlight_end":45,"highlight_start":1,"text":"                                .into_iter()"},{"highlight_end":56,"highlight_start":1,"text":"                                .map(|x| x.to_string())"},{"highlight_end":72,"highlight_start":1,"text":"                                .collect::<Vec<String>>(); // Col names"},{"highlight_end":26,"highlight_start":1,"text":"                        }"},{"highlight_end":35,"highlight_start":1,"text":"                        None => {}"},{"highlight_end":22,"highlight_start":1,"text":"                    }"}]}]}],"code":{"code":"clippy::single_match","explanation":null},"level":"warning","message":"you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`","spans":[{"byte_end":14316,"byte_start":13671,"column_end":22,"column_start":21,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":332,"line_start":319,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":21,"text":"                    match col_string_search.as_str() {"},{"highlight_end":49,"highlight_start":1,"text":"                        Some(col_string_se) => {"},{"highlight_end":59,"highlight_start":1,"text":"                            let col_string = col_string_se"},{"highlight_end":50,"highlight_start":1,"text":"                                .replace(\"[\", \"\")"},{"highlight_end":50,"highlight_start":1,"text":"                                .replace(\"]\", \"\")"},{"highlight_end":52,"highlight_start":1,"text":"                                .replace(\"\\n\", \"\");"},{"highlight_end":51,"highlight_start":1,"text":"                            col_names = col_string"},{"highlight_end":44,"highlight_start":1,"text":"                                .split(\",\")"},{"highlight_end":45,"highlight_start":1,"text":"                                .into_iter()"},{"highlight_end":56,"highlight_start":1,"text":"                                .map(|x| x.to_string())"},{"highlight_end":72,"highlight_start":1,"text":"                                .collect::<Vec<String>>(); // Col names"},{"highlight_end":26,"highlight_start":1,"text":"                        }"},{"highlight_end":35,"highlight_start":1,"text":"                        None => {}"},{"highlight_end":22,"highlight_start":1,"text":"                    }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: useless conversion to the same type: `std::str::Split<'_, &str>`\n   --> src/cluster.rs:325:41\n    |\n325 |   ...                   col_names = col_string\n    |  ___________________________________^\n326 | | ...                       .split(\",\")\n327 | | ...                       .into_iter()\n    | |______________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\nhelp: consider removing `.into_iter()`\n    |\n325 ~                             col_names = col_string\n326 +                                 .split(\",\")\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider removing `.into_iter()`","rendered":null,"spans":[{"byte_end":14105,"byte_start":14006,"column_end":45,"column_start":41,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":327,"line_start":325,"suggested_replacement":"col_string\n                                .split(\",\")","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":41,"text":"                            col_names = col_string"},{"highlight_end":44,"highlight_start":1,"text":"                                .split(\",\")"},{"highlight_end":45,"highlight_start":1,"text":"                                .into_iter()"}]}]}],"code":{"code":"clippy::useless_conversion","explanation":null},"level":"warning","message":"useless conversion to the same type: `std::str::Split<'_, &str>`","spans":[{"byte_end":14105,"byte_start":14006,"column_end":45,"column_start":41,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":327,"line_start":325,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":41,"text":"                            col_names = col_string"},{"highlight_end":44,"highlight_start":1,"text":"                                .split(\",\")"},{"highlight_end":45,"highlight_start":1,"text":"                                .into_iter()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n   --> src/cluster.rs:337:21\n    |\n337 | /                     match cluster_method_search.as_str() {\n338 | |                         Some(cluster_method_se) => {\n339 | |                             if cluster_method_se != \"Single\".to_string()\n340 | |                                 && cluster_method_se != \"Complete\".to_string()\n...   |\n352 | |                         None => {}\n353 | |                     }\n    | |_____________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\nhelp: try\n    |\n337 ~                     if let Some(cluster_method_se) = cluster_method_search.as_str() {\n338 +                         if cluster_method_se != \"Single\".to_string()\n339 +                             && cluster_method_se != \"Complete\".to_string()\n340 +                             && cluster_method_se != \"Average\".to_string()\n341 +                             && cluster_method_se != \"Weighted\".to_string()\n342 +                             && cluster_method_se != \"Ward\".to_string()\n343 +                             && cluster_method_se != \"Centroid\".to_string()\n344 +                             && cluster_method_se != \"Median\".to_string()\n345 +                         {\n346 +                             panic!(\"Unknown clustering method:{}\", cluster_method_se);\n347 +                         } else {\n348 +                             cluster_method = cluster_method_se.to_string();\n349 +                         }\n350 +                     }\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":15550,"byte_start":14568,"column_end":22,"column_start":21,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":353,"line_start":337,"suggested_replacement":"if let Some(cluster_method_se) = cluster_method_search.as_str() {\n                        if cluster_method_se != \"Single\".to_string()\n                            && cluster_method_se != \"Complete\".to_string()\n                            && cluster_method_se != \"Average\".to_string()\n                            && cluster_method_se != \"Weighted\".to_string()\n                            && cluster_method_se != \"Ward\".to_string()\n                            && cluster_method_se != \"Centroid\".to_string()\n                            && cluster_method_se != \"Median\".to_string()\n                        {\n                            panic!(\"Unknown clustering method:{}\", cluster_method_se);\n                        } else {\n                            cluster_method = cluster_method_se.to_string();\n                        }\n                    }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":59,"highlight_start":21,"text":"                    match cluster_method_search.as_str() {"},{"highlight_end":53,"highlight_start":1,"text":"                        Some(cluster_method_se) => {"},{"highlight_end":73,"highlight_start":1,"text":"                            if cluster_method_se != \"Single\".to_string()"},{"highlight_end":79,"highlight_start":1,"text":"                                && cluster_method_se != \"Complete\".to_string()"},{"highlight_end":78,"highlight_start":1,"text":"                                && cluster_method_se != \"Average\".to_string()"},{"highlight_end":79,"highlight_start":1,"text":"                                && cluster_method_se != \"Weighted\".to_string()"},{"highlight_end":75,"highlight_start":1,"text":"                                && cluster_method_se != \"Ward\".to_string()"},{"highlight_end":79,"highlight_start":1,"text":"                                && cluster_method_se != \"Centroid\".to_string()"},{"highlight_end":77,"highlight_start":1,"text":"                                && cluster_method_se != \"Median\".to_string()"},{"highlight_end":30,"highlight_start":1,"text":"                            {"},{"highlight_end":91,"highlight_start":1,"text":"                                panic!(\"Unknown clustering method:{}\", cluster_method_se);"},{"highlight_end":37,"highlight_start":1,"text":"                            } else {"},{"highlight_end":80,"highlight_start":1,"text":"                                cluster_method = cluster_method_se.to_string();"},{"highlight_end":30,"highlight_start":1,"text":"                            }"},{"highlight_end":26,"highlight_start":1,"text":"                        }"},{"highlight_end":35,"highlight_start":1,"text":"                        None => {}"},{"highlight_end":22,"highlight_start":1,"text":"                    }"}]}]}],"code":{"code":"clippy::single_match","explanation":null},"level":"warning","message":"you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`","spans":[{"byte_end":15550,"byte_start":14568,"column_end":22,"column_start":21,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":353,"line_start":337,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":59,"highlight_start":21,"text":"                    match cluster_method_search.as_str() {"},{"highlight_end":53,"highlight_start":1,"text":"                        Some(cluster_method_se) => {"},{"highlight_end":73,"highlight_start":1,"text":"                            if cluster_method_se != \"Single\".to_string()"},{"highlight_end":79,"highlight_start":1,"text":"                                && cluster_method_se != \"Complete\".to_string()"},{"highlight_end":78,"highlight_start":1,"text":"                                && cluster_method_se != \"Average\".to_string()"},{"highlight_end":79,"highlight_start":1,"text":"                                && cluster_method_se != \"Weighted\".to_string()"},{"highlight_end":75,"highlight_start":1,"text":"                                && cluster_method_se != \"Ward\".to_string()"},{"highlight_end":79,"highlight_start":1,"text":"                                && cluster_method_se != \"Centroid\".to_string()"},{"highlight_end":77,"highlight_start":1,"text":"                                && cluster_method_se != \"Median\".to_string()"},{"highlight_end":30,"highlight_start":1,"text":"                            {"},{"highlight_end":91,"highlight_start":1,"text":"                                panic!(\"Unknown clustering method:{}\", cluster_method_se);"},{"highlight_end":37,"highlight_start":1,"text":"                            } else {"},{"highlight_end":80,"highlight_start":1,"text":"                                cluster_method = cluster_method_se.to_string();"},{"highlight_end":30,"highlight_start":1,"text":"                            }"},{"highlight_end":26,"highlight_start":1,"text":"                        }"},{"highlight_end":35,"highlight_start":1,"text":"                        None => {}"},{"highlight_end":22,"highlight_start":1,"text":"                    }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n   --> src/cluster.rs:339:53\n    |\n339 | ...                   if cluster_method_se != \"Single\".to_string()\n    |                                               ^^^^^^^^^^^^^^^^^^^^ help: try: `\"Single\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n    = note: `#[warn(clippy::cmp_owned)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::cmp_owned)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":14732,"byte_start":14712,"column_end":73,"column_start":53,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":339,"line_start":339,"suggested_replacement":"\"Single\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":73,"highlight_start":53,"text":"                            if cluster_method_se != \"Single\".to_string()"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":14732,"byte_start":14712,"column_end":73,"column_start":53,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":339,"line_start":339,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":53,"text":"                            if cluster_method_se != \"Single\".to_string()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n   --> src/cluster.rs:340:57\n    |\n340 | ...                   && cluster_method_se != \"Complete\".to_string()\n    |                                               ^^^^^^^^^^^^^^^^^^^^^^ help: try: `\"Complete\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":14811,"byte_start":14789,"column_end":79,"column_start":57,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":340,"line_start":340,"suggested_replacement":"\"Complete\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":79,"highlight_start":57,"text":"                                && cluster_method_se != \"Complete\".to_string()"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":14811,"byte_start":14789,"column_end":79,"column_start":57,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":340,"line_start":340,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":79,"highlight_start":57,"text":"                                && cluster_method_se != \"Complete\".to_string()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n   --> src/cluster.rs:341:57\n    |\n341 | ...                   && cluster_method_se != \"Average\".to_string()\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `\"Average\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":14889,"byte_start":14868,"column_end":78,"column_start":57,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":341,"line_start":341,"suggested_replacement":"\"Average\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":78,"highlight_start":57,"text":"                                && cluster_method_se != \"Average\".to_string()"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":14889,"byte_start":14868,"column_end":78,"column_start":57,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":341,"line_start":341,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":78,"highlight_start":57,"text":"                                && cluster_method_se != \"Average\".to_string()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n   --> src/cluster.rs:342:57\n    |\n342 | ...                   && cluster_method_se != \"Weighted\".to_string()\n    |                                               ^^^^^^^^^^^^^^^^^^^^^^ help: try: `\"Weighted\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":14968,"byte_start":14946,"column_end":79,"column_start":57,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":342,"line_start":342,"suggested_replacement":"\"Weighted\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":79,"highlight_start":57,"text":"                                && cluster_method_se != \"Weighted\".to_string()"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":14968,"byte_start":14946,"column_end":79,"column_start":57,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":342,"line_start":342,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":79,"highlight_start":57,"text":"                                && cluster_method_se != \"Weighted\".to_string()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n   --> src/cluster.rs:343:57\n    |\n343 | ...                   && cluster_method_se != \"Ward\".to_string()\n    |                                               ^^^^^^^^^^^^^^^^^^ help: try: `\"Ward\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":15043,"byte_start":15025,"column_end":75,"column_start":57,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":343,"line_start":343,"suggested_replacement":"\"Ward\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":75,"highlight_start":57,"text":"                                && cluster_method_se != \"Ward\".to_string()"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":15043,"byte_start":15025,"column_end":75,"column_start":57,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":343,"line_start":343,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":75,"highlight_start":57,"text":"                                && cluster_method_se != \"Ward\".to_string()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n   --> src/cluster.rs:344:57\n    |\n344 | ...                   && cluster_method_se != \"Centroid\".to_string()\n    |                                               ^^^^^^^^^^^^^^^^^^^^^^ help: try: `\"Centroid\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":15122,"byte_start":15100,"column_end":79,"column_start":57,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":344,"line_start":344,"suggested_replacement":"\"Centroid\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":79,"highlight_start":57,"text":"                                && cluster_method_se != \"Centroid\".to_string()"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":15122,"byte_start":15100,"column_end":79,"column_start":57,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":344,"line_start":344,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":79,"highlight_start":57,"text":"                                && cluster_method_se != \"Centroid\".to_string()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n   --> src/cluster.rs:345:57\n    |\n345 | ...                   && cluster_method_se != \"Median\".to_string()\n    |                                               ^^^^^^^^^^^^^^^^^^^^ help: try: `\"Median\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":15199,"byte_start":15179,"column_end":77,"column_start":57,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":345,"line_start":345,"suggested_replacement":"\"Median\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":77,"highlight_start":57,"text":"                                && cluster_method_se != \"Median\".to_string()"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":15199,"byte_start":15179,"column_end":77,"column_start":57,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":345,"line_start":345,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":77,"highlight_start":57,"text":"                                && cluster_method_se != \"Median\".to_string()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unneeded late initialization\n   --> src/cluster.rs:356:21\n    |\n356 |                     let _plot_image;\n    |                     ^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init\n    = note: `#[warn(clippy::needless_late_init)]` on by default\nhelp: move the declaration `_plot_image` here and remove the assignments from the `match` arms\n    |\n356 ~                     \n357 |                     let plot_image_option = &json_string[\"plot_image\"].as_bool();\n358 ~                     let _plot_image = match plot_image_option {\n359 ~                         Some(plot_image_op) => plot_image_op.to_owned(),\n360 ~                         None => false,\n361 ~                     };\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_late_init)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"move the declaration `_plot_image` here and remove the assignments from the `match` arms","rendered":null,"spans":[{"byte_end":15847,"byte_start":15833,"column_end":62,"column_start":48,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":359,"line_start":359,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":62,"highlight_start":48,"text":"                        Some(plot_image_op) => _plot_image = plot_image_op.to_owned(),"}]},{"byte_end":15919,"byte_start":15905,"column_end":47,"column_start":33,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":360,"line_start":360,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":47,"highlight_start":33,"text":"                        None => _plot_image = false,"}]},{"byte_end":15657,"byte_start":15641,"column_end":37,"column_start":21,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":356,"line_start":356,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":37,"highlight_start":21,"text":"                    let _plot_image;"}]},{"byte_end":15760,"byte_start":15760,"column_end":21,"column_start":21,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":358,"line_start":358,"suggested_replacement":"let _plot_image = ","suggestion_applicability":"Unspecified","text":[{"highlight_end":21,"highlight_start":21,"text":"                    match plot_image_option {"}]},{"byte_end":15947,"byte_start":15947,"column_end":22,"column_start":22,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":361,"line_start":361,"suggested_replacement":";","suggestion_applicability":"Unspecified","text":[{"highlight_end":22,"highlight_start":22,"text":"                    }"}]}]}],"code":{"code":"clippy::needless_late_init","explanation":null},"level":"warning","message":"unneeded late initialization","spans":[{"byte_end":15657,"byte_start":15641,"column_end":37,"column_start":21,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":356,"line_start":356,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":21,"text":"                    let _plot_image;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/cluster.rs:385:67\n    |\n385 |                     if input_matrix.ncols() != row_names.len() && row_names.len() > 0 {\n    |                                                                   ^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!row_names.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":17357,"byte_start":17338,"column_end":86,"column_start":67,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":385,"line_start":385,"suggested_replacement":"!row_names.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":86,"highlight_start":67,"text":"                    if input_matrix.ncols() != row_names.len() && row_names.len() > 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":17357,"byte_start":17338,"column_end":86,"column_start":67,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":385,"line_start":385,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":86,"highlight_start":67,"text":"                    if input_matrix.ncols() != row_names.len() && row_names.len() > 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/cluster.rs:388:74\n    |\n388 |                     } else if input_matrix.nrows() != col_names.len() && col_names.len() > 0 {\n    |                                                                          ^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!col_names.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":17695,"byte_start":17676,"column_end":93,"column_start":74,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":388,"line_start":388,"suggested_replacement":"!col_names.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":93,"highlight_start":74,"text":"                    } else if input_matrix.nrows() != col_names.len() && col_names.len() > 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":17695,"byte_start":17676,"column_end":93,"column_start":74,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":388,"line_start":388,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":93,"highlight_start":74,"text":"                    } else if input_matrix.nrows() != col_names.len() && col_names.len() > 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/cluster.rs:414:50\n    |\n414 | ...                   col_output_string += &\",\".to_string();\n    |                                            ^^^^^^^^^^^^^^^^ help: use: `\",\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n    = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::unnecessary_to_owned)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":19209,"byte_start":19193,"column_end":66,"column_start":50,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":414,"line_start":414,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":50,"text":"                            col_output_string += &\",\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":19209,"byte_start":19193,"column_end":66,"column_start":50,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":414,"line_start":414,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":50,"text":"                            col_output_string += &\",\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/cluster.rs:417:42\n    |\n417 |                     col_output_string += &\"]\".to_string();\n    |                                          ^^^^^^^^^^^^^^^^ help: use: `\"]\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":19316,"byte_start":19300,"column_end":58,"column_start":42,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":417,"line_start":417,"suggested_replacement":"\"]\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":42,"text":"                    col_output_string += &\"]\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":19316,"byte_start":19300,"column_end":58,"column_start":42,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":417,"line_start":417,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":42,"text":"                    col_output_string += &\"]\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/cluster.rs:424:50\n    |\n424 | ...                   row_output_string += &\",\".to_string();\n    |                                            ^^^^^^^^^^^^^^^^ help: use: `\",\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":19806,"byte_start":19790,"column_end":66,"column_start":50,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":424,"line_start":424,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":50,"text":"                            row_output_string += &\",\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":19806,"byte_start":19790,"column_end":66,"column_start":50,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":424,"line_start":424,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":50,"text":"                            row_output_string += &\",\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/cluster.rs:427:42\n    |\n427 |                     row_output_string += &\"]\".to_string();\n    |                                          ^^^^^^^^^^^^^^^^ help: use: `\"]\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":19913,"byte_start":19897,"column_end":58,"column_start":42,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":427,"line_start":427,"suggested_replacement":"\"]\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":42,"text":"                    row_output_string += &\"]\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":19913,"byte_start":19897,"column_end":58,"column_start":42,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":427,"line_start":427,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":42,"text":"                    row_output_string += &\"]\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is only used to index `sorted_col_names`\n   --> src/cluster.rs:543:14\n    |\n543 |     for i in 0..sorted_col_names.len() {\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n543 -     for i in 0..sorted_col_names.len() {\n543 +     for <item> in &sorted_col_names {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_range_loop)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":25260,"byte_start":25259,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":543,"line_start":543,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":10,"highlight_start":9,"text":"    for i in 0..sorted_col_names.len() {"}]},{"byte_end":25289,"byte_start":25264,"column_end":39,"column_start":14,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":543,"line_start":543,"suggested_replacement":"&sorted_col_names","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":39,"highlight_start":14,"text":"    for i in 0..sorted_col_names.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is only used to index `sorted_col_names`","spans":[{"byte_end":25289,"byte_start":25264,"column_end":39,"column_start":14,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":543,"line_start":543,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":14,"text":"    for i in 0..sorted_col_names.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is only used to index `sorted_row_names`\n   --> src/cluster.rs:552:14\n    |\n552 |     for i in 0..sorted_row_names.len() {\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n552 -     for i in 0..sorted_row_names.len() {\n552 +     for <item> in &sorted_row_names {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":25573,"byte_start":25572,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":552,"line_start":552,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":10,"highlight_start":9,"text":"    for i in 0..sorted_row_names.len() {"}]},{"byte_end":25602,"byte_start":25577,"column_end":39,"column_start":14,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":552,"line_start":552,"suggested_replacement":"&sorted_row_names","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":39,"highlight_start":14,"text":"    for i in 0..sorted_row_names.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is only used to index `sorted_row_names`","spans":[{"byte_end":25602,"byte_start":25577,"column_end":39,"column_start":14,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":552,"line_start":552,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":14,"text":"    for i in 0..sorted_row_names.len() {"}]}]}}
{"reason":"compiler-artifact","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"gdcmaf","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/gdcmaf.rs","edition":"2018","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libgdcmaf-90ef087f03fb5339.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"wilcoxon","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/wilcoxon.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this import is redundant\n  --> src/wilcoxon.rs:46:1\n   |\n46 | use json;\n   | ^^^^^^^^^ help: remove it entirely\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports\n   = note: `#[warn(clippy::single_component_path_imports)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::single_component_path_imports)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove it entirely","rendered":null,"spans":[{"byte_end":1839,"byte_start":1829,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/wilcoxon.rs","is_primary":true,"label":null,"line_end":47,"line_start":46,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":10,"highlight_start":1,"text":"use json;"},{"highlight_end":1,"highlight_start":1,"text":"use serde::{Deserialize, Serialize};"}]}]}],"code":{"code":"clippy::single_component_path_imports","explanation":null},"level":"warning","message":"this import is redundant","spans":[{"byte_end":1838,"byte_start":1829,"column_end":10,"column_start":1,"expansion":null,"file_name":"src/wilcoxon.rs","is_primary":true,"label":null,"line_end":46,"line_start":46,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":10,"highlight_start":1,"text":"use json;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/cluster.rs:584:8\n    |\n584 |     if sorted_row_names.len() > 0 {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!sorted_row_names.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":27128,"byte_start":27102,"column_end":34,"column_start":8,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":584,"line_start":584,"suggested_replacement":"!sorted_row_names.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":34,"highlight_start":8,"text":"    if sorted_row_names.len() > 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":27128,"byte_start":27102,"column_end":34,"column_start":8,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":584,"line_start":584,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":8,"text":"    if sorted_row_names.len() > 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `row` is used to index `sorted_row_names`\n   --> src/cluster.rs:585:20\n    |\n585 |         for row in 0..original_array.nrows() {\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator and enumerate()\n    |\n585 -         for row in 0..original_array.nrows() {\n585 +         for (row, <item>) in sorted_row_names.iter().enumerate().take(original_array.nrows()) {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator and enumerate()","rendered":null,"spans":[{"byte_end":27146,"byte_start":27143,"column_end":16,"column_start":13,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":585,"line_start":585,"suggested_replacement":"(row, <item>)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":16,"highlight_start":13,"text":"        for row in 0..original_array.nrows() {"}]},{"byte_end":27175,"byte_start":27150,"column_end":45,"column_start":20,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":585,"line_start":585,"suggested_replacement":"sorted_row_names.iter().enumerate().take(original_array.nrows())","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":45,"highlight_start":20,"text":"        for row in 0..original_array.nrows() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `row` is used to index `sorted_row_names`","spans":[{"byte_end":27175,"byte_start":27150,"column_end":45,"column_start":20,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":585,"line_start":585,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":20,"text":"        for row in 0..original_array.nrows() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/cluster.rs:600:8\n    |\n600 |     if sorted_col_names.len() > 0 {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!sorted_col_names.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":27624,"byte_start":27598,"column_end":34,"column_start":8,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":600,"line_start":600,"suggested_replacement":"!sorted_col_names.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":34,"highlight_start":8,"text":"    if sorted_col_names.len() > 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":27624,"byte_start":27598,"column_end":34,"column_start":8,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":600,"line_start":600,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":8,"text":"    if sorted_col_names.len() > 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `col` is used to index `sorted_col_names`\n   --> src/cluster.rs:601:20\n    |\n601 |         for col in 0..original_array.ncols() {\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator and enumerate()\n    |\n601 -         for col in 0..original_array.ncols() {\n601 +         for (col, <item>) in sorted_col_names.iter().enumerate().take(original_array.ncols()) {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator and enumerate()","rendered":null,"spans":[{"byte_end":27642,"byte_start":27639,"column_end":16,"column_start":13,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":601,"line_start":601,"suggested_replacement":"(col, <item>)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":16,"highlight_start":13,"text":"        for col in 0..original_array.ncols() {"}]},{"byte_end":27671,"byte_start":27646,"column_end":45,"column_start":20,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":601,"line_start":601,"suggested_replacement":"sorted_col_names.iter().enumerate().take(original_array.ncols())","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":45,"highlight_start":20,"text":"        for col in 0..original_array.ncols() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `col` is used to index `sorted_col_names`","spans":[{"byte_end":27671,"byte_start":27646,"column_end":45,"column_start":20,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":601,"line_start":601,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":20,"text":"        for col in 0..original_array.ncols() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/cluster.rs:621:39\n    |\n621 |                 create_color_gradient(original_array[(row, col)] as f64, max_value, min_value);\n    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `original_array[(row, col)]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::unnecessary_cast)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":28436,"byte_start":28403,"column_end":72,"column_start":39,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":621,"line_start":621,"suggested_replacement":"original_array[(row, col)]","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":72,"highlight_start":39,"text":"                create_color_gradient(original_array[(row, col)] as f64, max_value, min_value);"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":28436,"byte_start":28403,"column_end":72,"column_start":39,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":621,"line_start":621,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":72,"highlight_start":39,"text":"                create_color_gradient(original_array[(row, col)] as f64, max_value, min_value);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the borrowed expression implements the required traits\n   --> src/cluster.rs:654:42\n    |\n654 |                 Into::<ShapeStyle>::into(&RGBColor(grad[0], grad[1], grad[2])).filled(),\n    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `RGBColor(grad[0], grad[1], grad[2])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n    = note: `#[warn(clippy::needless_borrows_for_generic_args)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_borrows_for_generic_args)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":29864,"byte_start":29828,"column_end":78,"column_start":42,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":654,"line_start":654,"suggested_replacement":"RGBColor(grad[0], grad[1], grad[2])","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":78,"highlight_start":42,"text":"                Into::<ShapeStyle>::into(&RGBColor(grad[0], grad[1], grad[2])).filled(),"}]}]}],"code":{"code":"clippy::needless_borrows_for_generic_args","explanation":null},"level":"warning","message":"the borrowed expression implements the required traits","spans":[{"byte_end":29864,"byte_start":29828,"column_end":78,"column_start":42,"expansion":null,"file_name":"src/cluster.rs","is_primary":true,"label":null,"line_end":654,"line_start":654,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":78,"highlight_start":42,"text":"                Into::<ShapeStyle>::into(&RGBColor(grad[0], grad[1], grad[2])).filled(),"}]}]}}
{"reason":"compiler-artifact","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"topGeneByExpressionVariance","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/topGeneByExpressionVariance.rs","edition":"2018","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libtopGeneByExpressionVariance-320656a2f852d4f1.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"fisher","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/fisher.rs","edition":"2018","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libfisher-2eceb08b4eb0994b.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"wilcoxon","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/wilcoxon.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: returning the result of a `let` binding from a block\n  --> src/stats_functions.rs:28:13\n   |\n20 | /             let p_value = fishers_exact(&[\n21 | |                 alternate_forward_count,\n22 | |                 alternate_reverse_count,\n23 | |                 reference_forward_count,\n...  |\n26 | |             .unwrap()\n27 | |             .two_tail_pvalue;\n   | |_____________________________- unnecessary `let` binding\n28 |               p_value\n   |               ^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n   = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n   |\n20 ~             \n21 ~             fishers_exact(&[\n22 +                 alternate_forward_count,\n23 +                 alternate_reverse_count,\n24 +                 reference_forward_count,\n25 +                 reference_reverse_count,\n26 +             ])\n27 +             .unwrap()\n28 +             .two_tail_pvalue\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::let_and_return)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"return the expression directly","rendered":null,"spans":[{"byte_end":1383,"byte_start":1122,"column_end":30,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":27,"line_start":20,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":13,"text":"            let p_value = fishers_exact(&["},{"highlight_end":41,"highlight_start":1,"text":"                alternate_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                alternate_reverse_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_reverse_count,"},{"highlight_end":15,"highlight_start":1,"text":"            ])"},{"highlight_end":22,"highlight_start":1,"text":"            .unwrap()"},{"highlight_end":30,"highlight_start":1,"text":"            .two_tail_pvalue;"}]},{"byte_end":1403,"byte_start":1396,"column_end":20,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":28,"line_start":28,"suggested_replacement":"fishers_exact(&[\n                alternate_forward_count,\n                alternate_reverse_count,\n                reference_forward_count,\n                reference_reverse_count,\n            ])\n            .unwrap()\n            .two_tail_pvalue","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":20,"highlight_start":13,"text":"            p_value"}]}]}],"code":{"code":"clippy::let_and_return","explanation":null},"level":"warning","message":"returning the result of a `let` binding from a block","spans":[{"byte_end":1383,"byte_start":1122,"column_end":30,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":false,"label":"unnecessary `let` binding","line_end":27,"line_start":20,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":13,"text":"            let p_value = fishers_exact(&["},{"highlight_end":41,"highlight_start":1,"text":"                alternate_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                alternate_reverse_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_reverse_count,"},{"highlight_end":15,"highlight_start":1,"text":"            ])"},{"highlight_end":22,"highlight_start":1,"text":"            .unwrap()"},{"highlight_end":30,"highlight_start":1,"text":"            .two_tail_pvalue;"}]},{"byte_end":1403,"byte_start":1396,"column_end":20,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":28,"line_start":28,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":13,"text":"            p_value"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"wilcoxon","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/wilcoxon.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: returning the result of a `let` binding from a block\n  --> src/stats_functions.rs:58:13\n   |\n50 | /             let p_value = fishers_exact(&[\n51 | |                 alternate_forward_count,\n52 | |                 alternate_reverse_count,\n53 | |                 reference_forward_count,\n...  |\n56 | |             .unwrap()\n57 | |             .two_tail_pvalue;\n   | |_____________________________- unnecessary `let` binding\n58 |               p_value\n   |               ^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n   |\n50 ~             \n51 ~             fishers_exact(&[\n52 +                 alternate_forward_count,\n53 +                 alternate_reverse_count,\n54 +                 reference_forward_count,\n55 +                 reference_reverse_count,\n56 +             ])\n57 +             .unwrap()\n58 +             .two_tail_pvalue\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"return the expression directly","rendered":null,"spans":[{"byte_end":2412,"byte_start":2151,"column_end":30,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":57,"line_start":50,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":13,"text":"            let p_value = fishers_exact(&["},{"highlight_end":41,"highlight_start":1,"text":"                alternate_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                alternate_reverse_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_reverse_count,"},{"highlight_end":15,"highlight_start":1,"text":"            ])"},{"highlight_end":22,"highlight_start":1,"text":"            .unwrap()"},{"highlight_end":30,"highlight_start":1,"text":"            .two_tail_pvalue;"}]},{"byte_end":2432,"byte_start":2425,"column_end":20,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":58,"line_start":58,"suggested_replacement":"fishers_exact(&[\n                alternate_forward_count,\n                alternate_reverse_count,\n                reference_forward_count,\n                reference_reverse_count,\n            ])\n            .unwrap()\n            .two_tail_pvalue","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":20,"highlight_start":13,"text":"            p_value"}]}]}],"code":{"code":"clippy::let_and_return","explanation":null},"level":"warning","message":"returning the result of a `let` binding from a block","spans":[{"byte_end":2412,"byte_start":2151,"column_end":30,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":false,"label":"unnecessary `let` binding","line_end":57,"line_start":50,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":13,"text":"            let p_value = fishers_exact(&["},{"highlight_end":41,"highlight_start":1,"text":"                alternate_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                alternate_reverse_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_reverse_count,"},{"highlight_end":15,"highlight_start":1,"text":"            ])"},{"highlight_end":22,"highlight_start":1,"text":"            .unwrap()"},{"highlight_end":30,"highlight_start":1,"text":"            .two_tail_pvalue;"}]},{"byte_end":2432,"byte_start":2425,"column_end":20,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":58,"line_start":58,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":13,"text":"            p_value"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"wilcoxon","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/wilcoxon.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/stats_functions.rs:194:12\n    |\n194 |         if is_repeat == false {\n    |            ^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!is_repeat`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n    = note: `#[warn(clippy::bool_comparison)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::bool_comparison)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":7870,"byte_start":7852,"column_end":30,"column_start":12,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":194,"line_start":194,"suggested_replacement":"!is_repeat","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":30,"highlight_start":12,"text":"        if is_repeat == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":7870,"byte_start":7852,"column_end":30,"column_start":12,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":194,"line_start":194,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":12,"text":"        if is_repeat == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"wilcoxon","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/wilcoxon.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/stats_functions.rs:208:16\n    |\n208 |             if is_repeat == false {\n    |                ^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!is_repeat`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":8390,"byte_start":8372,"column_end":34,"column_start":16,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":208,"line_start":208,"suggested_replacement":"!is_repeat","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":34,"highlight_start":16,"text":"            if is_repeat == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":8390,"byte_start":8372,"column_end":34,"column_start":16,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":208,"line_start":208,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":16,"text":"            if is_repeat == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"wilcoxon","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/wilcoxon.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/stats_functions.rs:266:26\n    |\n266 |     let u_y = weight_y - (group2.len() as f64 * (group2.len() as f64 + 1.0) / 2.0) as f64;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(group2.len() as f64 * (group2.len() as f64 + 1.0) / 2.0)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::unnecessary_cast)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":10522,"byte_start":10458,"column_end":90,"column_start":26,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":266,"line_start":266,"suggested_replacement":"(group2.len() as f64 * (group2.len() as f64 + 1.0) / 2.0)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":90,"highlight_start":26,"text":"    let u_y = weight_y - (group2.len() as f64 * (group2.len() as f64 + 1.0) / 2.0) as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":10522,"byte_start":10458,"column_end":90,"column_start":26,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":266,"line_start":266,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":90,"highlight_start":26,"text":"    let u_y = weight_y - (group2.len() as f64 * (group2.len() as f64 + 1.0) / 2.0) as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"wilcoxon","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/wilcoxon.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/stats_functions.rs:270:26\n    |\n270 |     let u_x = weight_x - (group1.len() as f64 * (group1.len() as f64 + 1.0) / 2.0) as f64;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(group1.len() as f64 * (group1.len() as f64 + 1.0) / 2.0)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":10726,"byte_start":10662,"column_end":90,"column_start":26,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":270,"line_start":270,"suggested_replacement":"(group1.len() as f64 * (group1.len() as f64 + 1.0) / 2.0)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":90,"highlight_start":26,"text":"    let u_x = weight_x - (group1.len() as f64 * (group1.len() as f64 + 1.0) / 2.0) as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":10726,"byte_start":10662,"column_end":90,"column_start":26,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":270,"line_start":270,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":90,"highlight_start":26,"text":"    let u_x = weight_x - (group1.len() as f64 * (group1.len() as f64 + 1.0) / 2.0) as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"wilcoxon","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/wilcoxon.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/stats_functions.rs:286:64\n    |\n286 |     if group1.len() < threshold && group2.len() < threshold && repeat_present == false {\n    |                                                                ^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!repeat_present`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":11290,"byte_start":11267,"column_end":87,"column_start":64,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":286,"line_start":286,"suggested_replacement":"!repeat_present","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":64,"text":"    if group1.len() < threshold && group2.len() < threshold && repeat_present == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":11290,"byte_start":11267,"column_end":87,"column_start":64,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":286,"line_start":286,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":64,"text":"    if group1.len() < threshold && group2.len() < threshold && repeat_present == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"wilcoxon","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/wilcoxon.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is only used to index `rank_frequencies`\n   --> src/stats_functions.rs:317:18\n    |\n317 |         for i in 0..rank_frequencies.len() {\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n317 -         for i in 0..rank_frequencies.len() {\n317 +         for <item> in &rank_frequencies {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_range_loop)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":12588,"byte_start":12587,"column_end":14,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":317,"line_start":317,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":14,"highlight_start":13,"text":"        for i in 0..rank_frequencies.len() {"}]},{"byte_end":12617,"byte_start":12592,"column_end":43,"column_start":18,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":317,"line_start":317,"suggested_replacement":"&rank_frequencies","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":43,"highlight_start":18,"text":"        for i in 0..rank_frequencies.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is only used to index `rank_frequencies`","spans":[{"byte_end":12617,"byte_start":12592,"column_end":43,"column_start":18,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":317,"line_start":317,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":18,"text":"        for i in 0..rank_frequencies.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"wilcoxon","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/wilcoxon.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/stats_functions.rs:330:12\n    |\n330 |         if correct == true {\n    |            ^^^^^^^^^^^^^^^ help: try simplifying it as shown: `correct`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":13169,"byte_start":13154,"column_end":27,"column_start":12,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":330,"line_start":330,"suggested_replacement":"correct","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":27,"highlight_start":12,"text":"        if correct == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":13169,"byte_start":13154,"column_end":27,"column_start":12,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":330,"line_start":330,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":12,"text":"        if correct == true {"}]}]}}
{"reason":"compiler-artifact","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cluster","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/cluster.rs","edition":"2018","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libcluster-28a6db4c097c1c49.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"wilcoxon","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/wilcoxon.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/wilcoxon.rs:101:28\n    |\n101 |                         if vec1.len() == 0 || vec2.len() == 0 {\n    |                            ^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `vec1.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::len_zero)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":4173,"byte_start":4158,"column_end":43,"column_start":28,"expansion":null,"file_name":"src/wilcoxon.rs","is_primary":true,"label":null,"line_end":101,"line_start":101,"suggested_replacement":"vec1.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":28,"text":"                        if vec1.len() == 0 || vec2.len() == 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":4173,"byte_start":4158,"column_end":43,"column_start":28,"expansion":null,"file_name":"src/wilcoxon.rs","is_primary":true,"label":null,"line_end":101,"line_start":101,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":28,"text":"                        if vec1.len() == 0 || vec2.len() == 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"wilcoxon","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/wilcoxon.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/wilcoxon.rs:101:47\n    |\n101 |                         if vec1.len() == 0 || vec2.len() == 0 {\n    |                                               ^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `vec2.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":4192,"byte_start":4177,"column_end":62,"column_start":47,"expansion":null,"file_name":"src/wilcoxon.rs","is_primary":true,"label":null,"line_end":101,"line_start":101,"suggested_replacement":"vec2.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":47,"text":"                        if vec1.len() == 0 || vec2.len() == 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":4192,"byte_start":4177,"column_end":62,"column_start":47,"expansion":null,"file_name":"src/wilcoxon.rs","is_primary":true,"label":null,"line_end":101,"line_start":101,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":47,"text":"                        if vec1.len() == 0 || vec2.len() == 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"wilcoxon","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/wilcoxon.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/wilcoxon.rs:117:46\n    |\n117 | ...                   output_string += &\",\".to_string();\n    |                                        ^^^^^^^^^^^^^^^^ help: use: `\",\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n    = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::unnecessary_to_owned)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":5123,"byte_start":5107,"column_end":62,"column_start":46,"expansion":null,"file_name":"src/wilcoxon.rs","is_primary":true,"label":null,"line_end":117,"line_start":117,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":46,"text":"                            output_string += &\",\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":5123,"byte_start":5107,"column_end":62,"column_start":46,"expansion":null,"file_name":"src/wilcoxon.rs","is_primary":true,"label":null,"line_end":117,"line_start":117,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":46,"text":"                            output_string += &\",\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"wilcoxon","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/wilcoxon.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/wilcoxon.rs:145:46\n    |\n145 | ...                   output_string += &\",\".to_string();\n    |                                        ^^^^^^^^^^^^^^^^ help: use: `\",\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":6532,"byte_start":6516,"column_end":62,"column_start":46,"expansion":null,"file_name":"src/wilcoxon.rs","is_primary":true,"label":null,"line_end":145,"line_start":145,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":46,"text":"                            output_string += &\",\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":6532,"byte_start":6516,"column_end":62,"column_start":46,"expansion":null,"file_name":"src/wilcoxon.rs","is_primary":true,"label":null,"line_end":145,"line_start":145,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":46,"text":"                            output_string += &\",\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"wilcoxon","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/wilcoxon.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/wilcoxon.rs:149:38\n    |\n149 |                     output_string += &\"]\".to_string();\n    |                                      ^^^^^^^^^^^^^^^^ help: use: `\"]\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":6676,"byte_start":6660,"column_end":54,"column_start":38,"expansion":null,"file_name":"src/wilcoxon.rs","is_primary":true,"label":null,"line_end":149,"line_start":149,"suggested_replacement":"\"]\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":38,"text":"                    output_string += &\"]\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":6676,"byte_start":6660,"column_end":54,"column_start":38,"expansion":null,"file_name":"src/wilcoxon.rs","is_primary":true,"label":null,"line_end":149,"line_start":149,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":38,"text":"                    output_string += &\"]\".to_string();"}]}]}}
{"reason":"compiler-artifact","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"wilcoxon","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/wilcoxon.rs","edition":"2018","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libwilcoxon-0b3ec6b9509dc7b2.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this import is redundant\n --> src/genesetORA.rs:5:1\n  |\n5 | use r_mathlib;\n  | ^^^^^^^^^^^^^^ help: remove it entirely\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports\n  = note: `#[warn(clippy::single_component_path_imports)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::single_component_path_imports)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove it entirely","rendered":null,"spans":[{"byte_end":301,"byte_start":286,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":6,"line_start":5,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":15,"highlight_start":1,"text":"use r_mathlib;"},{"highlight_end":1,"highlight_start":1,"text":"use rusqlite::{Connection, Result};"}]}]}],"code":{"code":"clippy::single_component_path_imports","explanation":null},"level":"warning","message":"this import is redundant","spans":[{"byte_end":300,"byte_start":286,"column_end":15,"column_start":1,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":5,"line_start":5,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"use r_mathlib;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this import is redundant\n --> src/genesetORA.rs:8:1\n  |\n8 | use serde_json;\n  | ^^^^^^^^^^^^^^^ help: remove it entirely\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove it entirely","rendered":null,"spans":[{"byte_end":390,"byte_start":374,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":9,"line_start":8,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":16,"highlight_start":1,"text":"use serde_json;"},{"highlight_end":1,"highlight_start":1,"text":"use std::cmp::Ordering;"}]}]}],"code":{"code":"clippy::single_component_path_imports","explanation":null},"level":"warning","message":"this import is redundant","spans":[{"byte_end":389,"byte_start":374,"column_end":16,"column_start":1,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":8,"line_start":8,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":1,"text":"use serde_json;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/genesetORA.rs:219:49\n    |\n219 | ...                   gene_set_hits: gene_set_hits,\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `gene_set_hits`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n    = note: `#[warn(clippy::redundant_field_names)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::redundant_field_names)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":10773,"byte_start":10745,"column_end":77,"column_start":49,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":219,"line_start":219,"suggested_replacement":"gene_set_hits","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":77,"highlight_start":49,"text":"                                                gene_set_hits: gene_set_hits,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":10773,"byte_start":10745,"column_end":77,"column_start":49,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":219,"line_start":219,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":77,"highlight_start":49,"text":"                                                gene_set_hits: gene_set_hits,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: redundant field names in struct initialization\n   --> src/genesetORA.rs:220:49\n    |\n220 | ...                   gene_set_size: gene_set_size,\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `gene_set_size`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":10851,"byte_start":10823,"column_end":77,"column_start":49,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":220,"line_start":220,"suggested_replacement":"gene_set_size","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":77,"highlight_start":49,"text":"                                                gene_set_size: gene_set_size,"}]}]}],"code":{"code":"clippy::redundant_field_names","explanation":null},"level":"warning","message":"redundant field names in struct initialization","spans":[{"byte_end":10851,"byte_start":10823,"column_end":77,"column_start":49,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":220,"line_start":220,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":77,"highlight_start":49,"text":"                                                gene_set_size: gene_set_size,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` statement can be collapsed\n   --> src/genesetORA.rs:277:9\n    |\n277 | /         if i != original_p_values.len() - 1 {\n278 | |             if adjusted_p_val > old_p_value {\n279 | |                 adjusted_p_val = old_p_value;\n280 | |             }\n281 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n277 ~         if i != original_p_values.len() - 1 && adjusted_p_val > old_p_value {\n278 +             adjusted_p_val = old_p_value;\n279 +         }\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::collapsible_if)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"collapse nested if block","rendered":null,"spans":[{"byte_end":13316,"byte_start":13163,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":281,"line_start":277,"suggested_replacement":"if i != original_p_values.len() - 1 && adjusted_p_val > old_p_value {\n            adjusted_p_val = old_p_value;\n        }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":46,"highlight_start":9,"text":"        if i != original_p_values.len() - 1 {"},{"highlight_end":46,"highlight_start":1,"text":"            if adjusted_p_val > old_p_value {"},{"highlight_end":46,"highlight_start":1,"text":"                adjusted_p_val = old_p_value;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":10,"highlight_start":1,"text":"        }"}]}]}],"code":{"code":"clippy::collapsible_if","explanation":null},"level":"warning","message":"this `if` statement can be collapsed","spans":[{"byte_end":13316,"byte_start":13163,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":281,"line_start":277,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":9,"text":"        if i != original_p_values.len() - 1 {"},{"highlight_end":46,"highlight_start":1,"text":"            if adjusted_p_val > old_p_value {"},{"highlight_end":46,"highlight_start":1,"text":"                adjusted_p_val = old_p_value;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":10,"highlight_start":1,"text":"        }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: taken reference of right operand\n  --> src/genesetORA.rs:45:27\n   |\n45 |         gene_set_hits += &(gene.to_string() + &\",\");\n   |                           ^^^^^^^^^^^^^^^^^^^^----^\n   |                                               |\n   |                                               help: use the right value directly: `\",\"`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\n   = note: `#[warn(clippy::op_ref)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::op_ref)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the right value directly","rendered":null,"spans":[{"byte_end":1335,"byte_start":1331,"column_end":51,"column_start":47,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":45,"line_start":45,"suggested_replacement":"\",\"","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":51,"highlight_start":47,"text":"        gene_set_hits += &(gene.to_string() + &\",\");"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"taken reference of right operand","spans":[{"byte_end":1336,"byte_start":1311,"column_end":52,"column_start":27,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":45,"line_start":45,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":27,"text":"        gene_set_hits += &(gene.to_string() + &\",\");"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/genesetORA.rs:45:47\n   |\n45 |         gene_set_hits += &(gene.to_string() + &\",\");\n   |                                               ^^^^ help: change this to: `\",\"`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_borrow)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":1335,"byte_start":1331,"column_end":51,"column_start":47,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":45,"line_start":45,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":47,"text":"        gene_set_hits += &(gene.to_string() + &\",\");"}]}]}],"code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","message":"this expression creates a reference which is immediately dereferenced by the compiler","spans":[{"byte_end":1335,"byte_start":1331,"column_end":51,"column_start":47,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":45,"line_start":45,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":47,"text":"        gene_set_hits += &(gene.to_string() + &\",\");"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n  --> src/genesetORA.rs:48:8\n   |\n48 |     if gene_intersections.len() > 0 {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!gene_intersections.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::len_zero)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":1380,"byte_start":1352,"column_end":36,"column_start":8,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":48,"line_start":48,"suggested_replacement":"!gene_intersections.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":36,"highlight_start":8,"text":"    if gene_intersections.len() > 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":1380,"byte_start":1352,"column_end":36,"column_start":8,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":48,"line_start":48,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":8,"text":"    if gene_intersections.len() > 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unneeded late initialization\n  --> src/genesetORA.rs:83:21\n   |\n83 |                     let msigdb;\n   |                     ^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init\n   = note: `#[warn(clippy::needless_late_init)]` on by default\nhelp: move the declaration `msigdb` here and remove the assignments from the `match` arms\n   |\n83 ~                     \n84 ~                     let msigdb = match msigdb_input.as_str() {\n85 ~                         Some(db_string) => db_string.to_string(),\n86 |                         None => panic!(\"msigdb file path is missing\"),\n87 ~                     };\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_late_init)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"move the declaration `msigdb` here and remove the assignments from the `match` arms","rendered":null,"spans":[{"byte_end":2772,"byte_start":2763,"column_end":53,"column_start":44,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":85,"line_start":85,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":53,"highlight_start":44,"text":"                        Some(db_string) => msigdb = db_string.to_string(),"}]},{"byte_end":2669,"byte_start":2658,"column_end":32,"column_start":21,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":83,"line_start":83,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":32,"highlight_start":21,"text":"                    let msigdb;"}]},{"byte_end":2690,"byte_start":2690,"column_end":21,"column_start":21,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":84,"line_start":84,"suggested_replacement":"let msigdb = ","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":21,"highlight_start":21,"text":"                    match msigdb_input.as_str() {"}]},{"byte_end":2887,"byte_start":2887,"column_end":22,"column_start":22,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":87,"line_start":87,"suggested_replacement":";","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":22,"highlight_start":22,"text":"                    }"}]}]}],"code":{"code":"clippy::needless_late_init","explanation":null},"level":"warning","message":"unneeded late initialization","spans":[{"byte_end":2669,"byte_start":2658,"column_end":32,"column_start":21,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":83,"line_start":83,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":21,"text":"                    let msigdb;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unneeded late initialization\n  --> src/genesetORA.rs:88:21\n   |\n88 |                     let genesetgroup;\n   |                     ^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init\nhelp: move the declaration `genesetgroup` here and remove the assignments from the `match` arms\n   |\n88 ~                     \n89 |                     let genesetgroup_input: &JsonValue = &json_string[\"gene_set_group\"];\n90 ~                     let genesetgroup = match genesetgroup_input.as_str() {\n91 ~                         Some(genesetgroup_string) => genesetgroup_string.to_string(),\n92 |                         None => panic!(\"genesetgroup is missing\"),\n93 ~                     };\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"move the declaration `genesetgroup` here and remove the assignments from the `match` arms","rendered":null,"spans":[{"byte_end":3139,"byte_start":3124,"column_end":69,"column_start":54,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":91,"line_start":91,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":69,"highlight_start":54,"text":"                        Some(genesetgroup_string) => genesetgroup = genesetgroup_string.to_string(),"}]},{"byte_end":2925,"byte_start":2908,"column_end":38,"column_start":21,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":88,"line_start":88,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":38,"highlight_start":21,"text":"                    let genesetgroup;"}]},{"byte_end":3035,"byte_start":3035,"column_end":21,"column_start":21,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":90,"line_start":90,"suggested_replacement":"let genesetgroup = ","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":21,"highlight_start":21,"text":"                    match genesetgroup_input.as_str() {"}]},{"byte_end":3260,"byte_start":3260,"column_end":22,"column_start":22,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":93,"line_start":93,"suggested_replacement":";","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":22,"highlight_start":22,"text":"                    }"}]}]}],"code":{"code":"clippy::needless_late_init","explanation":null},"level":"warning","message":"unneeded late initialization","spans":[{"byte_end":2925,"byte_start":2908,"column_end":38,"column_start":21,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":88,"line_start":88,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":21,"text":"                    let genesetgroup;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unneeded late initialization\n   --> src/genesetORA.rs:100:21\n    |\n100 |                     let genedb;\n    |                     ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init\nhelp: move the declaration `genedb` here and remove the assignments from the `match` arms\n    |\n100 ~                     \n101 ~                     let genedb = match genedb_input.as_str() {\n102 ~                         Some(gene_db_string) => gene_db_string.to_string(),\n103 |                         None => panic!(\"genedb file path is missing\"),\n104 ~                     };\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"move the declaration `genedb` here and remove the assignments from the `match` arms","rendered":null,"spans":[{"byte_end":3792,"byte_start":3783,"column_end":58,"column_start":49,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":102,"line_start":102,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":49,"text":"                        Some(gene_db_string) => genedb = gene_db_string.to_string(),"}]},{"byte_end":3684,"byte_start":3673,"column_end":32,"column_start":21,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":100,"line_start":100,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":32,"highlight_start":21,"text":"                    let genedb;"}]},{"byte_end":3705,"byte_start":3705,"column_end":21,"column_start":21,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":101,"line_start":101,"suggested_replacement":"let genedb = ","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":21,"highlight_start":21,"text":"                    match genedb_input.as_str() {"}]},{"byte_end":3912,"byte_start":3912,"column_end":22,"column_start":22,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":104,"line_start":104,"suggested_replacement":";","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":22,"highlight_start":22,"text":"                    }"}]}]}],"code":{"code":"clippy::needless_late_init","explanation":null},"level":"warning","message":"unneeded late initialization","spans":[{"byte_end":3684,"byte_start":3673,"column_end":32,"column_start":21,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":100,"line_start":100,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":21,"text":"                    let genedb;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/genesetORA.rs:112:60\n    |\n112 |                     let genedb_result = genedbconn.prepare(&(\"select * from codingGenes\"));\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `(\"select * from codingGenes\")`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":4331,"byte_start":4301,"column_end":90,"column_start":60,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":112,"line_start":112,"suggested_replacement":"(\"select * from codingGenes\")","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":90,"highlight_start":60,"text":"                    let genedb_result = genedbconn.prepare(&(\"select * from codingGenes\"));"}]}]}],"code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","message":"this expression creates a reference which is immediately dereferenced by the compiler","spans":[{"byte_end":4331,"byte_start":4301,"column_end":90,"column_start":60,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":112,"line_start":112,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":90,"highlight_start":60,"text":"                    let genedb_result = genedbconn.prepare(&(\"select * from codingGenes\"));"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n   --> src/genesetORA.rs:115:21\n    |\n115 | /                     match genedb_result {\n116 | |                         Ok(mut x) => {\n117 | |                             let mut genes = x.query([])?;\n118 | |                             while let Some(coding_gene) = genes.next()? {\n...   |\n132 | |                         Err(_) => {}\n133 | |                     }\n    | |_____________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n    = note: `#[warn(clippy::single_match)]` on by default\nhelp: try\n    |\n115 ~                     if let Ok(mut x) = genedb_result {\n116 +                         let mut genes = x.query([])?;\n117 +                         while let Some(coding_gene) = genes.next()? {\n118 +                             num_coding_genes += 1;\n119 +                             //println!(\"coding_gene:{:?}\", coding_gene);\n120 +                             for sample_gene in &sample_genes {\n121 +                                 let code_gene: String = coding_gene.get(0).unwrap();\n122 +                                 if filter_non_coding_genes == true && code_gene == *sample_gene\n123 +                                 {\n124 +                                     sample_coding_genes.insert(code_gene);\n125 +                                 } else if filter_non_coding_genes == false {\n126 +                                     sample_coding_genes.insert(code_gene);\n127 +                                 }\n128 +                             }\n129 +                         }\n130 +                     }\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::single_match)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":5553,"byte_start":4509,"column_end":22,"column_start":21,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":133,"line_start":115,"suggested_replacement":"if let Ok(mut x) = genedb_result {\n                        let mut genes = x.query([])?;\n                        while let Some(coding_gene) = genes.next()? {\n                            num_coding_genes += 1;\n                            //println!(\"coding_gene:{:?}\", coding_gene);\n                            for sample_gene in &sample_genes {\n                                let code_gene: String = coding_gene.get(0).unwrap();\n                                if filter_non_coding_genes == true && code_gene == *sample_gene\n                                {\n                                    sample_coding_genes.insert(code_gene);\n                                } else if filter_non_coding_genes == false {\n                                    sample_coding_genes.insert(code_gene);\n                                }\n                            }\n                        }\n                    }","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":42,"highlight_start":21,"text":"                    match genedb_result {"},{"highlight_end":39,"highlight_start":1,"text":"                        Ok(mut x) => {"},{"highlight_end":58,"highlight_start":1,"text":"                            let mut genes = x.query([])?;"},{"highlight_end":74,"highlight_start":1,"text":"                            while let Some(coding_gene) = genes.next()? {"},{"highlight_end":55,"highlight_start":1,"text":"                                num_coding_genes += 1;"},{"highlight_end":77,"highlight_start":1,"text":"                                //println!(\"coding_gene:{:?}\", coding_gene);"},{"highlight_end":67,"highlight_start":1,"text":"                                for sample_gene in &sample_genes {"},{"highlight_end":89,"highlight_start":1,"text":"                                    let code_gene: String = coding_gene.get(0).unwrap();"},{"highlight_end":100,"highlight_start":1,"text":"                                    if filter_non_coding_genes == true && code_gene == *sample_gene"},{"highlight_end":38,"highlight_start":1,"text":"                                    {"},{"highlight_end":79,"highlight_start":1,"text":"                                        sample_coding_genes.insert(code_gene);"},{"highlight_end":81,"highlight_start":1,"text":"                                    } else if filter_non_coding_genes == false {"},{"highlight_end":79,"highlight_start":1,"text":"                                        sample_coding_genes.insert(code_gene);"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":34,"highlight_start":1,"text":"                                }"},{"highlight_end":30,"highlight_start":1,"text":"                            }"},{"highlight_end":26,"highlight_start":1,"text":"                        }"},{"highlight_end":37,"highlight_start":1,"text":"                        Err(_) => {}"},{"highlight_end":22,"highlight_start":1,"text":"                    }"}]}]}],"code":{"code":"clippy::single_match","explanation":null},"level":"warning","message":"you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`","spans":[{"byte_end":5553,"byte_start":4509,"column_end":22,"column_start":21,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":133,"line_start":115,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":42,"highlight_start":21,"text":"                    match genedb_result {"},{"highlight_end":39,"highlight_start":1,"text":"                        Ok(mut x) => {"},{"highlight_end":58,"highlight_start":1,"text":"                            let mut genes = x.query([])?;"},{"highlight_end":74,"highlight_start":1,"text":"                            while let Some(coding_gene) = genes.next()? {"},{"highlight_end":55,"highlight_start":1,"text":"                                num_coding_genes += 1;"},{"highlight_end":77,"highlight_start":1,"text":"                                //println!(\"coding_gene:{:?}\", coding_gene);"},{"highlight_end":67,"highlight_start":1,"text":"                                for sample_gene in &sample_genes {"},{"highlight_end":89,"highlight_start":1,"text":"                                    let code_gene: String = coding_gene.get(0).unwrap();"},{"highlight_end":100,"highlight_start":1,"text":"                                    if filter_non_coding_genes == true && code_gene == *sample_gene"},{"highlight_end":38,"highlight_start":1,"text":"                                    {"},{"highlight_end":79,"highlight_start":1,"text":"                                        sample_coding_genes.insert(code_gene);"},{"highlight_end":81,"highlight_start":1,"text":"                                    } else if filter_non_coding_genes == false {"},{"highlight_end":79,"highlight_start":1,"text":"                                        sample_coding_genes.insert(code_gene);"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":34,"highlight_start":1,"text":"                                }"},{"highlight_end":30,"highlight_start":1,"text":"                            }"},{"highlight_end":26,"highlight_start":1,"text":"                        }"},{"highlight_end":37,"highlight_start":1,"text":"                        Err(_) => {}"},{"highlight_end":22,"highlight_start":1,"text":"                    }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` has identical blocks\n   --> src/genesetORA.rs:124:37\n    |\n124 | / ...                   {\n125 | | ...                       sample_coding_genes.insert(code_gene);\n126 | | ...                   } else if filter_non_coding_genes == false {\n    | |_______________________^\n    |\nnote: same as this\n   --> src/genesetORA.rs:126:80\n    |\n126 |   ...                   } else if filter_non_coding_genes == false {\n    |  __________________________________________________________________^\n127 | | ...                       sample_coding_genes.insert(code_gene);\n128 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else\n    = note: `#[warn(clippy::if_same_then_else)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"same as this","rendered":null,"spans":[{"byte_end":5404,"byte_start":5286,"column_end":38,"column_start":80,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":128,"line_start":126,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":81,"highlight_start":80,"text":"                                    } else if filter_non_coding_genes == false {"},{"highlight_end":79,"highlight_start":1,"text":"                                        sample_coding_genes.insert(code_gene);"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"}]}]},{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::if_same_then_else)]` on by default","rendered":null,"spans":[]}],"code":{"code":"clippy::if_same_then_else","explanation":null},"level":"warning","message":"this `if` has identical blocks","spans":[{"byte_end":5244,"byte_start":5126,"column_end":38,"column_start":37,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":126,"line_start":124,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":37,"text":"                                    {"},{"highlight_end":79,"highlight_start":1,"text":"                                        sample_coding_genes.insert(code_gene);"},{"highlight_end":38,"highlight_start":1,"text":"                                    } else if filter_non_coding_genes == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/genesetORA.rs:123:40\n    |\n123 | ...                   if filter_non_coding_genes == true && code_gene == *sample_gene\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `filter_non_coding_genes`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n    = note: `#[warn(clippy::bool_comparison)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::bool_comparison)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":5060,"byte_start":5029,"column_end":71,"column_start":40,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":123,"line_start":123,"suggested_replacement":"filter_non_coding_genes","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":71,"highlight_start":40,"text":"                                    if filter_non_coding_genes == true && code_gene == *sample_gene"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":5060,"byte_start":5029,"column_end":71,"column_start":40,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":123,"line_start":123,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":71,"highlight_start":40,"text":"                                    if filter_non_coding_genes == true && code_gene == *sample_gene"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/genesetORA.rs:126:47\n    |\n126 | ...                   } else if filter_non_coding_genes == false {\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!filter_non_coding_genes`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":5285,"byte_start":5253,"column_end":79,"column_start":47,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":126,"line_start":126,"suggested_replacement":"!filter_non_coding_genes","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":79,"highlight_start":47,"text":"                                    } else if filter_non_coding_genes == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":5285,"byte_start":5253,"column_end":79,"column_start":47,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":126,"line_start":126,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":79,"highlight_start":47,"text":"                                    } else if filter_non_coding_genes == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/genesetORA.rs:135:24\n    |\n135 |                     if sample_coding_genes.len() == 0 {\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `sample_coding_genes.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":5608,"byte_start":5578,"column_end":54,"column_start":24,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":135,"line_start":135,"suggested_replacement":"sample_coding_genes.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":24,"text":"                    if sample_coding_genes.len() == 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":5608,"byte_start":5578,"column_end":54,"column_start":24,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":135,"line_start":135,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":24,"text":"                    if sample_coding_genes.len() == 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unneeded late initialization\n   --> src/genesetORA.rs:140:21\n    |\n140 |                     let num_background_genes;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init\nhelp: move the declaration `num_background_genes` here and remove the assignments from the `match` arms\n    |\n140 ~                     \n141 ~                     let num_background_genes = match background_genes_input.as_str() {\n142 |                         Some(x) => {\n143 |                             let background_genes_str: Vec<&str> = x.split(\",\").collect(); // Background genes is defined for e.g in case of DE analysis\n144 ~                             background_genes_str.len()\n145 |                         }\n...\n148 |                             // Get background genes from the gene database\n149 ~                             num_coding_genes\n150 |                         }\n151 ~                     };\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"move the declaration `num_background_genes` here and remove the assignments from the `match` arms","rendered":null,"spans":[{"byte_end":6141,"byte_start":6118,"column_end":52,"column_start":29,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":144,"line_start":144,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":52,"highlight_start":29,"text":"                            num_background_genes = background_genes_str.len();"}]},{"byte_end":6168,"byte_start":6167,"column_end":79,"column_start":78,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":144,"line_start":144,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":79,"highlight_start":78,"text":"                            num_background_genes = background_genes_str.len();"}]},{"byte_end":6450,"byte_start":6427,"column_end":52,"column_start":29,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":149,"line_start":149,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":52,"highlight_start":29,"text":"                            num_background_genes = num_coding_genes;"}]},{"byte_end":6467,"byte_start":6466,"column_end":69,"column_start":68,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":149,"line_start":149,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":69,"highlight_start":68,"text":"                            num_background_genes = num_coding_genes;"}]},{"byte_end":5840,"byte_start":5815,"column_end":46,"column_start":21,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":140,"line_start":140,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":46,"highlight_start":21,"text":"                    let num_background_genes;"}]},{"byte_end":5861,"byte_start":5861,"column_end":21,"column_start":21,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":141,"line_start":141,"suggested_replacement":"let num_background_genes = ","suggestion_applicability":"Unspecified","text":[{"highlight_end":21,"highlight_start":21,"text":"                    match background_genes_input.as_str() {"}]},{"byte_end":6515,"byte_start":6515,"column_end":22,"column_start":22,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":151,"line_start":151,"suggested_replacement":";","suggestion_applicability":"Unspecified","text":[{"highlight_end":22,"highlight_start":22,"text":"                    }"}]}]}],"code":{"code":"clippy::needless_late_init","explanation":null},"level":"warning","message":"unneeded late initialization","spans":[{"byte_end":5840,"byte_start":5815,"column_end":46,"column_start":21,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":140,"line_start":140,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":21,"text":"                    let num_background_genes;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/genesetORA.rs:155:24\n    |\n155 |                     if sample_genes.len() == 0 {\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `sample_genes.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":6705,"byte_start":6682,"column_end":47,"column_start":24,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":155,"line_start":155,"suggested_replacement":"sample_genes.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":24,"text":"                    if sample_genes.len() == 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":6705,"byte_start":6682,"column_end":47,"column_start":24,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":155,"line_start":155,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":24,"text":"                    if sample_genes.len() == 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: taken reference of right operand\n   --> src/genesetORA.rs:179:45\n    |\n179 | / ...                   \"select genes from term2genes where id='\".to_owned()\n180 | | ...                       + &n.GO_id\n181 | | ...                       + &\"'\";\n    | |_____________________________---^\n    |                               |\n    |                               help: use the right value directly: `\"'\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the right value directly","rendered":null,"spans":[{"byte_end":8137,"byte_start":8133,"column_end":55,"column_start":51,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":181,"line_start":181,"suggested_replacement":"\"'\"","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":55,"highlight_start":51,"text":"                                                + &\"'\";"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"taken reference of right operand","spans":[{"byte_end":8137,"byte_start":7971,"column_end":55,"column_start":45,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":181,"line_start":179,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":97,"highlight_start":45,"text":"                                            \"select genes from term2genes where id='\".to_owned()"},{"highlight_end":59,"highlight_start":1,"text":"                                                + &n.GO_id"},{"highlight_end":55,"highlight_start":1,"text":"                                                + &\"'\";"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/genesetORA.rs:181:51\n    |\n181 | ...                   + &\"'\";\n    |                         ^^^^ help: change this to: `\"'\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":8137,"byte_start":8133,"column_end":55,"column_start":51,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":181,"line_start":181,"suggested_replacement":"\"'\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":55,"highlight_start":51,"text":"                                                + &\"'\";"}]}]}],"code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","message":"this expression creates a reference which is immediately dereferenced by the compiler","spans":[{"byte_end":8137,"byte_start":8133,"column_end":55,"column_start":51,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":181,"line_start":181,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":51,"text":"                                                + &\"'\";"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/genesetORA.rs:214:62\n    |\n214 | ...                   if matches >= 1.0 && p_value.is_nan() == false {\n    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!p_value.is_nan()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":10392,"byte_start":10367,"column_end":87,"column_start":62,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":214,"line_start":214,"suggested_replacement":"!p_value.is_nan()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":62,"text":"                                        if matches >= 1.0 && p_value.is_nan() == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":10392,"byte_start":10367,"column_end":87,"column_start":62,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":214,"line_start":214,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":62,"text":"                                        if matches >= 1.0 && p_value.is_nan() == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: taken reference of right operand\n   --> src/genesetORA.rs:232:41\n    |\n232 |                       let output_string = \"{\\\"num_pathways\\\":\".to_string()\n    |  _________________________________________^\n233 | |                         + &pathway_p_values.len().to_string()\n234 | |                         + &\",\\\"pathways\\\":\"\n235 | |                         + &adjust_p_values(pathway_p_values, num_items_output)\n236 | |                         + &\"}\";\n    | |___________________________---^\n    |                             |\n    |                             help: use the right value directly: `\"}\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the right value directly","rendered":null,"spans":[{"byte_end":11613,"byte_start":11609,"column_end":31,"column_start":27,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":236,"line_start":236,"suggested_replacement":"\"}\"","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":31,"highlight_start":27,"text":"                        + &\"}\";"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"taken reference of right operand","spans":[{"byte_end":11613,"byte_start":11365,"column_end":31,"column_start":41,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":236,"line_start":232,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":41,"text":"                    let output_string = \"{\\\"num_pathways\\\":\".to_string()"},{"highlight_end":62,"highlight_start":1,"text":"                        + &pathway_p_values.len().to_string()"},{"highlight_end":44,"highlight_start":1,"text":"                        + &\",\\\"pathways\\\":\""},{"highlight_end":79,"highlight_start":1,"text":"                        + &adjust_p_values(pathway_p_values, num_items_output)"},{"highlight_end":31,"highlight_start":1,"text":"                        + &\"}\";"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: taken reference of right operand\n   --> src/genesetORA.rs:232:41\n    |\n232 |                       let output_string = \"{\\\"num_pathways\\\":\".to_string()\n    |  _________________________________________^\n233 | |                         + &pathway_p_values.len().to_string()\n234 | |                         + &\",\\\"pathways\\\":\"\n    | |___________________________----------------^\n    |                             |\n    |                             help: use the right value directly: `\",\\\"pathways\\\":\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the right value directly","rendered":null,"spans":[{"byte_end":11503,"byte_start":11486,"column_end":44,"column_start":27,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":234,"line_start":234,"suggested_replacement":"\",\\\"pathways\\\":\"","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":44,"highlight_start":27,"text":"                        + &\",\\\"pathways\\\":\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"taken reference of right operand","spans":[{"byte_end":11503,"byte_start":11365,"column_end":44,"column_start":41,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":234,"line_start":232,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":41,"text":"                    let output_string = \"{\\\"num_pathways\\\":\".to_string()"},{"highlight_end":62,"highlight_start":1,"text":"                        + &pathway_p_values.len().to_string()"},{"highlight_end":44,"highlight_start":1,"text":"                        + &\",\\\"pathways\\\":\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/genesetORA.rs:234:27\n    |\n234 |                         + &\",\\\"pathways\\\":\"\n    |                           ^^^^^^^^^^^^^^^^^ help: change this to: `\",\\\"pathways\\\":\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":11503,"byte_start":11486,"column_end":44,"column_start":27,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":234,"line_start":234,"suggested_replacement":"\",\\\"pathways\\\":\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":44,"highlight_start":27,"text":"                        + &\",\\\"pathways\\\":\""}]}]}],"code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","message":"this expression creates a reference which is immediately dereferenced by the compiler","spans":[{"byte_end":11503,"byte_start":11486,"column_end":44,"column_start":27,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":234,"line_start":234,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":27,"text":"                        + &\",\\\"pathways\\\":\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/genesetORA.rs:236:27\n    |\n236 |                         + &\"}\";\n    |                           ^^^^ help: change this to: `\"}\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":11613,"byte_start":11609,"column_end":31,"column_start":27,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":236,"line_start":236,"suggested_replacement":"\"}\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":31,"highlight_start":27,"text":"                        + &\"}\";"}]}]}],"code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","message":"this expression creates a reference which is immediately dereferenced by the compiler","spans":[{"byte_end":11613,"byte_start":11609,"column_end":31,"column_start":27,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":236,"line_start":236,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":27,"text":"                        + &\"}\";"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is used to index `adjusted_p_values`\n   --> src/genesetORA.rs:305:14\n    |\n305 |     for i in 0..num_items_output {\n    |              ^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n305 -     for i in 0..num_items_output {\n305 +     for (i, <item>) in adjusted_p_values.iter().enumerate().take(num_items_output) {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_range_loop)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator and enumerate()","rendered":null,"spans":[{"byte_end":14187,"byte_start":14186,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":305,"line_start":305,"suggested_replacement":"(i, <item>)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":10,"highlight_start":9,"text":"    for i in 0..num_items_output {"}]},{"byte_end":14210,"byte_start":14191,"column_end":33,"column_start":14,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":305,"line_start":305,"suggested_replacement":"adjusted_p_values.iter().enumerate().take(num_items_output)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":33,"highlight_start":14,"text":"    for i in 0..num_items_output {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is used to index `adjusted_p_values`","spans":[{"byte_end":14210,"byte_start":14191,"column_end":33,"column_start":14,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":305,"line_start":305,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":33,"highlight_start":14,"text":"    for i in 0..num_items_output {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/genesetORA.rs:308:30\n    |\n308 |             output_string += &\",\".to_string();\n    |                              ^^^^^^^^^^^^^^^^ help: use: `\",\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n    = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::unnecessary_to_owned)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":14377,"byte_start":14361,"column_end":46,"column_start":30,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":308,"line_start":308,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":46,"highlight_start":30,"text":"            output_string += &\",\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":14377,"byte_start":14361,"column_end":46,"column_start":30,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":308,"line_start":308,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":30,"text":"            output_string += &\",\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/genesetORA.rs:311:22\n    |\n311 |     output_string += &\"]\".to_string();\n    |                      ^^^^^^^^^^^^^^^^ help: use: `\"]\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":14432,"byte_start":14416,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":311,"line_start":311,"suggested_replacement":"\"]\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":38,"highlight_start":22,"text":"    output_string += &\"]\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":14432,"byte_start":14416,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/genesetORA.rs","is_primary":true,"label":null,"line_end":311,"line_start":311,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":22,"text":"    output_string += &\"]\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this function has too many arguments (9/7)\n  --> src/realign.rs:11:1\n   |\n11 | / fn check_base_pair_quality_scores(\n12 | |     // Function that checks for base pair quality score to ensure all reads being aligned have high quality reads near the variant position\n13 | |     quality_score_sequence: &String, // String containing read base pair sequence\n14 | |     alphabets: &Vec<char>,           // Alphabets from CIGAR sequence\n...  |\n21 | |     right_flanking_region_limit: i64, // Right hand region upto where base-pair quality check needs to be carried out\n22 | | ) -> bool {\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n   = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::too_many_arguments)]` on by default","rendered":null,"spans":[]}],"code":{"code":"clippy::too_many_arguments","explanation":null},"level":"warning","message":"this function has too many arguments (9/7)","spans":[{"byte_end":1283,"byte_start":351,"column_end":10,"column_start":1,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":22,"line_start":11,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":1,"text":"fn check_base_pair_quality_scores("},{"highlight_end":140,"highlight_start":1,"text":"    // Function that checks for base pair quality score to ensure all reads being aligned have high quality reads near the variant position"},{"highlight_end":82,"highlight_start":1,"text":"    quality_score_sequence: &String, // String containing read base pair sequence"},{"highlight_end":70,"highlight_start":1,"text":"    alphabets: &Vec<char>,           // Alphabets from CIGAR sequence"},{"highlight_end":68,"highlight_start":1,"text":"    numbers: &Vec<i64>,              // Numbers from CIGAR sequence"},{"highlight_end":63,"highlight_start":1,"text":"    mut start_position: i64,         // Start position of read"},{"highlight_end":66,"highlight_start":1,"text":"    variant_pos: i64,                // Start position of variant"},{"highlight_end":116,"highlight_start":1,"text":"    flanking_region_length: i64, // Flanking region uptil where base-pair quality of nucleotides need to be checked"},{"highlight_end":49,"highlight_start":1,"text":"    indel_length: i64,           // Indel length"},{"highlight_end":116,"highlight_start":1,"text":"    left_flanking_region_limit: i64, // Left hand region upto where base-pair quality check needs to be carried out"},{"highlight_end":118,"highlight_start":1,"text":"    right_flanking_region_limit: i64, // Right hand region upto where base-pair quality check needs to be carried out"},{"highlight_end":10,"highlight_start":1,"text":") -> bool {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/realign.rs:13:29\n   |\n13 |     quality_score_sequence: &String, // String containing read base pair sequence\n   |                             ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::ptr_arg)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":561,"byte_start":554,"column_end":36,"column_start":29,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":13,"line_start":13,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":36,"highlight_start":29,"text":"    quality_score_sequence: &String, // String containing read base pair sequence"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":561,"byte_start":554,"column_end":36,"column_start":29,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":13,"line_start":13,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":29,"text":"    quality_score_sequence: &String, // String containing read base pair sequence"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n  --> src/realign.rs:14:16\n   |\n14 |     alphabets: &Vec<char>,           // Alphabets from CIGAR sequence\n   |                ^^^^^^^^^^ help: change this to: `&[char]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":633,"byte_start":623,"column_end":26,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":14,"line_start":14,"suggested_replacement":"&[char]","suggestion_applicability":"Unspecified","text":[{"highlight_end":26,"highlight_start":16,"text":"    alphabets: &Vec<char>,           // Alphabets from CIGAR sequence"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":633,"byte_start":623,"column_end":26,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":14,"line_start":14,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":16,"text":"    alphabets: &Vec<char>,           // Alphabets from CIGAR sequence"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n  --> src/realign.rs:15:14\n   |\n15 |     numbers: &Vec<i64>,              // Numbers from CIGAR sequence\n   |              ^^^^^^^^^ help: change this to: `&[i64]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":700,"byte_start":691,"column_end":23,"column_start":14,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":15,"line_start":15,"suggested_replacement":"&[i64]","suggestion_applicability":"Unspecified","text":[{"highlight_end":23,"highlight_start":14,"text":"    numbers: &Vec<i64>,              // Numbers from CIGAR sequence"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":700,"byte_start":691,"column_end":23,"column_start":14,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":15,"line_start":15,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":14,"text":"    numbers: &Vec<i64>,              // Numbers from CIGAR sequence"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n  --> src/realign.rs:26:8\n   |\n26 |     if &alphabets[0].to_string().as_str() == &\"S\" {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\n   = note: `#[warn(clippy::op_ref)]` on by default\nhelp: use the values directly\n   |\n26 -     if &alphabets[0].to_string().as_str() == &\"S\" {\n26 +     if alphabets[0].to_string().as_str() == \"S\" {\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::op_ref)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":1607,"byte_start":1573,"column_end":42,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":26,"line_start":26,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":42,"highlight_start":8,"text":"    if &alphabets[0].to_string().as_str() == &\"S\" {"}]},{"byte_end":1615,"byte_start":1611,"column_end":50,"column_start":46,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":26,"line_start":26,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":50,"highlight_start":46,"text":"    if &alphabets[0].to_string().as_str() == &\"S\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":1615,"byte_start":1573,"column_end":50,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":26,"line_start":26,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":8,"text":"    if &alphabets[0].to_string().as_str() == &\"S\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n  --> src/realign.rs:34:12\n   |\n34 |         if &alphabets[i].to_string().as_str() == &\"H\" {\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n   |\n34 -         if &alphabets[i].to_string().as_str() == &\"H\" {\n34 +         if alphabets[i].to_string().as_str() == \"H\" {\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":2044,"byte_start":2010,"column_end":46,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":34,"line_start":34,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":46,"highlight_start":12,"text":"        if &alphabets[i].to_string().as_str() == &\"H\" {"}]},{"byte_end":2052,"byte_start":2048,"column_end":54,"column_start":50,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":34,"line_start":34,"suggested_replacement":"\"H\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":50,"text":"        if &alphabets[i].to_string().as_str() == &\"H\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":2052,"byte_start":2010,"column_end":54,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":34,"line_start":34,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":12,"text":"        if &alphabets[i].to_string().as_str() == &\"H\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n  --> src/realign.rs:37:19\n   |\n37 |         } else if &alphabets[i].to_string().as_str() == &\"M\"\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n   |\n37 -         } else if &alphabets[i].to_string().as_str() == &\"M\"\n37 +         } else if alphabets[i].to_string().as_str() == \"M\"\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":2161,"byte_start":2127,"column_end":53,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":37,"line_start":37,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":53,"highlight_start":19,"text":"        } else if &alphabets[i].to_string().as_str() == &\"M\""}]},{"byte_end":2169,"byte_start":2165,"column_end":61,"column_start":57,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":37,"line_start":37,"suggested_replacement":"\"M\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":57,"text":"        } else if &alphabets[i].to_string().as_str() == &\"M\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":2169,"byte_start":2127,"column_end":61,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":37,"line_start":37,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":61,"highlight_start":19,"text":"        } else if &alphabets[i].to_string().as_str() == &\"M\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n  --> src/realign.rs:38:16\n   |\n38 |             || &alphabets[i].to_string().as_str() == &\"S\"\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n   |\n38 -             || &alphabets[i].to_string().as_str() == &\"S\"\n38 +             || alphabets[i].to_string().as_str() == \"S\"\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":2219,"byte_start":2185,"column_end":50,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":38,"line_start":38,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":50,"highlight_start":16,"text":"            || &alphabets[i].to_string().as_str() == &\"S\""}]},{"byte_end":2227,"byte_start":2223,"column_end":58,"column_start":54,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":38,"line_start":38,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":54,"text":"            || &alphabets[i].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":2227,"byte_start":2185,"column_end":58,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":38,"line_start":38,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":16,"text":"            || &alphabets[i].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` branch is empty\n  --> src/realign.rs:45:17\n   |\n45 | /                 if left_flanking_region_limit <= current_nucl\n46 | |                     && current_nucl <= right_flanking_region_limit\n47 | |                 {}\n   | |__________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_if\n   = note: `#[warn(clippy::needless_if)]` on by default\nhelp: you can remove it\n   |\n45 ~                 left_flanking_region_limit <= current_nucl\n46 +                     && current_nucl <= right_flanking_region_limit;\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_if","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_if)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"you can remove it","rendered":null,"spans":[{"byte_end":2858,"byte_start":2727,"column_end":19,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":47,"line_start":45,"suggested_replacement":"left_flanking_region_limit <= current_nucl\n                    && current_nucl <= right_flanking_region_limit;","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":17,"text":"                if left_flanking_region_limit <= current_nucl"},{"highlight_end":67,"highlight_start":1,"text":"                    && current_nucl <= right_flanking_region_limit"},{"highlight_end":19,"highlight_start":1,"text":"                {}"}]}]}],"code":{"code":"clippy::needless_if","explanation":null},"level":"warning","message":"this `if` branch is empty","spans":[{"byte_end":2858,"byte_start":2727,"column_end":19,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":47,"line_start":45,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":17,"text":"                if left_flanking_region_limit <= current_nucl"},{"highlight_end":67,"highlight_start":1,"text":"                    && current_nucl <= right_flanking_region_limit"},{"highlight_end":19,"highlight_start":1,"text":"                {}"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n  --> src/realign.rs:54:19\n   |\n54 |         } else if &alphabets[i].to_string().as_str() == &\"D\"\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n   |\n54 -         } else if &alphabets[i].to_string().as_str() == &\"D\"\n54 +         } else if alphabets[i].to_string().as_str() == \"D\"\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":3047,"byte_start":3013,"column_end":53,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":54,"line_start":54,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":53,"highlight_start":19,"text":"        } else if &alphabets[i].to_string().as_str() == &\"D\""}]},{"byte_end":3055,"byte_start":3051,"column_end":61,"column_start":57,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":54,"line_start":54,"suggested_replacement":"\"D\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":57,"text":"        } else if &alphabets[i].to_string().as_str() == &\"D\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":3055,"byte_start":3013,"column_end":61,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":54,"line_start":54,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":61,"highlight_start":19,"text":"        } else if &alphabets[i].to_string().as_str() == &\"D\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n  --> src/realign.rs:55:16\n   |\n55 |             || &alphabets[i].to_string().as_str() == &\"N\"\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n   |\n55 -             || &alphabets[i].to_string().as_str() == &\"N\"\n55 +             || alphabets[i].to_string().as_str() == \"N\"\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":3105,"byte_start":3071,"column_end":50,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":55,"line_start":55,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":50,"highlight_start":16,"text":"            || &alphabets[i].to_string().as_str() == &\"N\""}]},{"byte_end":3113,"byte_start":3109,"column_end":58,"column_start":54,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":55,"line_start":55,"suggested_replacement":"\"N\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":54,"text":"            || &alphabets[i].to_string().as_str() == &\"N\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":3113,"byte_start":3071,"column_end":58,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":55,"line_start":55,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":16,"text":"            || &alphabets[i].to_string().as_str() == &\"N\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n  --> src/realign.rs:58:19\n   |\n58 |         } else if &alphabets[i].to_string().as_str() == &\"I\" {\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n   |\n58 -         } else if &alphabets[i].to_string().as_str() == &\"I\" {\n58 +         } else if alphabets[i].to_string().as_str() == \"I\" {\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":3251,"byte_start":3217,"column_end":53,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":58,"line_start":58,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":53,"highlight_start":19,"text":"        } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]},{"byte_end":3259,"byte_start":3255,"column_end":61,"column_start":57,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":58,"line_start":58,"suggested_replacement":"\"I\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":57,"text":"        } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":3259,"byte_start":3217,"column_end":61,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":58,"line_start":58,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":61,"highlight_start":19,"text":"        } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this function has too many arguments (9/7)\n  --> src/realign.rs:71:1\n   |\n71 | / pub fn realign_reads(\n72 | |     sequences: &String, // Variable contains sequences separated by \"-\" character, the first two sequences contains the ref and alt sequences\n73 | |     start_positions: &String, // Variable contains start position of reads separated by \"-\" character\n74 | |     cigar_sequences: &String, // Variable contains cigar sequences separated by \"-\" character\n...  |\n80 | |     indel_length: i64,       // Indel length\n81 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments","rendered":null,"spans":[]}],"code":{"code":"clippy::too_many_arguments","explanation":null},"level":"warning","message":"this function has too many arguments (9/7)","spans":[{"byte_end":4457,"byte_start":3705,"column_end":2,"column_start":1,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":81,"line_start":71,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":22,"highlight_start":1,"text":"pub fn realign_reads("},{"highlight_end":142,"highlight_start":1,"text":"    sequences: &String, // Variable contains sequences separated by \"-\" character, the first two sequences contains the ref and alt sequences"},{"highlight_end":102,"highlight_start":1,"text":"    start_positions: &String, // Variable contains start position of reads separated by \"-\" character"},{"highlight_end":94,"highlight_start":1,"text":"    cigar_sequences: &String, // Variable contains cigar sequences separated by \"-\" character"},{"highlight_end":101,"highlight_start":1,"text":"    quality_scores: &String, // Variable contains quality scores of reads separated by \"-\" character"},{"highlight_end":49,"highlight_start":1,"text":"    clustalo_path: &String,  // Path to clustalo"},{"highlight_end":69,"highlight_start":1,"text":"    ref_sequence: &String,   // Complete original reference sequence"},{"highlight_end":69,"highlight_start":1,"text":"    alt_sequence: &String,   // Complete original alternate sequence"},{"highlight_end":58,"highlight_start":1,"text":"    variant_pos: i64,        // Original variant position"},{"highlight_end":45,"highlight_start":1,"text":"    indel_length: i64,       // Indel length"},{"highlight_end":2,"highlight_start":1,"text":") {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/realign.rs:72:16\n   |\n72 |     sequences: &String, // Variable contains sequences separated by \"-\" character, the first two sequences contains the ref and alt sequences\n   |                ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":3749,"byte_start":3742,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":72,"line_start":72,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":23,"highlight_start":16,"text":"    sequences: &String, // Variable contains sequences separated by \"-\" character, the first two sequences contains the ref and alt sequences"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":3749,"byte_start":3742,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":72,"line_start":72,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":16,"text":"    sequences: &String, // Variable contains sequences separated by \"-\" character, the first two sequences contains the ref and alt sequences"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/realign.rs:73:22\n   |\n73 |     start_positions: &String, // Variable contains start position of reads separated by \"-\" character\n   |                      ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":3897,"byte_start":3890,"column_end":29,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":73,"line_start":73,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":29,"highlight_start":22,"text":"    start_positions: &String, // Variable contains start position of reads separated by \"-\" character"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":3897,"byte_start":3890,"column_end":29,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":73,"line_start":73,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":22,"text":"    start_positions: &String, // Variable contains start position of reads separated by \"-\" character"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/realign.rs:74:22\n   |\n74 |     cigar_sequences: &String, // Variable contains cigar sequences separated by \"-\" character\n   |                      ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":3999,"byte_start":3992,"column_end":29,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":74,"line_start":74,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":29,"highlight_start":22,"text":"    cigar_sequences: &String, // Variable contains cigar sequences separated by \"-\" character"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":3999,"byte_start":3992,"column_end":29,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":74,"line_start":74,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":22,"text":"    cigar_sequences: &String, // Variable contains cigar sequences separated by \"-\" character"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/realign.rs:75:21\n   |\n75 |     quality_scores: &String, // Variable contains quality scores of reads separated by \"-\" character\n   |                     ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":4092,"byte_start":4085,"column_end":28,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":75,"line_start":75,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":28,"highlight_start":21,"text":"    quality_scores: &String, // Variable contains quality scores of reads separated by \"-\" character"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":4092,"byte_start":4085,"column_end":28,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":75,"line_start":75,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":28,"highlight_start":21,"text":"    quality_scores: &String, // Variable contains quality scores of reads separated by \"-\" character"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/realign.rs:76:20\n   |\n76 |     clustalo_path: &String,  // Path to clustalo\n   |                    ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":4192,"byte_start":4185,"column_end":27,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":76,"line_start":76,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":27,"highlight_start":20,"text":"    clustalo_path: &String,  // Path to clustalo"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":4192,"byte_start":4185,"column_end":27,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":76,"line_start":76,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":20,"text":"    clustalo_path: &String,  // Path to clustalo"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/realign.rs:77:19\n   |\n77 |     ref_sequence: &String,   // Complete original reference sequence\n   |                   ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":4240,"byte_start":4233,"column_end":26,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":77,"line_start":77,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":26,"highlight_start":19,"text":"    ref_sequence: &String,   // Complete original reference sequence"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":4240,"byte_start":4233,"column_end":26,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":77,"line_start":77,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":19,"text":"    ref_sequence: &String,   // Complete original reference sequence"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/realign.rs:78:19\n   |\n78 |     alt_sequence: &String,   // Complete original alternate sequence\n   |                   ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":4309,"byte_start":4302,"column_end":26,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":78,"line_start":78,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":26,"highlight_start":19,"text":"    alt_sequence: &String,   // Complete original alternate sequence"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":4309,"byte_start":4302,"column_end":26,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":78,"line_start":78,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":19,"text":"    alt_sequence: &String,   // Complete original alternate sequence"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:104:36\n    |\n104 |         if alphabets.len() == 1 && &alphabets[0].to_string().as_str() == &\"M\" {\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n104 -         if alphabets.len() == 1 && &alphabets[0].to_string().as_str() == &\"M\" {\n104 +         if alphabets.len() == 1 && alphabets[0].to_string().as_str() == \"M\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":6559,"byte_start":6525,"column_end":70,"column_start":36,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":104,"line_start":104,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":36,"text":"        if alphabets.len() == 1 && &alphabets[0].to_string().as_str() == &\"M\" {"}]},{"byte_end":6567,"byte_start":6563,"column_end":78,"column_start":74,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":104,"line_start":104,"suggested_replacement":"\"M\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":78,"highlight_start":74,"text":"        if alphabets.len() == 1 && &alphabets[0].to_string().as_str() == &\"M\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":6567,"byte_start":6525,"column_end":78,"column_start":36,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":104,"line_start":104,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":78,"highlight_start":36,"text":"        if alphabets.len() == 1 && &alphabets[0].to_string().as_str() == &\"M\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:112:20\n    |\n112 |                 if &alphabets[0].to_string().as_str() == &\"S\"\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n112 -                 if &alphabets[0].to_string().as_str() == &\"S\"\n112 +                 if alphabets[0].to_string().as_str() == \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":7042,"byte_start":7008,"column_end":54,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":112,"line_start":112,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":20,"text":"                if &alphabets[0].to_string().as_str() == &\"S\""}]},{"byte_end":7050,"byte_start":7046,"column_end":62,"column_start":58,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":112,"line_start":112,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":58,"text":"                if &alphabets[0].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":7050,"byte_start":7008,"column_end":62,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":112,"line_start":112,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":20,"text":"                if &alphabets[0].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:113:24\n    |\n113 |                     || &alphabets[0].to_string().as_str() == &\"H\"\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n113 -                     || &alphabets[0].to_string().as_str() == &\"H\"\n113 +                     || alphabets[0].to_string().as_str() == \"H\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":7108,"byte_start":7074,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":113,"line_start":113,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    || &alphabets[0].to_string().as_str() == &\"H\""}]},{"byte_end":7116,"byte_start":7112,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":113,"line_start":113,"suggested_replacement":"\"H\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"                    || &alphabets[0].to_string().as_str() == &\"H\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":7116,"byte_start":7074,"column_end":66,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":113,"line_start":113,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":24,"text":"                    || &alphabets[0].to_string().as_str() == &\"H\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:118:55\n    |\n118 |                 } else if j == alphabets.len() - 1 && &alphabets[j].to_string().as_str() == &\"H\" {\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n118 -                 } else if j == alphabets.len() - 1 && &alphabets[j].to_string().as_str() == &\"H\" {\n118 +                 } else if j == alphabets.len() - 1 && alphabets[j].to_string().as_str() == \"H\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":7455,"byte_start":7421,"column_end":89,"column_start":55,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":118,"line_start":118,"suggested_replacement":"alphabets[j].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":89,"highlight_start":55,"text":"                } else if j == alphabets.len() - 1 && &alphabets[j].to_string().as_str() == &\"H\" {"}]},{"byte_end":7463,"byte_start":7459,"column_end":97,"column_start":93,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":118,"line_start":118,"suggested_replacement":"\"H\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":97,"highlight_start":93,"text":"                } else if j == alphabets.len() - 1 && &alphabets[j].to_string().as_str() == &\"H\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":7463,"byte_start":7421,"column_end":97,"column_start":55,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":118,"line_start":118,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":97,"highlight_start":55,"text":"                } else if j == alphabets.len() - 1 && &alphabets[j].to_string().as_str() == &\"H\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:121:27\n    |\n121 |                 } else if &alphabets[j].to_string().as_str() == &\"N\" {\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n121 -                 } else if &alphabets[j].to_string().as_str() == &\"N\" {\n121 +                 } else if alphabets[j].to_string().as_str() == \"N\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":7615,"byte_start":7581,"column_end":61,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":121,"line_start":121,"suggested_replacement":"alphabets[j].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":27,"text":"                } else if &alphabets[j].to_string().as_str() == &\"N\" {"}]},{"byte_end":7623,"byte_start":7619,"column_end":69,"column_start":65,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":121,"line_start":121,"suggested_replacement":"\"N\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":69,"highlight_start":65,"text":"                } else if &alphabets[j].to_string().as_str() == &\"N\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":7623,"byte_start":7581,"column_end":69,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":121,"line_start":121,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":27,"text":"                } else if &alphabets[j].to_string().as_str() == &\"N\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:134:27\n    |\n134 |                 } else if &alphabets[j].to_string().as_str() == &\"I\"\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n134 -                 } else if &alphabets[j].to_string().as_str() == &\"I\"\n134 +                 } else if alphabets[j].to_string().as_str() == \"I\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":8584,"byte_start":8550,"column_end":61,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":134,"line_start":134,"suggested_replacement":"alphabets[j].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":27,"text":"                } else if &alphabets[j].to_string().as_str() == &\"I\""}]},{"byte_end":8592,"byte_start":8588,"column_end":69,"column_start":65,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":134,"line_start":134,"suggested_replacement":"\"I\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":69,"highlight_start":65,"text":"                } else if &alphabets[j].to_string().as_str() == &\"I\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":8592,"byte_start":8550,"column_end":69,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":134,"line_start":134,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":27,"text":"                } else if &alphabets[j].to_string().as_str() == &\"I\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:135:24\n    |\n135 |                     || &alphabets[j].to_string().as_str() == &\"D\"\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n135 -                     || &alphabets[j].to_string().as_str() == &\"D\"\n135 +                     || alphabets[j].to_string().as_str() == \"D\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":8650,"byte_start":8616,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":135,"line_start":135,"suggested_replacement":"alphabets[j].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    || &alphabets[j].to_string().as_str() == &\"D\""}]},{"byte_end":8658,"byte_start":8654,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":135,"line_start":135,"suggested_replacement":"\"D\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"                    || &alphabets[j].to_string().as_str() == &\"D\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":8658,"byte_start":8616,"column_end":66,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":135,"line_start":135,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":24,"text":"                    || &alphabets[j].to_string().as_str() == &\"D\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this function has too many arguments (8/7)\n   --> src/realign.rs:187:1\n    |\n187 | / pub fn check_read_within_indel_region(\n188 | |     left_most_pos: i64, // Left most pos, contains start_positions_list input for that particular read i.e the nucleotide position from where th...\n189 | |     cigar_sequence: String, // Cigar sequence of that read\n190 | |     indel_starts: &Vec<i64>, // Indel start position\n...   |\n195 | |     read_sequence: String, // Original read sequence\n196 | | ) -> (usize, Vec<i64>, Vec<i64>, Vec<String>, Vec<String>) {\n    | |__________________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments","rendered":null,"spans":[]}],"code":{"code":"clippy::too_many_arguments","explanation":null},"level":"warning","message":"this function has too many arguments (8/7)","spans":[{"byte_end":11986,"byte_start":11322,"column_end":59,"column_start":1,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":196,"line_start":187,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":1,"text":"pub fn check_read_within_indel_region("},{"highlight_end":175,"highlight_start":1,"text":"    left_most_pos: i64, // Left most pos, contains start_positions_list input for that particular read i.e the nucleotide position from where that particular read starts from"},{"highlight_end":59,"highlight_start":1,"text":"    cigar_sequence: String, // Cigar sequence of that read"},{"highlight_end":53,"highlight_start":1,"text":"    indel_starts: &Vec<i64>, // Indel start position"},{"highlight_end":51,"highlight_start":1,"text":"    indel_lengths: &Vec<usize>, // Length of indel"},{"highlight_end":58,"highlight_start":1,"text":"    refalleles: &Vec<&str>, // Length of reference allele"},{"highlight_end":58,"highlight_start":1,"text":"    altalleles: &Vec<&str>, // Length of alternate allele"},{"highlight_end":60,"highlight_start":1,"text":"    strictness: usize,  // Strictness of the indel pipeline"},{"highlight_end":53,"highlight_start":1,"text":"    read_sequence: String, // Original read sequence"},{"highlight_end":59,"highlight_start":1,"text":") -> (usize, Vec<i64>, Vec<i64>, Vec<String>, Vec<String>) {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n   --> src/realign.rs:190:19\n    |\n190 |     indel_starts: &Vec<i64>, // Indel start position\n    |                   ^^^^^^^^^ help: change this to: `&[i64]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":11622,"byte_start":11613,"column_end":28,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":190,"line_start":190,"suggested_replacement":"&[i64]","suggestion_applicability":"Unspecified","text":[{"highlight_end":28,"highlight_start":19,"text":"    indel_starts: &Vec<i64>, // Indel start position"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":11622,"byte_start":11613,"column_end":28,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":190,"line_start":190,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":28,"highlight_start":19,"text":"    indel_starts: &Vec<i64>, // Indel start position"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n   --> src/realign.rs:191:20\n    |\n191 |     indel_lengths: &Vec<usize>, // Length of indel\n    |                    ^^^^^^^^^^^ help: change this to: `&[usize]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":11678,"byte_start":11667,"column_end":31,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":191,"line_start":191,"suggested_replacement":"&[usize]","suggestion_applicability":"Unspecified","text":[{"highlight_end":31,"highlight_start":20,"text":"    indel_lengths: &Vec<usize>, // Length of indel"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":11678,"byte_start":11667,"column_end":31,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":191,"line_start":191,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":20,"text":"    indel_lengths: &Vec<usize>, // Length of indel"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n   --> src/realign.rs:192:17\n    |\n192 |     refalleles: &Vec<&str>, // Length of reference allele\n    |                 ^^^^^^^^^^ help: change this to: `&[&str]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":11725,"byte_start":11715,"column_end":27,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":192,"line_start":192,"suggested_replacement":"&[&str]","suggestion_applicability":"Unspecified","text":[{"highlight_end":27,"highlight_start":17,"text":"    refalleles: &Vec<&str>, // Length of reference allele"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":11725,"byte_start":11715,"column_end":27,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":192,"line_start":192,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":17,"text":"    refalleles: &Vec<&str>, // Length of reference allele"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n   --> src/realign.rs:193:17\n    |\n193 |     altalleles: &Vec<&str>, // Length of alternate allele\n    |                 ^^^^^^^^^^ help: change this to: `&[&str]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":11783,"byte_start":11773,"column_end":27,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":193,"line_start":193,"suggested_replacement":"&[&str]","suggestion_applicability":"Unspecified","text":[{"highlight_end":27,"highlight_start":17,"text":"    altalleles: &Vec<&str>, // Length of alternate allele"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":11783,"byte_start":11773,"column_end":27,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":193,"line_start":193,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":17,"text":"    altalleles: &Vec<&str>, // Length of alternate allele"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:207:8\n    |\n207 |     if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n207 -     if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n207 +     if cigar_sequence == \"*\" || &cigar_sequence == &\"=\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":13489,"byte_start":13474,"column_end":23,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":207,"line_start":207,"suggested_replacement":"cigar_sequence","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":23,"highlight_start":8,"text":"    if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]},{"byte_end":13497,"byte_start":13493,"column_end":31,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":207,"line_start":207,"suggested_replacement":"\"*\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":31,"highlight_start":27,"text":"    if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":13497,"byte_start":13474,"column_end":31,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":207,"line_start":207,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":8,"text":"    if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:207:35\n    |\n207 |     if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n207 -     if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n207 +     if &cigar_sequence == &\"*\" || cigar_sequence == \"=\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":13516,"byte_start":13501,"column_end":50,"column_start":35,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":207,"line_start":207,"suggested_replacement":"cigar_sequence","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":50,"highlight_start":35,"text":"    if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]},{"byte_end":13524,"byte_start":13520,"column_end":58,"column_start":54,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":207,"line_start":207,"suggested_replacement":"\"=\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":54,"text":"    if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":13524,"byte_start":13501,"column_end":58,"column_start":35,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":207,"line_start":207,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":35,"text":"    if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}}
{"reason":"compiler-artifact","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"genesetORA","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/genesetORA.rs","edition":"2018","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/awillems/dev/sjpp/proteinpaint/rust/target/debug/deps/libgenesetORA-22e39a5773af483c.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this function has too many arguments (9/7)\n  --> src/realign.rs:11:1\n   |\n11 | / fn check_base_pair_quality_scores(\n12 | |     // Function that checks for base pair quality score to ensure all reads being aligned have high quality reads near the variant position\n13 | |     quality_score_sequence: &String, // String containing read base pair sequence\n14 | |     alphabets: &Vec<char>,           // Alphabets from CIGAR sequence\n...  |\n21 | |     right_flanking_region_limit: i64, // Right hand region upto where base-pair quality check needs to be carried out\n22 | | ) -> bool {\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n   = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::too_many_arguments)]` on by default","rendered":null,"spans":[]}],"code":{"code":"clippy::too_many_arguments","explanation":null},"level":"warning","message":"this function has too many arguments (9/7)","spans":[{"byte_end":1283,"byte_start":351,"column_end":10,"column_start":1,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":22,"line_start":11,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":1,"text":"fn check_base_pair_quality_scores("},{"highlight_end":140,"highlight_start":1,"text":"    // Function that checks for base pair quality score to ensure all reads being aligned have high quality reads near the variant position"},{"highlight_end":82,"highlight_start":1,"text":"    quality_score_sequence: &String, // String containing read base pair sequence"},{"highlight_end":70,"highlight_start":1,"text":"    alphabets: &Vec<char>,           // Alphabets from CIGAR sequence"},{"highlight_end":68,"highlight_start":1,"text":"    numbers: &Vec<i64>,              // Numbers from CIGAR sequence"},{"highlight_end":63,"highlight_start":1,"text":"    mut start_position: i64,         // Start position of read"},{"highlight_end":66,"highlight_start":1,"text":"    variant_pos: i64,                // Start position of variant"},{"highlight_end":116,"highlight_start":1,"text":"    flanking_region_length: i64, // Flanking region uptil where base-pair quality of nucleotides need to be checked"},{"highlight_end":49,"highlight_start":1,"text":"    indel_length: i64,           // Indel length"},{"highlight_end":116,"highlight_start":1,"text":"    left_flanking_region_limit: i64, // Left hand region upto where base-pair quality check needs to be carried out"},{"highlight_end":118,"highlight_start":1,"text":"    right_flanking_region_limit: i64, // Right hand region upto where base-pair quality check needs to be carried out"},{"highlight_end":10,"highlight_start":1,"text":") -> bool {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/realign.rs:13:29\n   |\n13 |     quality_score_sequence: &String, // String containing read base pair sequence\n   |                             ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::ptr_arg)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":561,"byte_start":554,"column_end":36,"column_start":29,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":13,"line_start":13,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":36,"highlight_start":29,"text":"    quality_score_sequence: &String, // String containing read base pair sequence"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":561,"byte_start":554,"column_end":36,"column_start":29,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":13,"line_start":13,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":29,"text":"    quality_score_sequence: &String, // String containing read base pair sequence"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n  --> src/realign.rs:14:16\n   |\n14 |     alphabets: &Vec<char>,           // Alphabets from CIGAR sequence\n   |                ^^^^^^^^^^ help: change this to: `&[char]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":633,"byte_start":623,"column_end":26,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":14,"line_start":14,"suggested_replacement":"&[char]","suggestion_applicability":"Unspecified","text":[{"highlight_end":26,"highlight_start":16,"text":"    alphabets: &Vec<char>,           // Alphabets from CIGAR sequence"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":633,"byte_start":623,"column_end":26,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":14,"line_start":14,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":16,"text":"    alphabets: &Vec<char>,           // Alphabets from CIGAR sequence"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n  --> src/realign.rs:15:14\n   |\n15 |     numbers: &Vec<i64>,              // Numbers from CIGAR sequence\n   |              ^^^^^^^^^ help: change this to: `&[i64]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":700,"byte_start":691,"column_end":23,"column_start":14,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":15,"line_start":15,"suggested_replacement":"&[i64]","suggestion_applicability":"Unspecified","text":[{"highlight_end":23,"highlight_start":14,"text":"    numbers: &Vec<i64>,              // Numbers from CIGAR sequence"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":700,"byte_start":691,"column_end":23,"column_start":14,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":15,"line_start":15,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":14,"text":"    numbers: &Vec<i64>,              // Numbers from CIGAR sequence"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n  --> src/realign.rs:26:8\n   |\n26 |     if &alphabets[0].to_string().as_str() == &\"S\" {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\n   = note: `#[warn(clippy::op_ref)]` on by default\nhelp: use the values directly\n   |\n26 -     if &alphabets[0].to_string().as_str() == &\"S\" {\n26 +     if alphabets[0].to_string().as_str() == \"S\" {\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::op_ref)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":1607,"byte_start":1573,"column_end":42,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":26,"line_start":26,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":42,"highlight_start":8,"text":"    if &alphabets[0].to_string().as_str() == &\"S\" {"}]},{"byte_end":1615,"byte_start":1611,"column_end":50,"column_start":46,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":26,"line_start":26,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":50,"highlight_start":46,"text":"    if &alphabets[0].to_string().as_str() == &\"S\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":1615,"byte_start":1573,"column_end":50,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":26,"line_start":26,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":8,"text":"    if &alphabets[0].to_string().as_str() == &\"S\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:217:16\n    |\n217 |             if &alphabets[0].to_string().as_str() == &\"S\"\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n217 -             if &alphabets[0].to_string().as_str() == &\"S\"\n217 +             if alphabets[0].to_string().as_str() == \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":14397,"byte_start":14363,"column_end":50,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":217,"line_start":217,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":50,"highlight_start":16,"text":"            if &alphabets[0].to_string().as_str() == &\"S\""}]},{"byte_end":14405,"byte_start":14401,"column_end":58,"column_start":54,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":217,"line_start":217,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":54,"text":"            if &alphabets[0].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":14405,"byte_start":14363,"column_end":58,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":217,"line_start":217,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":16,"text":"            if &alphabets[0].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:218:20\n    |\n218 |                 || &alphabets[0].to_string().as_str() == &\"I\"\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n218 -                 || &alphabets[0].to_string().as_str() == &\"I\"\n218 +                 || alphabets[0].to_string().as_str() == \"I\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":14459,"byte_start":14425,"column_end":54,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":218,"line_start":218,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":20,"text":"                || &alphabets[0].to_string().as_str() == &\"I\""}]},{"byte_end":14467,"byte_start":14463,"column_end":62,"column_start":58,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":218,"line_start":218,"suggested_replacement":"\"I\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":58,"text":"                || &alphabets[0].to_string().as_str() == &\"I\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":14467,"byte_start":14425,"column_end":62,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":218,"line_start":218,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":20,"text":"                || &alphabets[0].to_string().as_str() == &\"I\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: manual implementation of an assign operation\n   --> src/realign.rs:220:17\n    |\n220 | /                 correct_start_position =\n221 | |                     correct_start_position - numbers[0].to_string().parse::<i64>().unwrap();\n    | |___________________________________________________________________________________________^ help: replace it with: `correct_start_position -= numbers[0].to_string().parse::<i64>().unwrap()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n    = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::assign_op_pattern)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":14614,"byte_start":14498,"column_end":92,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":221,"line_start":220,"suggested_replacement":"correct_start_position -= numbers[0].to_string().parse::<i64>().unwrap()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":41,"highlight_start":17,"text":"                correct_start_position ="},{"highlight_end":92,"highlight_start":1,"text":"                    correct_start_position - numbers[0].to_string().parse::<i64>().unwrap();"}]}]}],"code":{"code":"clippy::assign_op_pattern","explanation":null},"level":"warning","message":"manual implementation of an assign operation","spans":[{"byte_end":14614,"byte_start":14498,"column_end":92,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":221,"line_start":220,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":17,"text":"                correct_start_position ="},{"highlight_end":92,"highlight_start":1,"text":"                    correct_start_position - numbers[0].to_string().parse::<i64>().unwrap();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n  --> src/realign.rs:34:12\n   |\n34 |         if &alphabets[i].to_string().as_str() == &\"H\" {\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n   |\n34 -         if &alphabets[i].to_string().as_str() == &\"H\" {\n34 +         if alphabets[i].to_string().as_str() == \"H\" {\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":2044,"byte_start":2010,"column_end":46,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":34,"line_start":34,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":46,"highlight_start":12,"text":"        if &alphabets[i].to_string().as_str() == &\"H\" {"}]},{"byte_end":2052,"byte_start":2048,"column_end":54,"column_start":50,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":34,"line_start":34,"suggested_replacement":"\"H\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":50,"text":"        if &alphabets[i].to_string().as_str() == &\"H\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":2052,"byte_start":2010,"column_end":54,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":34,"line_start":34,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":12,"text":"        if &alphabets[i].to_string().as_str() == &\"H\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:232:20\n    |\n232 |                 if &alphabets[i].to_string().as_str() == &\"H\" { // In case of a hard-clip, the read in the bam file will not contain indel region\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n232 -                 if &alphabets[i].to_string().as_str() == &\"H\" { // In case of a hard-clip, the read in the bam file will not contain indel region\n232 +                 if alphabets[i].to_string().as_str() == \"H\" { // In case of a hard-clip, the read in the bam file will not contain indel region\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":15463,"byte_start":15429,"column_end":54,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":232,"line_start":232,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":20,"text":"                if &alphabets[i].to_string().as_str() == &\"H\" { // In case of a hard-clip, the read in the bam file will not contain indel region"}]},{"byte_end":15471,"byte_start":15467,"column_end":62,"column_start":58,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":232,"line_start":232,"suggested_replacement":"\"H\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":58,"text":"                if &alphabets[i].to_string().as_str() == &\"H\" { // In case of a hard-clip, the read in the bam file will not contain indel region"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":15471,"byte_start":15429,"column_end":62,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":232,"line_start":232,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":20,"text":"                if &alphabets[i].to_string().as_str() == &\"H\" { // In case of a hard-clip, the read in the bam file will not contain indel region"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n  --> src/realign.rs:37:19\n   |\n37 |         } else if &alphabets[i].to_string().as_str() == &\"M\"\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n   |\n37 -         } else if &alphabets[i].to_string().as_str() == &\"M\"\n37 +         } else if alphabets[i].to_string().as_str() == \"M\"\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":2161,"byte_start":2127,"column_end":53,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":37,"line_start":37,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":53,"highlight_start":19,"text":"        } else if &alphabets[i].to_string().as_str() == &\"M\""}]},{"byte_end":2169,"byte_start":2165,"column_end":61,"column_start":57,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":37,"line_start":37,"suggested_replacement":"\"M\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":57,"text":"        } else if &alphabets[i].to_string().as_str() == &\"M\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":2169,"byte_start":2127,"column_end":61,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":37,"line_start":37,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":61,"highlight_start":19,"text":"        } else if &alphabets[i].to_string().as_str() == &\"M\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:233:27\n    |\n233 |                 } else if &alphabets[i].to_string().as_str() == &\"N\" {\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n233 -                 } else if &alphabets[i].to_string().as_str() == &\"N\" {\n233 +                 } else if alphabets[i].to_string().as_str() == \"N\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":15616,"byte_start":15582,"column_end":61,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":233,"line_start":233,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":27,"text":"                } else if &alphabets[i].to_string().as_str() == &\"N\" {"}]},{"byte_end":15624,"byte_start":15620,"column_end":69,"column_start":65,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":233,"line_start":233,"suggested_replacement":"\"N\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":69,"highlight_start":65,"text":"                } else if &alphabets[i].to_string().as_str() == &\"N\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":15624,"byte_start":15582,"column_end":69,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":233,"line_start":233,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":27,"text":"                } else if &alphabets[i].to_string().as_str() == &\"N\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n  --> src/realign.rs:38:16\n   |\n38 |             || &alphabets[i].to_string().as_str() == &\"S\"\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n   |\n38 -             || &alphabets[i].to_string().as_str() == &\"S\"\n38 +             || alphabets[i].to_string().as_str() == \"S\"\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":2219,"byte_start":2185,"column_end":50,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":38,"line_start":38,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":50,"highlight_start":16,"text":"            || &alphabets[i].to_string().as_str() == &\"S\""}]},{"byte_end":2227,"byte_start":2223,"column_end":58,"column_start":54,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":38,"line_start":38,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":54,"text":"            || &alphabets[i].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":2227,"byte_start":2185,"column_end":58,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":38,"line_start":38,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":16,"text":"            || &alphabets[i].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:238:27\n    |\n238 |                 } else if &alphabets[i].to_string().as_str() == &\"I\" {\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n238 -                 } else if &alphabets[i].to_string().as_str() == &\"I\" {\n238 +                 } else if alphabets[i].to_string().as_str() == \"I\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":15952,"byte_start":15918,"column_end":61,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":238,"line_start":238,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":27,"text":"                } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]},{"byte_end":15960,"byte_start":15956,"column_end":69,"column_start":65,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":238,"line_start":238,"suggested_replacement":"\"I\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":69,"highlight_start":65,"text":"                } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":15960,"byte_start":15918,"column_end":69,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":238,"line_start":238,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":27,"text":"                } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` branch is empty\n  --> src/realign.rs:45:17\n   |\n45 | /                 if left_flanking_region_limit <= current_nucl\n46 | |                     && current_nucl <= right_flanking_region_limit\n47 | |                 {}\n   | |__________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_if\n   = note: `#[warn(clippy::needless_if)]` on by default\nhelp: you can remove it\n   |\n45 ~                 left_flanking_region_limit <= current_nucl\n46 +                     && current_nucl <= right_flanking_region_limit;\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_if","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_if)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"you can remove it","rendered":null,"spans":[{"byte_end":2858,"byte_start":2727,"column_end":19,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":47,"line_start":45,"suggested_replacement":"left_flanking_region_limit <= current_nucl\n                    && current_nucl <= right_flanking_region_limit;","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":17,"text":"                if left_flanking_region_limit <= current_nucl"},{"highlight_end":67,"highlight_start":1,"text":"                    && current_nucl <= right_flanking_region_limit"},{"highlight_end":19,"highlight_start":1,"text":"                {}"}]}]}],"code":{"code":"clippy::needless_if","explanation":null},"level":"warning","message":"this `if` branch is empty","spans":[{"byte_end":2858,"byte_start":2727,"column_end":19,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":47,"line_start":45,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":17,"text":"                if left_flanking_region_limit <= current_nucl"},{"highlight_end":67,"highlight_start":1,"text":"                    && current_nucl <= right_flanking_region_limit"},{"highlight_end":19,"highlight_start":1,"text":"                {}"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n  --> src/realign.rs:54:19\n   |\n54 |         } else if &alphabets[i].to_string().as_str() == &\"D\"\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n   |\n54 -         } else if &alphabets[i].to_string().as_str() == &\"D\"\n54 +         } else if alphabets[i].to_string().as_str() == \"D\"\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":3047,"byte_start":3013,"column_end":53,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":54,"line_start":54,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":53,"highlight_start":19,"text":"        } else if &alphabets[i].to_string().as_str() == &\"D\""}]},{"byte_end":3055,"byte_start":3051,"column_end":61,"column_start":57,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":54,"line_start":54,"suggested_replacement":"\"D\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":57,"text":"        } else if &alphabets[i].to_string().as_str() == &\"D\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":3055,"byte_start":3013,"column_end":61,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":54,"line_start":54,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":61,"highlight_start":19,"text":"        } else if &alphabets[i].to_string().as_str() == &\"D\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n  --> src/realign.rs:55:16\n   |\n55 |             || &alphabets[i].to_string().as_str() == &\"N\"\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n   |\n55 -             || &alphabets[i].to_string().as_str() == &\"N\"\n55 +             || alphabets[i].to_string().as_str() == \"N\"\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":3105,"byte_start":3071,"column_end":50,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":55,"line_start":55,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":50,"highlight_start":16,"text":"            || &alphabets[i].to_string().as_str() == &\"N\""}]},{"byte_end":3113,"byte_start":3109,"column_end":58,"column_start":54,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":55,"line_start":55,"suggested_replacement":"\"N\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":54,"text":"            || &alphabets[i].to_string().as_str() == &\"N\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":3113,"byte_start":3071,"column_end":58,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":55,"line_start":55,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":16,"text":"            || &alphabets[i].to_string().as_str() == &\"N\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n  --> src/realign.rs:58:19\n   |\n58 |         } else if &alphabets[i].to_string().as_str() == &\"I\" {\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n   |\n58 -         } else if &alphabets[i].to_string().as_str() == &\"I\" {\n58 +         } else if alphabets[i].to_string().as_str() == \"I\" {\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":3251,"byte_start":3217,"column_end":53,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":58,"line_start":58,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":53,"highlight_start":19,"text":"        } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]},{"byte_end":3259,"byte_start":3255,"column_end":61,"column_start":57,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":58,"line_start":58,"suggested_replacement":"\"I\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":57,"text":"        } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":3259,"byte_start":3217,"column_end":61,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":58,"line_start":58,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":61,"highlight_start":19,"text":"        } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> src/realign.rs:265:16\n    |\n265 |             if strictness >= 0 {\n    |                ^^^^^^^^^^^^^^^\n    |\n    = help: because `0` is the minimum value for this type, this comparison is always true\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons\n    = note: `#[deny(clippy::absurd_extreme_comparisons)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"because `0` is the minimum value for this type, this comparison is always true","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[deny(clippy::absurd_extreme_comparisons)]` on by default","rendered":null,"spans":[]}],"code":{"code":"clippy::absurd_extreme_comparisons","explanation":null},"level":"error","message":"this comparison involving the minimum or maximum element for this type contains a case that is always true or always false","spans":[{"byte_end":17301,"byte_start":17286,"column_end":31,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":265,"line_start":265,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":16,"text":"            if strictness >= 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:329:28\n    |\n329 |                         if &alphabets[i].to_string().as_str() == &\"S\" {\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n329 -                         if &alphabets[i].to_string().as_str() == &\"S\" {\n329 +                         if alphabets[i].to_string().as_str() == \"S\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":21568,"byte_start":21534,"column_end":62,"column_start":28,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":329,"line_start":329,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":28,"text":"                        if &alphabets[i].to_string().as_str() == &\"S\" {"}]},{"byte_end":21576,"byte_start":21572,"column_end":70,"column_start":66,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":329,"line_start":329,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":66,"text":"                        if &alphabets[i].to_string().as_str() == &\"S\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":21576,"byte_start":21534,"column_end":70,"column_start":28,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":329,"line_start":329,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":28,"text":"                        if &alphabets[i].to_string().as_str() == &\"S\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:340:24\n    |\n340 |                     if &alphabets[i].to_string().as_str() != &\"N\" {\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n340 -                     if &alphabets[i].to_string().as_str() != &\"N\" {\n340 +                     if alphabets[i].to_string().as_str() != \"N\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":22151,"byte_start":22117,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":340,"line_start":340,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() != &\"N\" {"}]},{"byte_end":22159,"byte_start":22155,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":340,"line_start":340,"suggested_replacement":"\"N\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"                    if &alphabets[i].to_string().as_str() != &\"N\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":22159,"byte_start":22117,"column_end":66,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":340,"line_start":340,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() != &\"N\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:345:24\n    |\n345 |                     if &alphabets[i].to_string().as_str() == &\"N\" {\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n345 -                     if &alphabets[i].to_string().as_str() == &\"N\" {\n345 +                     if alphabets[i].to_string().as_str() == \"N\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":22382,"byte_start":22348,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":345,"line_start":345,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() == &\"N\" {"}]},{"byte_end":22390,"byte_start":22386,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":345,"line_start":345,"suggested_replacement":"\"N\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"                    if &alphabets[i].to_string().as_str() == &\"N\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":22390,"byte_start":22348,"column_end":66,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":345,"line_start":345,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() == &\"N\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:348:31\n    |\n348 |                     } else if &alphabets[i].to_string().as_str() == &\"I\" {\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n348 -                     } else if &alphabets[i].to_string().as_str() == &\"I\" {\n348 +                     } else if alphabets[i].to_string().as_str() == \"I\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":22591,"byte_start":22557,"column_end":65,"column_start":31,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":348,"line_start":348,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":65,"highlight_start":31,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]},{"byte_end":22599,"byte_start":22595,"column_end":73,"column_start":69,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":348,"line_start":348,"suggested_replacement":"\"I\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":73,"highlight_start":69,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":22599,"byte_start":22557,"column_end":73,"column_start":31,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":348,"line_start":348,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":31,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:351:31\n    |\n351 |                     } else if &alphabets[i].to_string().as_str() == &\"D\" {\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n351 -                     } else if &alphabets[i].to_string().as_str() == &\"D\" {\n351 +                     } else if alphabets[i].to_string().as_str() == \"D\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":22968,"byte_start":22934,"column_end":65,"column_start":31,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":351,"line_start":351,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":65,"highlight_start":31,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"D\" {"}]},{"byte_end":22976,"byte_start":22972,"column_end":73,"column_start":69,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":351,"line_start":351,"suggested_replacement":"\"D\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":73,"highlight_start":69,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"D\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":22976,"byte_start":22934,"column_end":73,"column_start":31,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":351,"line_start":351,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":31,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"D\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:356:31\n    |\n356 |                     } else if &alphabets[i].to_string().as_str() == &\"M\"\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n356 -                     } else if &alphabets[i].to_string().as_str() == &\"M\"\n356 +                     } else if alphabets[i].to_string().as_str() == \"M\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":23462,"byte_start":23428,"column_end":65,"column_start":31,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":356,"line_start":356,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":65,"highlight_start":31,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"M\""}]},{"byte_end":23470,"byte_start":23466,"column_end":73,"column_start":69,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":356,"line_start":356,"suggested_replacement":"\"M\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":73,"highlight_start":69,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"M\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":23470,"byte_start":23428,"column_end":73,"column_start":31,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":356,"line_start":356,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":31,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"M\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this function has too many arguments (9/7)\n  --> src/realign.rs:71:1\n   |\n71 | / pub fn realign_reads(\n72 | |     sequences: &String, // Variable contains sequences separated by \"-\" character, the first two sequences contains the ref and alt sequences\n73 | |     start_positions: &String, // Variable contains start position of reads separated by \"-\" character\n74 | |     cigar_sequences: &String, // Variable contains cigar sequences separated by \"-\" character\n...  |\n80 | |     indel_length: i64,       // Indel length\n81 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments","rendered":null,"spans":[]}],"code":{"code":"clippy::too_many_arguments","explanation":null},"level":"warning","message":"this function has too many arguments (9/7)","spans":[{"byte_end":4457,"byte_start":3705,"column_end":2,"column_start":1,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":81,"line_start":71,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":22,"highlight_start":1,"text":"pub fn realign_reads("},{"highlight_end":142,"highlight_start":1,"text":"    sequences: &String, // Variable contains sequences separated by \"-\" character, the first two sequences contains the ref and alt sequences"},{"highlight_end":102,"highlight_start":1,"text":"    start_positions: &String, // Variable contains start position of reads separated by \"-\" character"},{"highlight_end":94,"highlight_start":1,"text":"    cigar_sequences: &String, // Variable contains cigar sequences separated by \"-\" character"},{"highlight_end":101,"highlight_start":1,"text":"    quality_scores: &String, // Variable contains quality scores of reads separated by \"-\" character"},{"highlight_end":49,"highlight_start":1,"text":"    clustalo_path: &String,  // Path to clustalo"},{"highlight_end":69,"highlight_start":1,"text":"    ref_sequence: &String,   // Complete original reference sequence"},{"highlight_end":69,"highlight_start":1,"text":"    alt_sequence: &String,   // Complete original alternate sequence"},{"highlight_end":58,"highlight_start":1,"text":"    variant_pos: i64,        // Original variant position"},{"highlight_end":45,"highlight_start":1,"text":"    indel_length: i64,       // Indel length"},{"highlight_end":2,"highlight_start":1,"text":") {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:357:28\n    |\n357 |                         || &alphabets[i].to_string().as_str() == &\"S\"\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n357 -                         || &alphabets[i].to_string().as_str() == &\"S\"\n357 +                         || alphabets[i].to_string().as_str() == \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":23532,"byte_start":23498,"column_end":62,"column_start":28,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":357,"line_start":357,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":28,"text":"                        || &alphabets[i].to_string().as_str() == &\"S\""}]},{"byte_end":23540,"byte_start":23536,"column_end":70,"column_start":66,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":357,"line_start":357,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":66,"text":"                        || &alphabets[i].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":23540,"byte_start":23498,"column_end":70,"column_start":28,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":357,"line_start":357,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":28,"text":"                        || &alphabets[i].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/realign.rs:72:16\n   |\n72 |     sequences: &String, // Variable contains sequences separated by \"-\" character, the first two sequences contains the ref and alt sequences\n   |                ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":3749,"byte_start":3742,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":72,"line_start":72,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":23,"highlight_start":16,"text":"    sequences: &String, // Variable contains sequences separated by \"-\" character, the first two sequences contains the ref and alt sequences"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":3749,"byte_start":3742,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":72,"line_start":72,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":16,"text":"    sequences: &String, // Variable contains sequences separated by \"-\" character, the first two sequences contains the ref and alt sequences"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/realign.rs:73:22\n   |\n73 |     start_positions: &String, // Variable contains start position of reads separated by \"-\" character\n   |                      ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":3897,"byte_start":3890,"column_end":29,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":73,"line_start":73,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":29,"highlight_start":22,"text":"    start_positions: &String, // Variable contains start position of reads separated by \"-\" character"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":3897,"byte_start":3890,"column_end":29,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":73,"line_start":73,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":22,"text":"    start_positions: &String, // Variable contains start position of reads separated by \"-\" character"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/realign.rs:74:22\n   |\n74 |     cigar_sequences: &String, // Variable contains cigar sequences separated by \"-\" character\n   |                      ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":3999,"byte_start":3992,"column_end":29,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":74,"line_start":74,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":29,"highlight_start":22,"text":"    cigar_sequences: &String, // Variable contains cigar sequences separated by \"-\" character"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":3999,"byte_start":3992,"column_end":29,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":74,"line_start":74,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":22,"text":"    cigar_sequences: &String, // Variable contains cigar sequences separated by \"-\" character"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:373:24\n    |\n373 |                     if &alphabets[i].to_string().as_str() == &\"N\" {\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n373 -                     if &alphabets[i].to_string().as_str() == &\"N\" {\n373 +                     if alphabets[i].to_string().as_str() == \"N\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":24369,"byte_start":24335,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":373,"line_start":373,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() == &\"N\" {"}]},{"byte_end":24377,"byte_start":24373,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":373,"line_start":373,"suggested_replacement":"\"N\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"                    if &alphabets[i].to_string().as_str() == &\"N\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":24377,"byte_start":24335,"column_end":66,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":373,"line_start":373,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() == &\"N\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/realign.rs:75:21\n   |\n75 |     quality_scores: &String, // Variable contains quality scores of reads separated by \"-\" character\n   |                     ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":4092,"byte_start":4085,"column_end":28,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":75,"line_start":75,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":28,"highlight_start":21,"text":"    quality_scores: &String, // Variable contains quality scores of reads separated by \"-\" character"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":4092,"byte_start":4085,"column_end":28,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":75,"line_start":75,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":28,"highlight_start":21,"text":"    quality_scores: &String, // Variable contains quality scores of reads separated by \"-\" character"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/realign.rs:76:20\n   |\n76 |     clustalo_path: &String,  // Path to clustalo\n   |                    ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":4192,"byte_start":4185,"column_end":27,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":76,"line_start":76,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":27,"highlight_start":20,"text":"    clustalo_path: &String,  // Path to clustalo"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":4192,"byte_start":4185,"column_end":27,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":76,"line_start":76,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":20,"text":"    clustalo_path: &String,  // Path to clustalo"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/realign.rs:77:19\n   |\n77 |     ref_sequence: &String,   // Complete original reference sequence\n   |                   ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":4240,"byte_start":4233,"column_end":26,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":77,"line_start":77,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":26,"highlight_start":19,"text":"    ref_sequence: &String,   // Complete original reference sequence"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":4240,"byte_start":4233,"column_end":26,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":77,"line_start":77,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":19,"text":"    ref_sequence: &String,   // Complete original reference sequence"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/realign.rs:78:19\n   |\n78 |     alt_sequence: &String,   // Complete original alternate sequence\n   |                   ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":4309,"byte_start":4302,"column_end":26,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":78,"line_start":78,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":26,"highlight_start":19,"text":"    alt_sequence: &String,   // Complete original alternate sequence"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":4309,"byte_start":4302,"column_end":26,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":78,"line_start":78,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":19,"text":"    alt_sequence: &String,   // Complete original alternate sequence"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: manual implementation of an assign operation\n   --> src/realign.rs:420:21\n    |\n420 |                     splice_start_pos = splice_start_pos - indel_length as i64;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `splice_start_pos -= indel_length as i64`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":27864,"byte_start":27807,"column_end":78,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":420,"line_start":420,"suggested_replacement":"splice_start_pos -= indel_length as i64","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":78,"highlight_start":21,"text":"                    splice_start_pos = splice_start_pos - indel_length as i64;"}]}]}],"code":{"code":"clippy::assign_op_pattern","explanation":null},"level":"warning","message":"manual implementation of an assign operation","spans":[{"byte_end":27864,"byte_start":27807,"column_end":78,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":420,"line_start":420,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":78,"highlight_start":21,"text":"                    splice_start_pos = splice_start_pos - indel_length as i64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: manual implementation of an assign operation\n   --> src/realign.rs:428:21\n    |\n428 |                     splice_stop_pos = splice_stop_pos + indel_length as i64;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `splice_stop_pos += indel_length as i64`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":28651,"byte_start":28596,"column_end":76,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":428,"line_start":428,"suggested_replacement":"splice_stop_pos += indel_length as i64","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":76,"highlight_start":21,"text":"                    splice_stop_pos = splice_stop_pos + indel_length as i64;"}]}]}],"code":{"code":"clippy::assign_op_pattern","explanation":null},"level":"warning","message":"manual implementation of an assign operation","spans":[{"byte_end":28651,"byte_start":28596,"column_end":76,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":428,"line_start":428,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":76,"highlight_start":21,"text":"                    splice_stop_pos = splice_stop_pos + indel_length as i64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:104:36\n    |\n104 |         if alphabets.len() == 1 && &alphabets[0].to_string().as_str() == &\"M\" {\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n104 -         if alphabets.len() == 1 && &alphabets[0].to_string().as_str() == &\"M\" {\n104 +         if alphabets.len() == 1 && alphabets[0].to_string().as_str() == \"M\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":6559,"byte_start":6525,"column_end":70,"column_start":36,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":104,"line_start":104,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":36,"text":"        if alphabets.len() == 1 && &alphabets[0].to_string().as_str() == &\"M\" {"}]},{"byte_end":6567,"byte_start":6563,"column_end":78,"column_start":74,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":104,"line_start":104,"suggested_replacement":"\"M\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":78,"highlight_start":74,"text":"        if alphabets.len() == 1 && &alphabets[0].to_string().as_str() == &\"M\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":6567,"byte_start":6525,"column_end":78,"column_start":36,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":104,"line_start":104,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":78,"highlight_start":36,"text":"        if alphabets.len() == 1 && &alphabets[0].to_string().as_str() == &\"M\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:436:16\n    |\n436 |             if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n436 -             if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n436 +             if cigar_sequence == \"*\" || &cigar_sequence == &\"=\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":29050,"byte_start":29035,"column_end":31,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":436,"line_start":436,"suggested_replacement":"cigar_sequence","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":31,"highlight_start":16,"text":"            if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]},{"byte_end":29058,"byte_start":29054,"column_end":39,"column_start":35,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":436,"line_start":436,"suggested_replacement":"\"*\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":39,"highlight_start":35,"text":"            if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":29058,"byte_start":29035,"column_end":39,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":436,"line_start":436,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":16,"text":"            if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:436:43\n    |\n436 |             if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n436 -             if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n436 +             if &cigar_sequence == &\"*\" || cigar_sequence == \"=\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":29077,"byte_start":29062,"column_end":58,"column_start":43,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":436,"line_start":436,"suggested_replacement":"cigar_sequence","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":43,"text":"            if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]},{"byte_end":29085,"byte_start":29081,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":436,"line_start":436,"suggested_replacement":"\"=\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"            if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":29085,"byte_start":29062,"column_end":66,"column_start":43,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":436,"line_start":436,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":43,"text":"            if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:112:20\n    |\n112 |                 if &alphabets[0].to_string().as_str() == &\"S\"\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n112 -                 if &alphabets[0].to_string().as_str() == &\"S\"\n112 +                 if alphabets[0].to_string().as_str() == \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":7042,"byte_start":7008,"column_end":54,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":112,"line_start":112,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":20,"text":"                if &alphabets[0].to_string().as_str() == &\"S\""}]},{"byte_end":7050,"byte_start":7046,"column_end":62,"column_start":58,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":112,"line_start":112,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":58,"text":"                if &alphabets[0].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":7050,"byte_start":7008,"column_end":62,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":112,"line_start":112,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":20,"text":"                if &alphabets[0].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:445:24\n    |\n445 |                     if &alphabets[i].to_string().as_str() != &\"H\" {\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n445 -                     if &alphabets[i].to_string().as_str() != &\"H\" {\n445 +                     if alphabets[i].to_string().as_str() != \"H\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":29696,"byte_start":29662,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":445,"line_start":445,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() != &\"H\" {"}]},{"byte_end":29704,"byte_start":29700,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":445,"line_start":445,"suggested_replacement":"\"H\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"                    if &alphabets[i].to_string().as_str() != &\"H\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":29704,"byte_start":29662,"column_end":66,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":445,"line_start":445,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() != &\"H\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:113:24\n    |\n113 |                     || &alphabets[0].to_string().as_str() == &\"H\"\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n113 -                     || &alphabets[0].to_string().as_str() == &\"H\"\n113 +                     || alphabets[0].to_string().as_str() == \"H\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":7108,"byte_start":7074,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":113,"line_start":113,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    || &alphabets[0].to_string().as_str() == &\"H\""}]},{"byte_end":7116,"byte_start":7112,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":113,"line_start":113,"suggested_replacement":"\"H\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"                    || &alphabets[0].to_string().as_str() == &\"H\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":7116,"byte_start":7074,"column_end":66,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":113,"line_start":113,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":24,"text":"                    || &alphabets[0].to_string().as_str() == &\"H\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:118:55\n    |\n118 |                 } else if j == alphabets.len() - 1 && &alphabets[j].to_string().as_str() == &\"H\" {\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n118 -                 } else if j == alphabets.len() - 1 && &alphabets[j].to_string().as_str() == &\"H\" {\n118 +                 } else if j == alphabets.len() - 1 && alphabets[j].to_string().as_str() == \"H\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":7455,"byte_start":7421,"column_end":89,"column_start":55,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":118,"line_start":118,"suggested_replacement":"alphabets[j].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":89,"highlight_start":55,"text":"                } else if j == alphabets.len() - 1 && &alphabets[j].to_string().as_str() == &\"H\" {"}]},{"byte_end":7463,"byte_start":7459,"column_end":97,"column_start":93,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":118,"line_start":118,"suggested_replacement":"\"H\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":97,"highlight_start":93,"text":"                } else if j == alphabets.len() - 1 && &alphabets[j].to_string().as_str() == &\"H\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":7463,"byte_start":7421,"column_end":97,"column_start":55,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":118,"line_start":118,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":97,"highlight_start":55,"text":"                } else if j == alphabets.len() - 1 && &alphabets[j].to_string().as_str() == &\"H\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` has identical blocks\n   --> src/realign.rs:470:17\n    |\n470 | /                 {\n471 | |                     alignment_side = \"right\".to_string();\n...   |\n474 | |                 } else if &alphabets[0].to_string().as_str() == &\"S\"\n    | |_________________^\n    |\nnote: same as this\n   --> src/realign.rs:477:17\n    |\n477 | /                 {\n478 | |                     alignment_side = \"right\".to_string();\n...   |\n481 | |                 } else if splice_freq > 0\n    | |_________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else\n    = note: `#[warn(clippy::if_same_then_else)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"same as this","rendered":null,"spans":[{"byte_end":31976,"byte_start":31698,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":481,"line_start":477,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":17,"text":"                {"},{"highlight_end":58,"highlight_start":1,"text":"                    alignment_side = \"right\".to_string();"},{"highlight_end":112,"highlight_start":1,"text":"                    //read_indel_start = indel_start as usize - correct_end_position as usize + sequence.len();"},{"highlight_end":89,"highlight_start":1,"text":"                    //read_indel_start = correct_end_position as usize - sequence.len();"},{"highlight_end":18,"highlight_start":1,"text":"                } else if splice_freq > 0"}]}]},{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::if_same_then_else)]` on by default","rendered":null,"spans":[]}],"code":{"code":"clippy::if_same_then_else","explanation":null},"level":"warning","message":"this `if` has identical blocks","spans":[{"byte_end":31498,"byte_start":31220,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":474,"line_start":470,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":17,"text":"                {"},{"highlight_end":58,"highlight_start":1,"text":"                    alignment_side = \"right\".to_string();"},{"highlight_end":112,"highlight_start":1,"text":"                    //read_indel_start = indel_start as usize - correct_end_position as usize + sequence.len();"},{"highlight_end":89,"highlight_start":1,"text":"                    //read_indel_start = correct_end_position as usize - sequence.len();"},{"highlight_end":18,"highlight_start":1,"text":"                } else if &alphabets[0].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` has identical blocks\n   --> src/realign.rs:477:17\n    |\n477 | /                 {\n478 | |                     alignment_side = \"right\".to_string();\n...   |\n481 | |                 } else if splice_freq > 0\n    | |_________________^\n    |\nnote: same as this\n   --> src/realign.rs:484:17\n    |\n484 | /                 {\n485 | |                     alignment_side = \"right\".to_string();\n...   |\n488 | |                 } else if &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\"\n    | |_________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"same as this","rendered":null,"spans":[{"byte_end":32434,"byte_start":32156,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":488,"line_start":484,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":17,"text":"                {"},{"highlight_end":58,"highlight_start":1,"text":"                    alignment_side = \"right\".to_string();"},{"highlight_end":112,"highlight_start":1,"text":"                    //read_indel_start = indel_start as usize - correct_end_position as usize + sequence.len();"},{"highlight_end":89,"highlight_start":1,"text":"                    //read_indel_start = correct_end_position as usize - sequence.len();"},{"highlight_end":18,"highlight_start":1,"text":"                } else if &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\""}]}]},{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else","rendered":null,"spans":[]}],"code":{"code":"clippy::if_same_then_else","explanation":null},"level":"warning","message":"this `if` has identical blocks","spans":[{"byte_end":31976,"byte_start":31698,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":481,"line_start":477,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":17,"text":"                {"},{"highlight_end":58,"highlight_start":1,"text":"                    alignment_side = \"right\".to_string();"},{"highlight_end":112,"highlight_start":1,"text":"                    //read_indel_start = indel_start as usize - correct_end_position as usize + sequence.len();"},{"highlight_end":89,"highlight_start":1,"text":"                    //read_indel_start = correct_end_position as usize - sequence.len();"},{"highlight_end":18,"highlight_start":1,"text":"                } else if splice_freq > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` has identical blocks\n   --> src/realign.rs:496:17\n    |\n496 | /                 {\n497 | |                     alignment_side = \"right\".to_string();\n...   |\n500 | |                 } else if correct_start_position + alignment_offset > indel_start\n    | |_________________^\n    |\nnote: same as this\n   --> src/realign.rs:502:17\n    |\n502 | /                 {\n503 | |                     alignment_side = \"right\".to_string();\n...   |\n506 | |                 } else if (indel_start - correct_start_position).abs()\n    | |_________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"same as this","rendered":null,"spans":[{"byte_end":33631,"byte_start":33353,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":506,"line_start":502,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":17,"text":"                {"},{"highlight_end":58,"highlight_start":1,"text":"                    alignment_side = \"right\".to_string();"},{"highlight_end":112,"highlight_start":1,"text":"                    //read_indel_start = indel_start as usize - correct_end_position as usize + sequence.len();"},{"highlight_end":89,"highlight_start":1,"text":"                    //read_indel_start = correct_end_position as usize - sequence.len();"},{"highlight_end":18,"highlight_start":1,"text":"                } else if (indel_start - correct_start_position).abs()"}]}]},{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else","rendered":null,"spans":[]}],"code":{"code":"clippy::if_same_then_else","explanation":null},"level":"warning","message":"this `if` has identical blocks","spans":[{"byte_end":33198,"byte_start":32920,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":500,"line_start":496,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":17,"text":"                {"},{"highlight_end":58,"highlight_start":1,"text":"                    alignment_side = \"right\".to_string();"},{"highlight_end":112,"highlight_start":1,"text":"                    //read_indel_start = indel_start as usize - correct_end_position as usize + sequence.len();"},{"highlight_end":89,"highlight_start":1,"text":"                    //read_indel_start = correct_end_position as usize - sequence.len();"},{"highlight_end":18,"highlight_start":1,"text":"                } else if correct_start_position + alignment_offset > indel_start"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:121:27\n    |\n121 |                 } else if &alphabets[j].to_string().as_str() == &\"N\" {\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n121 -                 } else if &alphabets[j].to_string().as_str() == &\"N\" {\n121 +                 } else if alphabets[j].to_string().as_str() == \"N\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":7615,"byte_start":7581,"column_end":61,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":121,"line_start":121,"suggested_replacement":"alphabets[j].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":27,"text":"                } else if &alphabets[j].to_string().as_str() == &\"N\" {"}]},{"byte_end":7623,"byte_start":7619,"column_end":69,"column_start":65,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":121,"line_start":121,"suggested_replacement":"\"N\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":69,"highlight_start":65,"text":"                } else if &alphabets[j].to_string().as_str() == &\"N\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":7623,"byte_start":7581,"column_end":69,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":121,"line_start":121,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":27,"text":"                } else if &alphabets[j].to_string().as_str() == &\"N\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:456:21\n    |\n456 |                 if (&alphabets[0].to_string().as_str() == &\"S\"\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n456 -                 if (&alphabets[0].to_string().as_str() == &\"S\"\n456 +                 if (alphabets[0].to_string().as_str() == \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":30455,"byte_start":30421,"column_end":55,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":456,"line_start":456,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":55,"highlight_start":21,"text":"                if (&alphabets[0].to_string().as_str() == &\"S\""}]},{"byte_end":30463,"byte_start":30459,"column_end":63,"column_start":59,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":456,"line_start":456,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":63,"highlight_start":59,"text":"                if (&alphabets[0].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":30463,"byte_start":30421,"column_end":63,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":456,"line_start":456,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":63,"highlight_start":21,"text":"                if (&alphabets[0].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:457:24\n    |\n457 |                     && &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\")\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n457 -                     && &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\")\n457 +                     && alphabets[alphabets.len() - 1].to_string().as_str() == \"S\")\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":30539,"byte_start":30487,"column_end":76,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":457,"line_start":457,"suggested_replacement":"alphabets[alphabets.len() - 1].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":76,"highlight_start":24,"text":"                    && &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\")"}]},{"byte_end":30547,"byte_start":30543,"column_end":84,"column_start":80,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":457,"line_start":457,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":84,"highlight_start":80,"text":"                    && &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\")"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":30547,"byte_start":30487,"column_end":84,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":457,"line_start":457,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":84,"highlight_start":24,"text":"                    && &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\")"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:134:27\n    |\n134 |                 } else if &alphabets[j].to_string().as_str() == &\"I\"\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n134 -                 } else if &alphabets[j].to_string().as_str() == &\"I\"\n134 +                 } else if alphabets[j].to_string().as_str() == \"I\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":8584,"byte_start":8550,"column_end":61,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":134,"line_start":134,"suggested_replacement":"alphabets[j].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":27,"text":"                } else if &alphabets[j].to_string().as_str() == &\"I\""}]},{"byte_end":8592,"byte_start":8588,"column_end":69,"column_start":65,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":134,"line_start":134,"suggested_replacement":"\"I\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":69,"highlight_start":65,"text":"                } else if &alphabets[j].to_string().as_str() == &\"I\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":8592,"byte_start":8550,"column_end":69,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":134,"line_start":134,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":27,"text":"                } else if &alphabets[j].to_string().as_str() == &\"I\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:135:24\n    |\n135 |                     || &alphabets[j].to_string().as_str() == &\"D\"\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n135 -                     || &alphabets[j].to_string().as_str() == &\"D\"\n135 +                     || alphabets[j].to_string().as_str() == \"D\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":8650,"byte_start":8616,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":135,"line_start":135,"suggested_replacement":"alphabets[j].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    || &alphabets[j].to_string().as_str() == &\"D\""}]},{"byte_end":8658,"byte_start":8654,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":135,"line_start":135,"suggested_replacement":"\"D\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"                    || &alphabets[j].to_string().as_str() == &\"D\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":8658,"byte_start":8616,"column_end":66,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":135,"line_start":135,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":24,"text":"                    || &alphabets[j].to_string().as_str() == &\"D\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:467:27\n    |\n467 |                 } else if &alphabets[0].to_string().as_str() == &\"S\"\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n467 -                 } else if &alphabets[0].to_string().as_str() == &\"S\"\n467 +                 } else if alphabets[0].to_string().as_str() == \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":31063,"byte_start":31029,"column_end":61,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":467,"line_start":467,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":27,"text":"                } else if &alphabets[0].to_string().as_str() == &\"S\""}]},{"byte_end":31071,"byte_start":31067,"column_end":69,"column_start":65,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":467,"line_start":467,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":69,"highlight_start":65,"text":"                } else if &alphabets[0].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":31071,"byte_start":31029,"column_end":69,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":467,"line_start":467,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":27,"text":"                } else if &alphabets[0].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:474:27\n    |\n474 |                 } else if &alphabets[0].to_string().as_str() == &\"S\"\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n474 -                 } else if &alphabets[0].to_string().as_str() == &\"S\"\n474 +                 } else if alphabets[0].to_string().as_str() == \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":31541,"byte_start":31507,"column_end":61,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":474,"line_start":474,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":27,"text":"                } else if &alphabets[0].to_string().as_str() == &\"S\""}]},{"byte_end":31549,"byte_start":31545,"column_end":69,"column_start":65,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":474,"line_start":474,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":69,"highlight_start":65,"text":"                } else if &alphabets[0].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":31549,"byte_start":31507,"column_end":69,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":474,"line_start":474,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":27,"text":"                } else if &alphabets[0].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:488:27\n    |\n488 |                 } else if &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\"\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n488 -                 } else if &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\"\n488 +                 } else if alphabets[alphabets.len() - 1].to_string().as_str() == \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":32495,"byte_start":32443,"column_end":79,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":488,"line_start":488,"suggested_replacement":"alphabets[alphabets.len() - 1].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":79,"highlight_start":27,"text":"                } else if &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\""}]},{"byte_end":32503,"byte_start":32499,"column_end":87,"column_start":83,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":488,"line_start":488,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":83,"text":"                } else if &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":32503,"byte_start":32443,"column_end":87,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":488,"line_start":488,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":27,"text":"                } else if &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:490:24\n    |\n490 |                     && &alphabets[0].to_string().as_str() != &\"S\"\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n490 -                     && &alphabets[0].to_string().as_str() != &\"S\"\n490 +                     && alphabets[0].to_string().as_str() != \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":32601,"byte_start":32567,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":490,"line_start":490,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    && &alphabets[0].to_string().as_str() != &\"S\""}]},{"byte_end":32609,"byte_start":32605,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":490,"line_start":490,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"                    && &alphabets[0].to_string().as_str() != &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":32609,"byte_start":32567,"column_end":66,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":490,"line_start":490,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":24,"text":"                    && &alphabets[0].to_string().as_str() != &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n   --> src/realign.rs:546:31\n    |\n546 | pub fn parse_cigar(cigar_seq: &String) -> (Vec<char>, Vec<i64>) {\n    |                               ^^^^^^^ help: change this to: `&str`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":35305,"byte_start":35298,"column_end":38,"column_start":31,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":546,"line_start":546,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":38,"highlight_start":31,"text":"pub fn parse_cigar(cigar_seq: &String) -> (Vec<char>, Vec<i64>) {"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":35305,"byte_start":35298,"column_end":38,"column_start":31,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":546,"line_start":546,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":31,"text":"pub fn parse_cigar(cigar_seq: &String) -> (Vec<char>, Vec<i64>) {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is only used to index `sequence_vector`\n   --> src/realign.rs:552:14\n    |\n552 |     for i in 0..sequence_vector.len() {\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n552 -     for i in 0..sequence_vector.len() {\n552 +     for <item> in &sequence_vector {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_range_loop)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":35637,"byte_start":35636,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":552,"line_start":552,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":10,"highlight_start":9,"text":"    for i in 0..sequence_vector.len() {"}]},{"byte_end":35665,"byte_start":35641,"column_end":38,"column_start":14,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":552,"line_start":552,"suggested_replacement":"&sequence_vector","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":38,"highlight_start":14,"text":"    for i in 0..sequence_vector.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is only used to index `sequence_vector`","spans":[{"byte_end":35665,"byte_start":35641,"column_end":38,"column_start":14,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":552,"line_start":552,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":14,"text":"    for i in 0..sequence_vector.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/realign.rs:553:12\n    |\n553 |         if sequence_vector[i].is_alphabetic() == true {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `sequence_vector[i].is_alphabetic()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n    = note: `#[warn(clippy::bool_comparison)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::bool_comparison)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":35721,"byte_start":35679,"column_end":54,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":553,"line_start":553,"suggested_replacement":"sequence_vector[i].is_alphabetic()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":12,"text":"        if sequence_vector[i].is_alphabetic() == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":35721,"byte_start":35679,"column_end":54,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":553,"line_start":553,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":12,"text":"        if sequence_vector[i].is_alphabetic() == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this function has too many arguments (8/7)\n   --> src/realign.rs:187:1\n    |\n187 | / pub fn check_read_within_indel_region(\n188 | |     left_most_pos: i64, // Left most pos, contains start_positions_list input for that particular read i.e the nucleotide position from where th...\n189 | |     cigar_sequence: String, // Cigar sequence of that read\n190 | |     indel_starts: &Vec<i64>, // Indel start position\n...   |\n195 | |     read_sequence: String, // Original read sequence\n196 | | ) -> (usize, Vec<i64>, Vec<i64>, Vec<String>, Vec<String>) {\n    | |__________________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments","rendered":null,"spans":[]}],"code":{"code":"clippy::too_many_arguments","explanation":null},"level":"warning","message":"this function has too many arguments (8/7)","spans":[{"byte_end":11986,"byte_start":11322,"column_end":59,"column_start":1,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":196,"line_start":187,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":1,"text":"pub fn check_read_within_indel_region("},{"highlight_end":175,"highlight_start":1,"text":"    left_most_pos: i64, // Left most pos, contains start_positions_list input for that particular read i.e the nucleotide position from where that particular read starts from"},{"highlight_end":59,"highlight_start":1,"text":"    cigar_sequence: String, // Cigar sequence of that read"},{"highlight_end":53,"highlight_start":1,"text":"    indel_starts: &Vec<i64>, // Indel start position"},{"highlight_end":51,"highlight_start":1,"text":"    indel_lengths: &Vec<usize>, // Length of indel"},{"highlight_end":58,"highlight_start":1,"text":"    refalleles: &Vec<&str>, // Length of reference allele"},{"highlight_end":58,"highlight_start":1,"text":"    altalleles: &Vec<&str>, // Length of alternate allele"},{"highlight_end":60,"highlight_start":1,"text":"    strictness: usize,  // Strictness of the indel pipeline"},{"highlight_end":53,"highlight_start":1,"text":"    read_sequence: String, // Original read sequence"},{"highlight_end":59,"highlight_start":1,"text":") -> (usize, Vec<i64>, Vec<i64>, Vec<String>, Vec<String>) {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n   --> src/realign.rs:190:19\n    |\n190 |     indel_starts: &Vec<i64>, // Indel start position\n    |                   ^^^^^^^^^ help: change this to: `&[i64]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":11622,"byte_start":11613,"column_end":28,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":190,"line_start":190,"suggested_replacement":"&[i64]","suggestion_applicability":"Unspecified","text":[{"highlight_end":28,"highlight_start":19,"text":"    indel_starts: &Vec<i64>, // Indel start position"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":11622,"byte_start":11613,"column_end":28,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":190,"line_start":190,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":28,"highlight_start":19,"text":"    indel_starts: &Vec<i64>, // Indel start position"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n   --> src/realign.rs:191:20\n    |\n191 |     indel_lengths: &Vec<usize>, // Length of indel\n    |                    ^^^^^^^^^^^ help: change this to: `&[usize]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":11678,"byte_start":11667,"column_end":31,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":191,"line_start":191,"suggested_replacement":"&[usize]","suggestion_applicability":"Unspecified","text":[{"highlight_end":31,"highlight_start":20,"text":"    indel_lengths: &Vec<usize>, // Length of indel"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":11678,"byte_start":11667,"column_end":31,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":191,"line_start":191,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":20,"text":"    indel_lengths: &Vec<usize>, // Length of indel"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n   --> src/realign.rs:192:17\n    |\n192 |     refalleles: &Vec<&str>, // Length of reference allele\n    |                 ^^^^^^^^^^ help: change this to: `&[&str]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":11725,"byte_start":11715,"column_end":27,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":192,"line_start":192,"suggested_replacement":"&[&str]","suggestion_applicability":"Unspecified","text":[{"highlight_end":27,"highlight_start":17,"text":"    refalleles: &Vec<&str>, // Length of reference allele"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":11725,"byte_start":11715,"column_end":27,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":192,"line_start":192,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":17,"text":"    refalleles: &Vec<&str>, // Length of reference allele"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n   --> src/realign.rs:193:17\n    |\n193 |     altalleles: &Vec<&str>, // Length of alternate allele\n    |                 ^^^^^^^^^^ help: change this to: `&[&str]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":11783,"byte_start":11773,"column_end":27,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":193,"line_start":193,"suggested_replacement":"&[&str]","suggestion_applicability":"Unspecified","text":[{"highlight_end":27,"highlight_start":17,"text":"    altalleles: &Vec<&str>, // Length of alternate allele"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":11783,"byte_start":11773,"column_end":27,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":193,"line_start":193,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":17,"text":"    altalleles: &Vec<&str>, // Length of alternate allele"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:207:8\n    |\n207 |     if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n207 -     if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n207 +     if cigar_sequence == \"*\" || &cigar_sequence == &\"=\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":13489,"byte_start":13474,"column_end":23,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":207,"line_start":207,"suggested_replacement":"cigar_sequence","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":23,"highlight_start":8,"text":"    if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]},{"byte_end":13497,"byte_start":13493,"column_end":31,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":207,"line_start":207,"suggested_replacement":"\"*\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":31,"highlight_start":27,"text":"    if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":13497,"byte_start":13474,"column_end":31,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":207,"line_start":207,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":8,"text":"    if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:207:35\n    |\n207 |     if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n207 -     if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n207 +     if &cigar_sequence == &\"*\" || cigar_sequence == \"=\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":13516,"byte_start":13501,"column_end":50,"column_start":35,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":207,"line_start":207,"suggested_replacement":"cigar_sequence","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":50,"highlight_start":35,"text":"    if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]},{"byte_end":13524,"byte_start":13520,"column_end":58,"column_start":54,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":207,"line_start":207,"suggested_replacement":"\"=\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":54,"text":"    if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":13524,"byte_start":13501,"column_end":58,"column_start":35,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":207,"line_start":207,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":35,"text":"    if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:217:16\n    |\n217 |             if &alphabets[0].to_string().as_str() == &\"S\"\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n217 -             if &alphabets[0].to_string().as_str() == &\"S\"\n217 +             if alphabets[0].to_string().as_str() == \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":14397,"byte_start":14363,"column_end":50,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":217,"line_start":217,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":50,"highlight_start":16,"text":"            if &alphabets[0].to_string().as_str() == &\"S\""}]},{"byte_end":14405,"byte_start":14401,"column_end":58,"column_start":54,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":217,"line_start":217,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":54,"text":"            if &alphabets[0].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":14405,"byte_start":14363,"column_end":58,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":217,"line_start":217,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":16,"text":"            if &alphabets[0].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:218:20\n    |\n218 |                 || &alphabets[0].to_string().as_str() == &\"I\"\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n218 -                 || &alphabets[0].to_string().as_str() == &\"I\"\n218 +                 || alphabets[0].to_string().as_str() == \"I\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":14459,"byte_start":14425,"column_end":54,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":218,"line_start":218,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":20,"text":"                || &alphabets[0].to_string().as_str() == &\"I\""}]},{"byte_end":14467,"byte_start":14463,"column_end":62,"column_start":58,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":218,"line_start":218,"suggested_replacement":"\"I\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":58,"text":"                || &alphabets[0].to_string().as_str() == &\"I\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":14467,"byte_start":14425,"column_end":62,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":218,"line_start":218,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":20,"text":"                || &alphabets[0].to_string().as_str() == &\"I\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: manual implementation of an assign operation\n   --> src/realign.rs:220:17\n    |\n220 | /                 correct_start_position =\n221 | |                     correct_start_position - numbers[0].to_string().parse::<i64>().unwrap();\n    | |___________________________________________________________________________________________^ help: replace it with: `correct_start_position -= numbers[0].to_string().parse::<i64>().unwrap()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n    = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::assign_op_pattern)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":14614,"byte_start":14498,"column_end":92,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":221,"line_start":220,"suggested_replacement":"correct_start_position -= numbers[0].to_string().parse::<i64>().unwrap()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":41,"highlight_start":17,"text":"                correct_start_position ="},{"highlight_end":92,"highlight_start":1,"text":"                    correct_start_position - numbers[0].to_string().parse::<i64>().unwrap();"}]}]}],"code":{"code":"clippy::assign_op_pattern","explanation":null},"level":"warning","message":"manual implementation of an assign operation","spans":[{"byte_end":14614,"byte_start":14498,"column_end":92,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":221,"line_start":220,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":17,"text":"                correct_start_position ="},{"highlight_end":92,"highlight_start":1,"text":"                    correct_start_position - numbers[0].to_string().parse::<i64>().unwrap();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:232:20\n    |\n232 |                 if &alphabets[i].to_string().as_str() == &\"H\" { // In case of a hard-clip, the read in the bam file will not contain indel region\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n232 -                 if &alphabets[i].to_string().as_str() == &\"H\" { // In case of a hard-clip, the read in the bam file will not contain indel region\n232 +                 if alphabets[i].to_string().as_str() == \"H\" { // In case of a hard-clip, the read in the bam file will not contain indel region\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":15463,"byte_start":15429,"column_end":54,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":232,"line_start":232,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":20,"text":"                if &alphabets[i].to_string().as_str() == &\"H\" { // In case of a hard-clip, the read in the bam file will not contain indel region"}]},{"byte_end":15471,"byte_start":15467,"column_end":62,"column_start":58,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":232,"line_start":232,"suggested_replacement":"\"H\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":58,"text":"                if &alphabets[i].to_string().as_str() == &\"H\" { // In case of a hard-clip, the read in the bam file will not contain indel region"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":15471,"byte_start":15429,"column_end":62,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":232,"line_start":232,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":20,"text":"                if &alphabets[i].to_string().as_str() == &\"H\" { // In case of a hard-clip, the read in the bam file will not contain indel region"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:233:27\n    |\n233 |                 } else if &alphabets[i].to_string().as_str() == &\"N\" {\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n233 -                 } else if &alphabets[i].to_string().as_str() == &\"N\" {\n233 +                 } else if alphabets[i].to_string().as_str() == \"N\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":15616,"byte_start":15582,"column_end":61,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":233,"line_start":233,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":27,"text":"                } else if &alphabets[i].to_string().as_str() == &\"N\" {"}]},{"byte_end":15624,"byte_start":15620,"column_end":69,"column_start":65,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":233,"line_start":233,"suggested_replacement":"\"N\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":69,"highlight_start":65,"text":"                } else if &alphabets[i].to_string().as_str() == &\"N\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":15624,"byte_start":15582,"column_end":69,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":233,"line_start":233,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":27,"text":"                } else if &alphabets[i].to_string().as_str() == &\"N\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:238:27\n    |\n238 |                 } else if &alphabets[i].to_string().as_str() == &\"I\" {\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n238 -                 } else if &alphabets[i].to_string().as_str() == &\"I\" {\n238 +                 } else if alphabets[i].to_string().as_str() == \"I\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":15952,"byte_start":15918,"column_end":61,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":238,"line_start":238,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":27,"text":"                } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]},{"byte_end":15960,"byte_start":15956,"column_end":69,"column_start":65,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":238,"line_start":238,"suggested_replacement":"\"I\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":69,"highlight_start":65,"text":"                } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":15960,"byte_start":15918,"column_end":69,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":238,"line_start":238,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":27,"text":"                } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> src/realign.rs:265:16\n    |\n265 |             if strictness >= 0 {\n    |                ^^^^^^^^^^^^^^^\n    |\n    = help: because `0` is the minimum value for this type, this comparison is always true\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons\n    = note: `#[deny(clippy::absurd_extreme_comparisons)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"because `0` is the minimum value for this type, this comparison is always true","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[deny(clippy::absurd_extreme_comparisons)]` on by default","rendered":null,"spans":[]}],"code":{"code":"clippy::absurd_extreme_comparisons","explanation":null},"level":"error","message":"this comparison involving the minimum or maximum element for this type contains a case that is always true or always false","spans":[{"byte_end":17301,"byte_start":17286,"column_end":31,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":265,"line_start":265,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":16,"text":"            if strictness >= 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n   --> src/realign.rs:565:12\n    |\n565 |     q_seq: &String,\n    |            ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\nhelp: change this to\n    |\n565 ~     q_seq: &str,\n566 |     align: &String,\n...\n727 |\n728 ~     let q_seq_original = q_seq.to_owned();\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":36051,"byte_start":36044,"column_end":19,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":565,"line_start":565,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":19,"highlight_start":12,"text":"    q_seq: &String,"}]},{"byte_end":43982,"byte_start":43969,"column_end":39,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":728,"line_start":728,"suggested_replacement":"q_seq.to_owned()","suggestion_applicability":"Unspecified","text":[{"highlight_end":39,"highlight_start":26,"text":"    let q_seq_original = q_seq.clone();"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":36051,"byte_start":36044,"column_end":19,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":565,"line_start":565,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":12,"text":"    q_seq: &String,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n   --> src/realign.rs:566:12\n    |\n566 |     align: &String,\n    |            ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\nhelp: change this to\n    |\n566 ~     align: &str,\n567 |     r_seq: &String,\n...\n728 |     let q_seq_original = q_seq.clone();\n729 ~     let align_original = align.to_owned();\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":36071,"byte_start":36064,"column_end":19,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":566,"line_start":566,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":19,"highlight_start":12,"text":"    align: &String,"}]},{"byte_end":44022,"byte_start":44009,"column_end":39,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":729,"line_start":729,"suggested_replacement":"align.to_owned()","suggestion_applicability":"Unspecified","text":[{"highlight_end":39,"highlight_start":26,"text":"    let align_original = align.clone();"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":36071,"byte_start":36064,"column_end":19,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":566,"line_start":566,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":12,"text":"    align: &String,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n   --> src/realign.rs:567:12\n    |\n567 |     r_seq: &String,\n    |            ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\nhelp: change this to\n    |\n567 ~     r_seq: &str,\n568 | ) -> (String, String, String) {\n...\n729 |     let align_original = align.clone();\n730 ~     let r_seq_original = r_seq.to_owned();\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":36091,"byte_start":36084,"column_end":19,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":567,"line_start":567,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":19,"highlight_start":12,"text":"    r_seq: &String,"}]},{"byte_end":44062,"byte_start":44049,"column_end":39,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":730,"line_start":730,"suggested_replacement":"r_seq.to_owned()","suggestion_applicability":"Unspecified","text":[{"highlight_end":39,"highlight_start":26,"text":"    let r_seq_original = r_seq.clone();"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":36091,"byte_start":36084,"column_end":19,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":567,"line_start":567,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":12,"text":"    r_seq: &String,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:329:28\n    |\n329 |                         if &alphabets[i].to_string().as_str() == &\"S\" {\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n329 -                         if &alphabets[i].to_string().as_str() == &\"S\" {\n329 +                         if alphabets[i].to_string().as_str() == \"S\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":21568,"byte_start":21534,"column_end":62,"column_start":28,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":329,"line_start":329,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":28,"text":"                        if &alphabets[i].to_string().as_str() == &\"S\" {"}]},{"byte_end":21576,"byte_start":21572,"column_end":70,"column_start":66,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":329,"line_start":329,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":66,"text":"                        if &alphabets[i].to_string().as_str() == &\"S\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":21576,"byte_start":21534,"column_end":70,"column_start":28,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":329,"line_start":329,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":28,"text":"                        if &alphabets[i].to_string().as_str() == &\"S\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:340:24\n    |\n340 |                     if &alphabets[i].to_string().as_str() != &\"N\" {\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n340 -                     if &alphabets[i].to_string().as_str() != &\"N\" {\n340 +                     if alphabets[i].to_string().as_str() != \"N\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":22151,"byte_start":22117,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":340,"line_start":340,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() != &\"N\" {"}]},{"byte_end":22159,"byte_start":22155,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":340,"line_start":340,"suggested_replacement":"\"N\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"                    if &alphabets[i].to_string().as_str() != &\"N\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":22159,"byte_start":22117,"column_end":66,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":340,"line_start":340,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() != &\"N\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:587:12\n    |\n587 |         if &align_chars[j].to_string() == &\"|\"\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n587 -         if &align_chars[j].to_string() == &\"|\"\n587 +         if align_chars[j].to_string() == \"|\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":37096,"byte_start":37069,"column_end":39,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":587,"line_start":587,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":39,"highlight_start":12,"text":"        if &align_chars[j].to_string() == &\"|\""}]},{"byte_end":37104,"byte_start":37100,"column_end":47,"column_start":43,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":587,"line_start":587,"suggested_replacement":"\"|\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":43,"text":"        if &align_chars[j].to_string() == &\"|\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":37104,"byte_start":37069,"column_end":47,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":587,"line_start":587,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":12,"text":"        if &align_chars[j].to_string() == &\"|\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:345:24\n    |\n345 |                     if &alphabets[i].to_string().as_str() == &\"N\" {\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n345 -                     if &alphabets[i].to_string().as_str() == &\"N\" {\n345 +                     if alphabets[i].to_string().as_str() == \"N\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":22382,"byte_start":22348,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":345,"line_start":345,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() == &\"N\" {"}]},{"byte_end":22390,"byte_start":22386,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":345,"line_start":345,"suggested_replacement":"\"N\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"                    if &alphabets[i].to_string().as_str() == &\"N\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":22390,"byte_start":22348,"column_end":66,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":345,"line_start":345,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() == &\"N\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/realign.rs:589:16\n    |\n589 |             && first_substituted_nucleotides.len() == 0\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `first_substituted_nucleotides.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::len_zero)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":37186,"byte_start":37146,"column_end":56,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":589,"line_start":589,"suggested_replacement":"first_substituted_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":56,"highlight_start":16,"text":"            && first_substituted_nucleotides.len() == 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":37186,"byte_start":37146,"column_end":56,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":589,"line_start":589,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":16,"text":"            && first_substituted_nucleotides.len() == 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:593:19\n    |\n593 |         } else if &align_chars[j].to_string() == &\"|\"\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n593 -         } else if &align_chars[j].to_string() == &\"|\"\n593 +         } else if align_chars[j].to_string() == \"|\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":37342,"byte_start":37315,"column_end":46,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":593,"line_start":593,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":46,"highlight_start":19,"text":"        } else if &align_chars[j].to_string() == &\"|\""}]},{"byte_end":37350,"byte_start":37346,"column_end":54,"column_start":50,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":593,"line_start":593,"suggested_replacement":"\"|\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":50,"text":"        } else if &align_chars[j].to_string() == &\"|\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":37350,"byte_start":37315,"column_end":54,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":593,"line_start":593,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":19,"text":"        } else if &align_chars[j].to_string() == &\"|\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/realign.rs:595:16\n    |\n595 |             && first_substituted_nucleotides.len() > 0\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!first_substituted_nucleotides.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":37431,"byte_start":37392,"column_end":55,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":595,"line_start":595,"suggested_replacement":"!first_substituted_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":55,"highlight_start":16,"text":"            && first_substituted_nucleotides.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":37431,"byte_start":37392,"column_end":55,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":595,"line_start":595,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":16,"text":"            && first_substituted_nucleotides.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:348:31\n    |\n348 |                     } else if &alphabets[i].to_string().as_str() == &\"I\" {\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n348 -                     } else if &alphabets[i].to_string().as_str() == &\"I\" {\n348 +                     } else if alphabets[i].to_string().as_str() == \"I\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":22591,"byte_start":22557,"column_end":65,"column_start":31,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":348,"line_start":348,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":65,"highlight_start":31,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]},{"byte_end":22599,"byte_start":22595,"column_end":73,"column_start":69,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":348,"line_start":348,"suggested_replacement":"\"I\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":73,"highlight_start":69,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":22599,"byte_start":22557,"column_end":73,"column_start":31,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":348,"line_start":348,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":31,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:351:31\n    |\n351 |                     } else if &alphabets[i].to_string().as_str() == &\"D\" {\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n351 -                     } else if &alphabets[i].to_string().as_str() == &\"D\" {\n351 +                     } else if alphabets[i].to_string().as_str() == \"D\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":22968,"byte_start":22934,"column_end":65,"column_start":31,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":351,"line_start":351,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":65,"highlight_start":31,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"D\" {"}]},{"byte_end":22976,"byte_start":22972,"column_end":73,"column_start":69,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":351,"line_start":351,"suggested_replacement":"\"D\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":73,"highlight_start":69,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"D\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":22976,"byte_start":22934,"column_end":73,"column_start":31,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":351,"line_start":351,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":31,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"D\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:598:19\n    |\n598 |         } else if &align_chars[j].to_string() == &\"*\"\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n598 -         } else if &align_chars[j].to_string() == &\"*\"\n598 +         } else if align_chars[j].to_string() == \"*\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":37527,"byte_start":37500,"column_end":46,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":598,"line_start":598,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":46,"highlight_start":19,"text":"        } else if &align_chars[j].to_string() == &\"*\""}]},{"byte_end":37535,"byte_start":37531,"column_end":54,"column_start":50,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":598,"line_start":598,"suggested_replacement":"\"*\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":50,"text":"        } else if &align_chars[j].to_string() == &\"*\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":37535,"byte_start":37500,"column_end":54,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":598,"line_start":598,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":19,"text":"        } else if &align_chars[j].to_string() == &\"*\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/realign.rs:600:16\n    |\n600 |             && first_matched_nucleotides.len() == 0\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `first_matched_nucleotides.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":37613,"byte_start":37577,"column_end":52,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":600,"line_start":600,"suggested_replacement":"first_matched_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":52,"highlight_start":16,"text":"            && first_matched_nucleotides.len() == 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":37613,"byte_start":37577,"column_end":52,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":600,"line_start":600,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":16,"text":"            && first_matched_nucleotides.len() == 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:356:31\n    |\n356 |                     } else if &alphabets[i].to_string().as_str() == &\"M\"\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n356 -                     } else if &alphabets[i].to_string().as_str() == &\"M\"\n356 +                     } else if alphabets[i].to_string().as_str() == \"M\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":23462,"byte_start":23428,"column_end":65,"column_start":31,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":356,"line_start":356,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":65,"highlight_start":31,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"M\""}]},{"byte_end":23470,"byte_start":23466,"column_end":73,"column_start":69,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":356,"line_start":356,"suggested_replacement":"\"M\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":73,"highlight_start":69,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"M\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":23470,"byte_start":23428,"column_end":73,"column_start":31,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":356,"line_start":356,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":31,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"M\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:603:33\n    |\n603 |         } else if first == 1 && &align_chars[j].to_string() != &\"|\" {\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n603 -         } else if first == 1 && &align_chars[j].to_string() != &\"|\" {\n603 +         } else if first == 1 && align_chars[j].to_string() != \"|\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":37747,"byte_start":37720,"column_end":60,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":603,"line_start":603,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":60,"highlight_start":33,"text":"        } else if first == 1 && &align_chars[j].to_string() != &\"|\" {"}]},{"byte_end":37755,"byte_start":37751,"column_end":68,"column_start":64,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":603,"line_start":603,"suggested_replacement":"\"|\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":68,"highlight_start":64,"text":"        } else if first == 1 && &align_chars[j].to_string() != &\"|\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":37755,"byte_start":37720,"column_end":68,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":603,"line_start":603,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":33,"text":"        } else if first == 1 && &align_chars[j].to_string() != &\"|\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:357:28\n    |\n357 |                         || &alphabets[i].to_string().as_str() == &\"S\"\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n357 -                         || &alphabets[i].to_string().as_str() == &\"S\"\n357 +                         || alphabets[i].to_string().as_str() == \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":23532,"byte_start":23498,"column_end":62,"column_start":28,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":357,"line_start":357,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":28,"text":"                        || &alphabets[i].to_string().as_str() == &\"S\""}]},{"byte_end":23540,"byte_start":23536,"column_end":70,"column_start":66,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":357,"line_start":357,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":66,"text":"                        || &alphabets[i].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":23540,"byte_start":23498,"column_end":70,"column_start":28,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":357,"line_start":357,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":28,"text":"                        || &alphabets[i].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:607:16\n    |\n607 |             && &align_chars[j].to_string() != &\"|\"\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n607 -             && &align_chars[j].to_string() != &\"|\"\n607 +             && align_chars[j].to_string() != \"|\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":37955,"byte_start":37928,"column_end":43,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":607,"line_start":607,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":16,"text":"            && &align_chars[j].to_string() != &\"|\""}]},{"byte_end":37963,"byte_start":37959,"column_end":51,"column_start":47,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":607,"line_start":607,"suggested_replacement":"\"|\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":47,"text":"            && &align_chars[j].to_string() != &\"|\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":37963,"byte_start":37928,"column_end":51,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":607,"line_start":607,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":16,"text":"            && &align_chars[j].to_string() != &\"|\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:608:16\n    |\n608 |             && &align_chars[j].to_string() != &\"*\"\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n608 -             && &align_chars[j].to_string() != &\"*\"\n608 +             && align_chars[j].to_string() != \"*\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":38006,"byte_start":37979,"column_end":43,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":608,"line_start":608,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":16,"text":"            && &align_chars[j].to_string() != &\"*\""}]},{"byte_end":38014,"byte_start":38010,"column_end":51,"column_start":47,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":608,"line_start":608,"suggested_replacement":"\"*\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":47,"text":"            && &align_chars[j].to_string() != &\"*\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":38014,"byte_start":37979,"column_end":51,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":608,"line_start":608,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":16,"text":"            && &align_chars[j].to_string() != &\"*\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:373:24\n    |\n373 |                     if &alphabets[i].to_string().as_str() == &\"N\" {\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n373 -                     if &alphabets[i].to_string().as_str() == &\"N\" {\n373 +                     if alphabets[i].to_string().as_str() == \"N\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":24369,"byte_start":24335,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":373,"line_start":373,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() == &\"N\" {"}]},{"byte_end":24377,"byte_start":24373,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":373,"line_start":373,"suggested_replacement":"\"N\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"                    if &alphabets[i].to_string().as_str() == &\"N\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":24377,"byte_start":24335,"column_end":66,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":373,"line_start":373,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() == &\"N\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:624:13\n    |\n624 |         if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n624 -         if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")\n624 +         if (align_chars[j].to_string() == \"|\" || &align_chars[j].to_string() == &\"*\")\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":38751,"byte_start":38724,"column_end":40,"column_start":13,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":624,"line_start":624,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":40,"highlight_start":13,"text":"        if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")"}]},{"byte_end":38759,"byte_start":38755,"column_end":48,"column_start":44,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":624,"line_start":624,"suggested_replacement":"\"|\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":48,"highlight_start":44,"text":"        if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":38759,"byte_start":38724,"column_end":48,"column_start":13,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":624,"line_start":624,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":13,"text":"        if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:624:52\n    |\n624 |         if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")\n    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n624 -         if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")\n624 +         if (&align_chars[j].to_string() == &\"|\" || align_chars[j].to_string() == \"*\")\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":38790,"byte_start":38763,"column_end":79,"column_start":52,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":624,"line_start":624,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":79,"highlight_start":52,"text":"        if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")"}]},{"byte_end":38798,"byte_start":38794,"column_end":87,"column_start":83,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":624,"line_start":624,"suggested_replacement":"\"*\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":83,"text":"        if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":38798,"byte_start":38763,"column_end":87,"column_start":52,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":624,"line_start":624,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":52,"text":"        if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:628:33\n    |\n628 |         } else if first == 0 && &align_chars[j].to_string() == &\" \" {\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n628 -         } else if first == 0 && &align_chars[j].to_string() == &\" \" {\n628 +         } else if first == 0 && align_chars[j].to_string() == \" \" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":38971,"byte_start":38944,"column_end":60,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":628,"line_start":628,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":60,"highlight_start":33,"text":"        } else if first == 0 && &align_chars[j].to_string() == &\" \" {"}]},{"byte_end":38979,"byte_start":38975,"column_end":68,"column_start":64,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":628,"line_start":628,"suggested_replacement":"\" \"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":68,"highlight_start":64,"text":"        } else if first == 0 && &align_chars[j].to_string() == &\" \" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":38979,"byte_start":38944,"column_end":68,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":628,"line_start":628,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":33,"text":"        } else if first == 0 && &align_chars[j].to_string() == &\" \" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: manual implementation of an assign operation\n   --> src/realign.rs:420:21\n    |\n420 |                     splice_start_pos = splice_start_pos - indel_length as i64;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `splice_start_pos -= indel_length as i64`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":27864,"byte_start":27807,"column_end":78,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":420,"line_start":420,"suggested_replacement":"splice_start_pos -= indel_length as i64","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":78,"highlight_start":21,"text":"                    splice_start_pos = splice_start_pos - indel_length as i64;"}]}]}],"code":{"code":"clippy::assign_op_pattern","explanation":null},"level":"warning","message":"manual implementation of an assign operation","spans":[{"byte_end":27864,"byte_start":27807,"column_end":78,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":420,"line_start":420,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":78,"highlight_start":21,"text":"                    splice_start_pos = splice_start_pos - indel_length as i64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:631:33\n    |\n631 |         } else if first == 1 && &align_chars[j].to_string() == &\" \" {\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n631 -         } else if first == 1 && &align_chars[j].to_string() == &\" \" {\n631 +         } else if first == 1 && align_chars[j].to_string() == \" \" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":39164,"byte_start":39137,"column_end":60,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":631,"line_start":631,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":60,"highlight_start":33,"text":"        } else if first == 1 && &align_chars[j].to_string() == &\" \" {"}]},{"byte_end":39172,"byte_start":39168,"column_end":68,"column_start":64,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":631,"line_start":631,"suggested_replacement":"\" \"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":68,"highlight_start":64,"text":"        } else if first == 1 && &align_chars[j].to_string() == &\" \" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":39172,"byte_start":39137,"column_end":68,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":631,"line_start":631,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":33,"text":"        } else if first == 1 && &align_chars[j].to_string() == &\" \" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: manual implementation of an assign operation\n   --> src/realign.rs:428:21\n    |\n428 |                     splice_stop_pos = splice_stop_pos + indel_length as i64;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `splice_stop_pos += indel_length as i64`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":28651,"byte_start":28596,"column_end":76,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":428,"line_start":428,"suggested_replacement":"splice_stop_pos += indel_length as i64","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":76,"highlight_start":21,"text":"                    splice_stop_pos = splice_stop_pos + indel_length as i64;"}]}]}],"code":{"code":"clippy::assign_op_pattern","explanation":null},"level":"warning","message":"manual implementation of an assign operation","spans":[{"byte_end":28651,"byte_start":28596,"column_end":76,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":428,"line_start":428,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":76,"highlight_start":21,"text":"                    splice_stop_pos = splice_stop_pos + indel_length as i64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:436:16\n    |\n436 |             if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n436 -             if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n436 +             if cigar_sequence == \"*\" || &cigar_sequence == &\"=\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":29050,"byte_start":29035,"column_end":31,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":436,"line_start":436,"suggested_replacement":"cigar_sequence","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":31,"highlight_start":16,"text":"            if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]},{"byte_end":29058,"byte_start":29054,"column_end":39,"column_start":35,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":436,"line_start":436,"suggested_replacement":"\"*\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":39,"highlight_start":35,"text":"            if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":29058,"byte_start":29035,"column_end":39,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":436,"line_start":436,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":16,"text":"            if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:643:13\n    |\n643 |         if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n643 -         if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")\n643 +         if (align_chars[i].to_string() == \"|\" || &align_chars[i].to_string() == &\"*\")\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":39784,"byte_start":39757,"column_end":40,"column_start":13,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":643,"line_start":643,"suggested_replacement":"align_chars[i].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":40,"highlight_start":13,"text":"        if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")"}]},{"byte_end":39792,"byte_start":39788,"column_end":48,"column_start":44,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":643,"line_start":643,"suggested_replacement":"\"|\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":48,"highlight_start":44,"text":"        if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":39792,"byte_start":39757,"column_end":48,"column_start":13,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":643,"line_start":643,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":13,"text":"        if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:436:43\n    |\n436 |             if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n436 -             if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n436 +             if &cigar_sequence == &\"*\" || cigar_sequence == \"=\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":29077,"byte_start":29062,"column_end":58,"column_start":43,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":436,"line_start":436,"suggested_replacement":"cigar_sequence","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":43,"text":"            if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]},{"byte_end":29085,"byte_start":29081,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":436,"line_start":436,"suggested_replacement":"\"=\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"            if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":29085,"byte_start":29062,"column_end":66,"column_start":43,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":436,"line_start":436,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":43,"text":"            if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:643:52\n    |\n643 |         if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")\n    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n643 -         if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")\n643 +         if (&align_chars[i].to_string() == &\"|\" || align_chars[i].to_string() == \"*\")\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":39823,"byte_start":39796,"column_end":79,"column_start":52,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":643,"line_start":643,"suggested_replacement":"align_chars[i].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":79,"highlight_start":52,"text":"        if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")"}]},{"byte_end":39831,"byte_start":39827,"column_end":87,"column_start":83,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":643,"line_start":643,"suggested_replacement":"\"*\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":83,"text":"        if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":39831,"byte_start":39796,"column_end":87,"column_start":52,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":643,"line_start":643,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":52,"text":"        if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:649:33\n    |\n649 |         } else if first == 0 && &align_chars[i].to_string() == &\" \" {\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n649 -         } else if first == 0 && &align_chars[i].to_string() == &\" \" {\n649 +         } else if first == 0 && align_chars[i].to_string() == \" \" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":40099,"byte_start":40072,"column_end":60,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":649,"line_start":649,"suggested_replacement":"align_chars[i].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":60,"highlight_start":33,"text":"        } else if first == 0 && &align_chars[i].to_string() == &\" \" {"}]},{"byte_end":40107,"byte_start":40103,"column_end":68,"column_start":64,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":649,"line_start":649,"suggested_replacement":"\" \"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":68,"highlight_start":64,"text":"        } else if first == 0 && &align_chars[i].to_string() == &\" \" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":40107,"byte_start":40072,"column_end":68,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":649,"line_start":649,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":33,"text":"        } else if first == 0 && &align_chars[i].to_string() == &\" \" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:445:24\n    |\n445 |                     if &alphabets[i].to_string().as_str() != &\"H\" {\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n445 -                     if &alphabets[i].to_string().as_str() != &\"H\" {\n445 +                     if alphabets[i].to_string().as_str() != \"H\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":29696,"byte_start":29662,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":445,"line_start":445,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() != &\"H\" {"}]},{"byte_end":29704,"byte_start":29700,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":445,"line_start":445,"suggested_replacement":"\"H\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"                    if &alphabets[i].to_string().as_str() != &\"H\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":29704,"byte_start":29662,"column_end":66,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":445,"line_start":445,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() != &\"H\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:654:33\n    |\n654 |         } else if first == 1 && &align_chars[i].to_string() == &\" \" {\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n654 -         } else if first == 1 && &align_chars[i].to_string() == &\" \" {\n654 +         } else if first == 1 && align_chars[i].to_string() == \" \" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":40387,"byte_start":40360,"column_end":60,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":654,"line_start":654,"suggested_replacement":"align_chars[i].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":60,"highlight_start":33,"text":"        } else if first == 1 && &align_chars[i].to_string() == &\" \" {"}]},{"byte_end":40395,"byte_start":40391,"column_end":68,"column_start":64,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":654,"line_start":654,"suggested_replacement":"\" \"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":68,"highlight_start":64,"text":"        } else if first == 1 && &align_chars[i].to_string() == &\" \" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":40395,"byte_start":40360,"column_end":68,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":654,"line_start":654,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":33,"text":"        } else if first == 1 && &align_chars[i].to_string() == &\" \" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` has identical blocks\n   --> src/realign.rs:470:17\n    |\n470 | /                 {\n471 | |                     alignment_side = \"right\".to_string();\n...   |\n474 | |                 } else if &alphabets[0].to_string().as_str() == &\"S\"\n    | |_________________^\n    |\nnote: same as this\n   --> src/realign.rs:477:17\n    |\n477 | /                 {\n478 | |                     alignment_side = \"right\".to_string();\n...   |\n481 | |                 } else if splice_freq > 0\n    | |_________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else\n    = note: `#[warn(clippy::if_same_then_else)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"same as this","rendered":null,"spans":[{"byte_end":31976,"byte_start":31698,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":481,"line_start":477,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":17,"text":"                {"},{"highlight_end":58,"highlight_start":1,"text":"                    alignment_side = \"right\".to_string();"},{"highlight_end":112,"highlight_start":1,"text":"                    //read_indel_start = indel_start as usize - correct_end_position as usize + sequence.len();"},{"highlight_end":89,"highlight_start":1,"text":"                    //read_indel_start = correct_end_position as usize - sequence.len();"},{"highlight_end":18,"highlight_start":1,"text":"                } else if splice_freq > 0"}]}]},{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::if_same_then_else)]` on by default","rendered":null,"spans":[]}],"code":{"code":"clippy::if_same_then_else","explanation":null},"level":"warning","message":"this `if` has identical blocks","spans":[{"byte_end":31498,"byte_start":31220,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":474,"line_start":470,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":17,"text":"                {"},{"highlight_end":58,"highlight_start":1,"text":"                    alignment_side = \"right\".to_string();"},{"highlight_end":112,"highlight_start":1,"text":"                    //read_indel_start = indel_start as usize - correct_end_position as usize + sequence.len();"},{"highlight_end":89,"highlight_start":1,"text":"                    //read_indel_start = correct_end_position as usize - sequence.len();"},{"highlight_end":18,"highlight_start":1,"text":"                } else if &alphabets[0].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` has identical blocks\n   --> src/realign.rs:477:17\n    |\n477 | /                 {\n478 | |                     alignment_side = \"right\".to_string();\n...   |\n481 | |                 } else if splice_freq > 0\n    | |_________________^\n    |\nnote: same as this\n   --> src/realign.rs:484:17\n    |\n484 | /                 {\n485 | |                     alignment_side = \"right\".to_string();\n...   |\n488 | |                 } else if &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\"\n    | |_________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"same as this","rendered":null,"spans":[{"byte_end":32434,"byte_start":32156,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":488,"line_start":484,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":17,"text":"                {"},{"highlight_end":58,"highlight_start":1,"text":"                    alignment_side = \"right\".to_string();"},{"highlight_end":112,"highlight_start":1,"text":"                    //read_indel_start = indel_start as usize - correct_end_position as usize + sequence.len();"},{"highlight_end":89,"highlight_start":1,"text":"                    //read_indel_start = correct_end_position as usize - sequence.len();"},{"highlight_end":18,"highlight_start":1,"text":"                } else if &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\""}]}]},{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else","rendered":null,"spans":[]}],"code":{"code":"clippy::if_same_then_else","explanation":null},"level":"warning","message":"this `if` has identical blocks","spans":[{"byte_end":31976,"byte_start":31698,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":481,"line_start":477,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":17,"text":"                {"},{"highlight_end":58,"highlight_start":1,"text":"                    alignment_side = \"right\".to_string();"},{"highlight_end":112,"highlight_start":1,"text":"                    //read_indel_start = indel_start as usize - correct_end_position as usize + sequence.len();"},{"highlight_end":89,"highlight_start":1,"text":"                    //read_indel_start = correct_end_position as usize - sequence.len();"},{"highlight_end":18,"highlight_start":1,"text":"                } else if splice_freq > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` has identical blocks\n   --> src/realign.rs:496:17\n    |\n496 | /                 {\n497 | |                     alignment_side = \"right\".to_string();\n...   |\n500 | |                 } else if correct_start_position + alignment_offset > indel_start\n    | |_________________^\n    |\nnote: same as this\n   --> src/realign.rs:502:17\n    |\n502 | /                 {\n503 | |                     alignment_side = \"right\".to_string();\n...   |\n506 | |                 } else if (indel_start - correct_start_position).abs()\n    | |_________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"same as this","rendered":null,"spans":[{"byte_end":33631,"byte_start":33353,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":506,"line_start":502,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":17,"text":"                {"},{"highlight_end":58,"highlight_start":1,"text":"                    alignment_side = \"right\".to_string();"},{"highlight_end":112,"highlight_start":1,"text":"                    //read_indel_start = indel_start as usize - correct_end_position as usize + sequence.len();"},{"highlight_end":89,"highlight_start":1,"text":"                    //read_indel_start = correct_end_position as usize - sequence.len();"},{"highlight_end":18,"highlight_start":1,"text":"                } else if (indel_start - correct_start_position).abs()"}]}]},{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else","rendered":null,"spans":[]}],"code":{"code":"clippy::if_same_then_else","explanation":null},"level":"warning","message":"this `if` has identical blocks","spans":[{"byte_end":33198,"byte_start":32920,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":500,"line_start":496,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":17,"text":"                {"},{"highlight_end":58,"highlight_start":1,"text":"                    alignment_side = \"right\".to_string();"},{"highlight_end":112,"highlight_start":1,"text":"                    //read_indel_start = indel_start as usize - correct_end_position as usize + sequence.len();"},{"highlight_end":89,"highlight_start":1,"text":"                    //read_indel_start = correct_end_position as usize - sequence.len();"},{"highlight_end":18,"highlight_start":1,"text":"                } else if correct_start_position + alignment_offset > indel_start"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:456:21\n    |\n456 |                 if (&alphabets[0].to_string().as_str() == &\"S\"\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n456 -                 if (&alphabets[0].to_string().as_str() == &\"S\"\n456 +                 if (alphabets[0].to_string().as_str() == \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":30455,"byte_start":30421,"column_end":55,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":456,"line_start":456,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":55,"highlight_start":21,"text":"                if (&alphabets[0].to_string().as_str() == &\"S\""}]},{"byte_end":30463,"byte_start":30459,"column_end":63,"column_start":59,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":456,"line_start":456,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":63,"highlight_start":59,"text":"                if (&alphabets[0].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":30463,"byte_start":30421,"column_end":63,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":456,"line_start":456,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":63,"highlight_start":21,"text":"                if (&alphabets[0].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:457:24\n    |\n457 |                     && &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\")\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n457 -                     && &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\")\n457 +                     && alphabets[alphabets.len() - 1].to_string().as_str() == \"S\")\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":30539,"byte_start":30487,"column_end":76,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":457,"line_start":457,"suggested_replacement":"alphabets[alphabets.len() - 1].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":76,"highlight_start":24,"text":"                    && &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\")"}]},{"byte_end":30547,"byte_start":30543,"column_end":84,"column_start":80,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":457,"line_start":457,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":84,"highlight_start":80,"text":"                    && &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\")"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":30547,"byte_start":30487,"column_end":84,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":457,"line_start":457,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":84,"highlight_start":24,"text":"                    && &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\")"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/realign.rs:712:8\n    |\n712 |     if first_matched_nucleotides.len() == 0 || first_substituted_nucleotides.len() > 0 {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `first_matched_nucleotides.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":43230,"byte_start":43194,"column_end":44,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":712,"line_start":712,"suggested_replacement":"first_matched_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":44,"highlight_start":8,"text":"    if first_matched_nucleotides.len() == 0 || first_substituted_nucleotides.len() > 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":43230,"byte_start":43194,"column_end":44,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":712,"line_start":712,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":8,"text":"    if first_matched_nucleotides.len() == 0 || first_substituted_nucleotides.len() > 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/realign.rs:712:48\n    |\n712 |     if first_matched_nucleotides.len() == 0 || first_substituted_nucleotides.len() > 0 {\n    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!first_substituted_nucleotides.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":43273,"byte_start":43234,"column_end":87,"column_start":48,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":712,"line_start":712,"suggested_replacement":"!first_substituted_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":48,"text":"    if first_matched_nucleotides.len() == 0 || first_substituted_nucleotides.len() > 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":43273,"byte_start":43234,"column_end":87,"column_start":48,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":712,"line_start":712,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":48,"text":"    if first_matched_nucleotides.len() == 0 || first_substituted_nucleotides.len() > 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:467:27\n    |\n467 |                 } else if &alphabets[0].to_string().as_str() == &\"S\"\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n467 -                 } else if &alphabets[0].to_string().as_str() == &\"S\"\n467 +                 } else if alphabets[0].to_string().as_str() == \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":31063,"byte_start":31029,"column_end":61,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":467,"line_start":467,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":27,"text":"                } else if &alphabets[0].to_string().as_str() == &\"S\""}]},{"byte_end":31071,"byte_start":31067,"column_end":69,"column_start":65,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":467,"line_start":467,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":69,"highlight_start":65,"text":"                } else if &alphabets[0].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":31071,"byte_start":31029,"column_end":69,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":467,"line_start":467,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":27,"text":"                } else if &alphabets[0].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:474:27\n    |\n474 |                 } else if &alphabets[0].to_string().as_str() == &\"S\"\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n474 -                 } else if &alphabets[0].to_string().as_str() == &\"S\"\n474 +                 } else if alphabets[0].to_string().as_str() == \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":31541,"byte_start":31507,"column_end":61,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":474,"line_start":474,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":27,"text":"                } else if &alphabets[0].to_string().as_str() == &\"S\""}]},{"byte_end":31549,"byte_start":31545,"column_end":69,"column_start":65,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":474,"line_start":474,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":69,"highlight_start":65,"text":"                } else if &alphabets[0].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":31549,"byte_start":31507,"column_end":69,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":474,"line_start":474,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":27,"text":"                } else if &alphabets[0].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/realign.rs:736:8\n    |\n736 |     if alignment_wrong == true {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `alignment_wrong`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":44412,"byte_start":44389,"column_end":31,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":736,"line_start":736,"suggested_replacement":"alignment_wrong","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":31,"highlight_start":8,"text":"    if alignment_wrong == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":44412,"byte_start":44389,"column_end":31,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":736,"line_start":736,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":8,"text":"    if alignment_wrong == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:488:27\n    |\n488 |                 } else if &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\"\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n488 -                 } else if &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\"\n488 +                 } else if alphabets[alphabets.len() - 1].to_string().as_str() == \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":32495,"byte_start":32443,"column_end":79,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":488,"line_start":488,"suggested_replacement":"alphabets[alphabets.len() - 1].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":79,"highlight_start":27,"text":"                } else if &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\""}]},{"byte_end":32503,"byte_start":32499,"column_end":87,"column_start":83,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":488,"line_start":488,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":83,"text":"                } else if &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":32503,"byte_start":32443,"column_end":87,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":488,"line_start":488,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":27,"text":"                } else if &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:490:24\n    |\n490 |                     && &alphabets[0].to_string().as_str() != &\"S\"\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n490 -                     && &alphabets[0].to_string().as_str() != &\"S\"\n490 +                     && alphabets[0].to_string().as_str() != \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":32601,"byte_start":32567,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":490,"line_start":490,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    && &alphabets[0].to_string().as_str() != &\"S\""}]},{"byte_end":32609,"byte_start":32605,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":490,"line_start":490,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"                    && &alphabets[0].to_string().as_str() != &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":32609,"byte_start":32567,"column_end":66,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":490,"line_start":490,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":24,"text":"                    && &alphabets[0].to_string().as_str() != &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n   --> src/realign.rs:546:31\n    |\n546 | pub fn parse_cigar(cigar_seq: &String) -> (Vec<char>, Vec<i64>) {\n    |                               ^^^^^^^ help: change this to: `&str`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":35305,"byte_start":35298,"column_end":38,"column_start":31,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":546,"line_start":546,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":38,"highlight_start":31,"text":"pub fn parse_cigar(cigar_seq: &String) -> (Vec<char>, Vec<i64>) {"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":35305,"byte_start":35298,"column_end":38,"column_start":31,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":546,"line_start":546,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":31,"text":"pub fn parse_cigar(cigar_seq: &String) -> (Vec<char>, Vec<i64>) {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/realign.rs:815:69\n    |\n815 |             if num_iterations != first_matched_nucleotides.len() && all_matched_nucleotides == true\n    |                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":48523,"byte_start":48492,"column_end":100,"column_start":69,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":815,"line_start":815,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":100,"highlight_start":69,"text":"            if num_iterations != first_matched_nucleotides.len() && all_matched_nucleotides == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":48523,"byte_start":48492,"column_end":100,"column_start":69,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":815,"line_start":815,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":100,"highlight_start":69,"text":"            if num_iterations != first_matched_nucleotides.len() && all_matched_nucleotides == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/realign.rs:820:16\n    |\n820 |             if all_matched_nucleotides == true {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":48775,"byte_start":48744,"column_end":47,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":820,"line_start":820,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":16,"text":"            if all_matched_nucleotides == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":48775,"byte_start":48744,"column_end":47,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":820,"line_start":820,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":16,"text":"            if all_matched_nucleotides == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is only used to index `sequence_vector`\n   --> src/realign.rs:552:14\n    |\n552 |     for i in 0..sequence_vector.len() {\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n552 -     for i in 0..sequence_vector.len() {\n552 +     for <item> in &sequence_vector {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_range_loop)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":35637,"byte_start":35636,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":552,"line_start":552,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":10,"highlight_start":9,"text":"    for i in 0..sequence_vector.len() {"}]},{"byte_end":35665,"byte_start":35641,"column_end":38,"column_start":14,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":552,"line_start":552,"suggested_replacement":"&sequence_vector","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":38,"highlight_start":14,"text":"    for i in 0..sequence_vector.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is only used to index `sequence_vector`","spans":[{"byte_end":35665,"byte_start":35641,"column_end":38,"column_start":14,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":552,"line_start":552,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":14,"text":"    for i in 0..sequence_vector.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/realign.rs:553:12\n    |\n553 |         if sequence_vector[i].is_alphabetic() == true {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `sequence_vector[i].is_alphabetic()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n    = note: `#[warn(clippy::bool_comparison)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::bool_comparison)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":35721,"byte_start":35679,"column_end":54,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":553,"line_start":553,"suggested_replacement":"sequence_vector[i].is_alphabetic()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":12,"text":"        if sequence_vector[i].is_alphabetic() == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":35721,"byte_start":35679,"column_end":54,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":553,"line_start":553,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":12,"text":"        if sequence_vector[i].is_alphabetic() == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/realign.rs:860:15\n    |\n860 |     } else if wrong_substitution == true {\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `wrong_substitution`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":50508,"byte_start":50482,"column_end":41,"column_start":15,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":860,"line_start":860,"suggested_replacement":"wrong_substitution","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":41,"highlight_start":15,"text":"    } else if wrong_substitution == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":50508,"byte_start":50482,"column_end":41,"column_start":15,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":860,"line_start":860,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":15,"text":"    } else if wrong_substitution == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/realign.rs:941:20\n    |\n941 |                 && all_substituted_nucleotides == true\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_substituted_nucleotides`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":54653,"byte_start":54618,"column_end":55,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":941,"line_start":941,"suggested_replacement":"all_substituted_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":55,"highlight_start":20,"text":"                && all_substituted_nucleotides == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":54653,"byte_start":54618,"column_end":55,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":941,"line_start":941,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":20,"text":"                && all_substituted_nucleotides == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/realign.rs:946:16\n    |\n946 |             if all_substituted_nucleotides == true {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_substituted_nucleotides`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":54913,"byte_start":54878,"column_end":51,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":946,"line_start":946,"suggested_replacement":"all_substituted_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":16,"text":"            if all_substituted_nucleotides == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":54913,"byte_start":54878,"column_end":51,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":946,"line_start":946,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":16,"text":"            if all_substituted_nucleotides == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/realign.rs:982:15\n    |\n982 |     } else if first_matched_nucleotides.len() > 0\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!first_matched_nucleotides.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":56410,"byte_start":56375,"column_end":50,"column_start":15,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":982,"line_start":982,"suggested_replacement":"!first_matched_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":50,"highlight_start":15,"text":"    } else if first_matched_nucleotides.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":56410,"byte_start":56375,"column_end":50,"column_start":15,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":982,"line_start":982,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":15,"text":"    } else if first_matched_nucleotides.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/realign.rs:983:12\n    |\n983 |         && first_unmatched_sequence.len() > 0\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!first_unmatched_sequence.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":56456,"byte_start":56422,"column_end":46,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":983,"line_start":983,"suggested_replacement":"!first_unmatched_sequence.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":46,"highlight_start":12,"text":"        && first_unmatched_sequence.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":56456,"byte_start":56422,"column_end":46,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":983,"line_start":983,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":12,"text":"        && first_unmatched_sequence.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n   --> src/realign.rs:565:12\n    |\n565 |     q_seq: &String,\n    |            ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\nhelp: change this to\n    |\n565 ~     q_seq: &str,\n566 |     align: &String,\n...\n727 |\n728 ~     let q_seq_original = q_seq.to_owned();\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":36051,"byte_start":36044,"column_end":19,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":565,"line_start":565,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":19,"highlight_start":12,"text":"    q_seq: &String,"}]},{"byte_end":43982,"byte_start":43969,"column_end":39,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":728,"line_start":728,"suggested_replacement":"q_seq.to_owned()","suggestion_applicability":"Unspecified","text":[{"highlight_end":39,"highlight_start":26,"text":"    let q_seq_original = q_seq.clone();"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":36051,"byte_start":36044,"column_end":19,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":565,"line_start":565,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":12,"text":"    q_seq: &String,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n   --> src/realign.rs:566:12\n    |\n566 |     align: &String,\n    |            ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\nhelp: change this to\n    |\n566 ~     align: &str,\n567 |     r_seq: &String,\n...\n728 |     let q_seq_original = q_seq.clone();\n729 ~     let align_original = align.to_owned();\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":36071,"byte_start":36064,"column_end":19,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":566,"line_start":566,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":19,"highlight_start":12,"text":"    align: &String,"}]},{"byte_end":44022,"byte_start":44009,"column_end":39,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":729,"line_start":729,"suggested_replacement":"align.to_owned()","suggestion_applicability":"Unspecified","text":[{"highlight_end":39,"highlight_start":26,"text":"    let align_original = align.clone();"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":36071,"byte_start":36064,"column_end":19,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":566,"line_start":566,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":12,"text":"    align: &String,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n   --> src/realign.rs:567:12\n    |\n567 |     r_seq: &String,\n    |            ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\nhelp: change this to\n    |\n567 ~     r_seq: &str,\n568 | ) -> (String, String, String) {\n...\n729 |     let align_original = align.clone();\n730 ~     let r_seq_original = r_seq.to_owned();\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":36091,"byte_start":36084,"column_end":19,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":567,"line_start":567,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":19,"highlight_start":12,"text":"    r_seq: &String,"}]},{"byte_end":44062,"byte_start":44049,"column_end":39,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":730,"line_start":730,"suggested_replacement":"r_seq.to_owned()","suggestion_applicability":"Unspecified","text":[{"highlight_end":39,"highlight_start":26,"text":"    let r_seq_original = r_seq.clone();"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":36091,"byte_start":36084,"column_end":19,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":567,"line_start":567,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":12,"text":"    r_seq: &String,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1032:69\n     |\n1032 |             if num_iterations != first_matched_nucleotides.len() && all_matched_nucleotides == true\n     |                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":58871,"byte_start":58840,"column_end":100,"column_start":69,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1032,"line_start":1032,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":100,"highlight_start":69,"text":"            if num_iterations != first_matched_nucleotides.len() && all_matched_nucleotides == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":58871,"byte_start":58840,"column_end":100,"column_start":69,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1032,"line_start":1032,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":100,"highlight_start":69,"text":"            if num_iterations != first_matched_nucleotides.len() && all_matched_nucleotides == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1037:16\n     |\n1037 |             if all_matched_nucleotides == true {\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":59123,"byte_start":59092,"column_end":47,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1037,"line_start":1037,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":16,"text":"            if all_matched_nucleotides == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":59123,"byte_start":59092,"column_end":47,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1037,"line_start":1037,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":16,"text":"            if all_matched_nucleotides == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1046:12\n     |\n1046 |         if all_matched_nucleotides == true {\n     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":59436,"byte_start":59405,"column_end":43,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1046,"line_start":1046,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":12,"text":"        if all_matched_nucleotides == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":59436,"byte_start":59405,"column_end":43,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1046,"line_start":1046,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":12,"text":"        if all_matched_nucleotides == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:587:12\n    |\n587 |         if &align_chars[j].to_string() == &\"|\"\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n587 -         if &align_chars[j].to_string() == &\"|\"\n587 +         if align_chars[j].to_string() == \"|\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":37096,"byte_start":37069,"column_end":39,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":587,"line_start":587,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":39,"highlight_start":12,"text":"        if &align_chars[j].to_string() == &\"|\""}]},{"byte_end":37104,"byte_start":37100,"column_end":47,"column_start":43,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":587,"line_start":587,"suggested_replacement":"\"|\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":43,"text":"        if &align_chars[j].to_string() == &\"|\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":37104,"byte_start":37069,"column_end":47,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":587,"line_start":587,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":12,"text":"        if &align_chars[j].to_string() == &\"|\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/realign.rs:589:16\n    |\n589 |             && first_substituted_nucleotides.len() == 0\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `first_substituted_nucleotides.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::len_zero)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":37186,"byte_start":37146,"column_end":56,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":589,"line_start":589,"suggested_replacement":"first_substituted_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":56,"highlight_start":16,"text":"            && first_substituted_nucleotides.len() == 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":37186,"byte_start":37146,"column_end":56,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":589,"line_start":589,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":16,"text":"            && first_substituted_nucleotides.len() == 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:593:19\n    |\n593 |         } else if &align_chars[j].to_string() == &\"|\"\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n593 -         } else if &align_chars[j].to_string() == &\"|\"\n593 +         } else if align_chars[j].to_string() == \"|\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":37342,"byte_start":37315,"column_end":46,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":593,"line_start":593,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":46,"highlight_start":19,"text":"        } else if &align_chars[j].to_string() == &\"|\""}]},{"byte_end":37350,"byte_start":37346,"column_end":54,"column_start":50,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":593,"line_start":593,"suggested_replacement":"\"|\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":50,"text":"        } else if &align_chars[j].to_string() == &\"|\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":37350,"byte_start":37315,"column_end":54,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":593,"line_start":593,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":19,"text":"        } else if &align_chars[j].to_string() == &\"|\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/realign.rs:595:16\n    |\n595 |             && first_substituted_nucleotides.len() > 0\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!first_substituted_nucleotides.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":37431,"byte_start":37392,"column_end":55,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":595,"line_start":595,"suggested_replacement":"!first_substituted_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":55,"highlight_start":16,"text":"            && first_substituted_nucleotides.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":37431,"byte_start":37392,"column_end":55,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":595,"line_start":595,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":16,"text":"            && first_substituted_nucleotides.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:598:19\n    |\n598 |         } else if &align_chars[j].to_string() == &\"*\"\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n598 -         } else if &align_chars[j].to_string() == &\"*\"\n598 +         } else if align_chars[j].to_string() == \"*\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":37527,"byte_start":37500,"column_end":46,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":598,"line_start":598,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":46,"highlight_start":19,"text":"        } else if &align_chars[j].to_string() == &\"*\""}]},{"byte_end":37535,"byte_start":37531,"column_end":54,"column_start":50,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":598,"line_start":598,"suggested_replacement":"\"*\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":50,"text":"        } else if &align_chars[j].to_string() == &\"*\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":37535,"byte_start":37500,"column_end":54,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":598,"line_start":598,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":19,"text":"        } else if &align_chars[j].to_string() == &\"*\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/realign.rs:600:16\n    |\n600 |             && first_matched_nucleotides.len() == 0\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `first_matched_nucleotides.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":37613,"byte_start":37577,"column_end":52,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":600,"line_start":600,"suggested_replacement":"first_matched_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":52,"highlight_start":16,"text":"            && first_matched_nucleotides.len() == 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":37613,"byte_start":37577,"column_end":52,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":600,"line_start":600,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":16,"text":"            && first_matched_nucleotides.len() == 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/realign.rs:1074:15\n     |\n1074 |     } else if first_partially_matched_nucleotides_right.len() > 0\n     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!first_partially_matched_nucleotides_right.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":60770,"byte_start":60719,"column_end":66,"column_start":15,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1074,"line_start":1074,"suggested_replacement":"!first_partially_matched_nucleotides_right.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":15,"text":"    } else if first_partially_matched_nucleotides_right.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":60770,"byte_start":60719,"column_end":66,"column_start":15,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1074,"line_start":1074,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":15,"text":"    } else if first_partially_matched_nucleotides_right.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/realign.rs:1075:12\n     |\n1075 |         && first_unmatched_sequence_right_wrt_partially_matched_nucleotides.len() > 0\n     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!first_unmatched_sequence_right_wrt_partially_matched_nucleotides.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":60856,"byte_start":60782,"column_end":86,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1075,"line_start":1075,"suggested_replacement":"!first_unmatched_sequence_right_wrt_partially_matched_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":86,"highlight_start":12,"text":"        && first_unmatched_sequence_right_wrt_partially_matched_nucleotides.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":60856,"byte_start":60782,"column_end":86,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1075,"line_start":1075,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":86,"highlight_start":12,"text":"        && first_unmatched_sequence_right_wrt_partially_matched_nucleotides.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:603:33\n    |\n603 |         } else if first == 1 && &align_chars[j].to_string() != &\"|\" {\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n603 -         } else if first == 1 && &align_chars[j].to_string() != &\"|\" {\n603 +         } else if first == 1 && align_chars[j].to_string() != \"|\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":37747,"byte_start":37720,"column_end":60,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":603,"line_start":603,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":60,"highlight_start":33,"text":"        } else if first == 1 && &align_chars[j].to_string() != &\"|\" {"}]},{"byte_end":37755,"byte_start":37751,"column_end":68,"column_start":64,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":603,"line_start":603,"suggested_replacement":"\"|\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":68,"highlight_start":64,"text":"        } else if first == 1 && &align_chars[j].to_string() != &\"|\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":37755,"byte_start":37720,"column_end":68,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":603,"line_start":603,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":33,"text":"        } else if first == 1 && &align_chars[j].to_string() != &\"|\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:607:16\n    |\n607 |             && &align_chars[j].to_string() != &\"|\"\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n607 -             && &align_chars[j].to_string() != &\"|\"\n607 +             && align_chars[j].to_string() != \"|\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":37955,"byte_start":37928,"column_end":43,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":607,"line_start":607,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":16,"text":"            && &align_chars[j].to_string() != &\"|\""}]},{"byte_end":37963,"byte_start":37959,"column_end":51,"column_start":47,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":607,"line_start":607,"suggested_replacement":"\"|\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":47,"text":"            && &align_chars[j].to_string() != &\"|\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":37963,"byte_start":37928,"column_end":51,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":607,"line_start":607,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":16,"text":"            && &align_chars[j].to_string() != &\"|\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:608:16\n    |\n608 |             && &align_chars[j].to_string() != &\"*\"\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n608 -             && &align_chars[j].to_string() != &\"*\"\n608 +             && align_chars[j].to_string() != \"*\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":38006,"byte_start":37979,"column_end":43,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":608,"line_start":608,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":16,"text":"            && &align_chars[j].to_string() != &\"*\""}]},{"byte_end":38014,"byte_start":38010,"column_end":51,"column_start":47,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":608,"line_start":608,"suggested_replacement":"\"*\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":47,"text":"            && &align_chars[j].to_string() != &\"*\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":38014,"byte_start":37979,"column_end":51,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":608,"line_start":608,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":16,"text":"            && &align_chars[j].to_string() != &\"*\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:624:13\n    |\n624 |         if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n624 -         if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")\n624 +         if (align_chars[j].to_string() == \"|\" || &align_chars[j].to_string() == &\"*\")\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":38751,"byte_start":38724,"column_end":40,"column_start":13,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":624,"line_start":624,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":40,"highlight_start":13,"text":"        if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")"}]},{"byte_end":38759,"byte_start":38755,"column_end":48,"column_start":44,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":624,"line_start":624,"suggested_replacement":"\"|\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":48,"highlight_start":44,"text":"        if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":38759,"byte_start":38724,"column_end":48,"column_start":13,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":624,"line_start":624,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":13,"text":"        if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:624:52\n    |\n624 |         if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")\n    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n624 -         if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")\n624 +         if (&align_chars[j].to_string() == &\"|\" || align_chars[j].to_string() == \"*\")\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":38790,"byte_start":38763,"column_end":79,"column_start":52,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":624,"line_start":624,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":79,"highlight_start":52,"text":"        if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")"}]},{"byte_end":38798,"byte_start":38794,"column_end":87,"column_start":83,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":624,"line_start":624,"suggested_replacement":"\"*\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":83,"text":"        if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":38798,"byte_start":38763,"column_end":87,"column_start":52,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":624,"line_start":624,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":52,"text":"        if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:628:33\n    |\n628 |         } else if first == 0 && &align_chars[j].to_string() == &\" \" {\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n628 -         } else if first == 0 && &align_chars[j].to_string() == &\" \" {\n628 +         } else if first == 0 && align_chars[j].to_string() == \" \" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":38971,"byte_start":38944,"column_end":60,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":628,"line_start":628,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":60,"highlight_start":33,"text":"        } else if first == 0 && &align_chars[j].to_string() == &\" \" {"}]},{"byte_end":38979,"byte_start":38975,"column_end":68,"column_start":64,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":628,"line_start":628,"suggested_replacement":"\" \"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":68,"highlight_start":64,"text":"        } else if first == 0 && &align_chars[j].to_string() == &\" \" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":38979,"byte_start":38944,"column_end":68,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":628,"line_start":628,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":33,"text":"        } else if first == 0 && &align_chars[j].to_string() == &\" \" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:631:33\n    |\n631 |         } else if first == 1 && &align_chars[j].to_string() == &\" \" {\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n631 -         } else if first == 1 && &align_chars[j].to_string() == &\" \" {\n631 +         } else if first == 1 && align_chars[j].to_string() == \" \" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":39164,"byte_start":39137,"column_end":60,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":631,"line_start":631,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":60,"highlight_start":33,"text":"        } else if first == 1 && &align_chars[j].to_string() == &\" \" {"}]},{"byte_end":39172,"byte_start":39168,"column_end":68,"column_start":64,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":631,"line_start":631,"suggested_replacement":"\" \"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":68,"highlight_start":64,"text":"        } else if first == 1 && &align_chars[j].to_string() == &\" \" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":39172,"byte_start":39137,"column_end":68,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":631,"line_start":631,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":33,"text":"        } else if first == 1 && &align_chars[j].to_string() == &\" \" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1130:20\n     |\n1130 |                 && all_matched_nucleotides == true\n     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":63996,"byte_start":63965,"column_end":51,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1130,"line_start":1130,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":20,"text":"                && all_matched_nucleotides == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":63996,"byte_start":63965,"column_end":51,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1130,"line_start":1130,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":20,"text":"                && all_matched_nucleotides == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1135:16\n     |\n1135 |             if all_matched_nucleotides == true {\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":64264,"byte_start":64233,"column_end":47,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1135,"line_start":1135,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":16,"text":"            if all_matched_nucleotides == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":64264,"byte_start":64233,"column_end":47,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1135,"line_start":1135,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":16,"text":"            if all_matched_nucleotides == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:643:13\n    |\n643 |         if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n643 -         if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")\n643 +         if (align_chars[i].to_string() == \"|\" || &align_chars[i].to_string() == &\"*\")\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":39784,"byte_start":39757,"column_end":40,"column_start":13,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":643,"line_start":643,"suggested_replacement":"align_chars[i].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":40,"highlight_start":13,"text":"        if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")"}]},{"byte_end":39792,"byte_start":39788,"column_end":48,"column_start":44,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":643,"line_start":643,"suggested_replacement":"\"|\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":48,"highlight_start":44,"text":"        if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":39792,"byte_start":39757,"column_end":48,"column_start":13,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":643,"line_start":643,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":13,"text":"        if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:643:52\n    |\n643 |         if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")\n    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n643 -         if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")\n643 +         if (&align_chars[i].to_string() == &\"|\" || align_chars[i].to_string() == \"*\")\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":39823,"byte_start":39796,"column_end":79,"column_start":52,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":643,"line_start":643,"suggested_replacement":"align_chars[i].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":79,"highlight_start":52,"text":"        if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")"}]},{"byte_end":39831,"byte_start":39827,"column_end":87,"column_start":83,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":643,"line_start":643,"suggested_replacement":"\"*\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":83,"text":"        if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":39831,"byte_start":39796,"column_end":87,"column_start":52,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":643,"line_start":643,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":52,"text":"        if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1144:12\n     |\n1144 |         if all_matched_nucleotides == true {\n     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":64577,"byte_start":64546,"column_end":43,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1144,"line_start":1144,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":12,"text":"        if all_matched_nucleotides == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":64577,"byte_start":64546,"column_end":43,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1144,"line_start":1144,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":12,"text":"        if all_matched_nucleotides == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:649:33\n    |\n649 |         } else if first == 0 && &align_chars[i].to_string() == &\" \" {\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n649 -         } else if first == 0 && &align_chars[i].to_string() == &\" \" {\n649 +         } else if first == 0 && align_chars[i].to_string() == \" \" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":40099,"byte_start":40072,"column_end":60,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":649,"line_start":649,"suggested_replacement":"align_chars[i].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":60,"highlight_start":33,"text":"        } else if first == 0 && &align_chars[i].to_string() == &\" \" {"}]},{"byte_end":40107,"byte_start":40103,"column_end":68,"column_start":64,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":649,"line_start":649,"suggested_replacement":"\" \"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":68,"highlight_start":64,"text":"        } else if first == 0 && &align_chars[i].to_string() == &\" \" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":40107,"byte_start":40072,"column_end":68,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":649,"line_start":649,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":33,"text":"        } else if first == 0 && &align_chars[i].to_string() == &\" \" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:654:33\n    |\n654 |         } else if first == 1 && &align_chars[i].to_string() == &\" \" {\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n654 -         } else if first == 1 && &align_chars[i].to_string() == &\" \" {\n654 +         } else if first == 1 && align_chars[i].to_string() == \" \" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":40387,"byte_start":40360,"column_end":60,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":654,"line_start":654,"suggested_replacement":"align_chars[i].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":60,"highlight_start":33,"text":"        } else if first == 1 && &align_chars[i].to_string() == &\" \" {"}]},{"byte_end":40395,"byte_start":40391,"column_end":68,"column_start":64,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":654,"line_start":654,"suggested_replacement":"\" \"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":68,"highlight_start":64,"text":"        } else if first == 1 && &align_chars[i].to_string() == &\" \" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":40395,"byte_start":40360,"column_end":68,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":654,"line_start":654,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":33,"text":"        } else if first == 1 && &align_chars[i].to_string() == &\" \" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/realign.rs:712:8\n    |\n712 |     if first_matched_nucleotides.len() == 0 || first_substituted_nucleotides.len() > 0 {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `first_matched_nucleotides.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":43230,"byte_start":43194,"column_end":44,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":712,"line_start":712,"suggested_replacement":"first_matched_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":44,"highlight_start":8,"text":"    if first_matched_nucleotides.len() == 0 || first_substituted_nucleotides.len() > 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":43230,"byte_start":43194,"column_end":44,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":712,"line_start":712,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":8,"text":"    if first_matched_nucleotides.len() == 0 || first_substituted_nucleotides.len() > 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/realign.rs:1174:8\n     |\n1174 |     if first_partially_matched_nucleotides_left.len() > 0\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!first_partially_matched_nucleotides_left.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":66055,"byte_start":66005,"column_end":58,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1174,"line_start":1174,"suggested_replacement":"!first_partially_matched_nucleotides_left.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":8,"text":"    if first_partially_matched_nucleotides_left.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":66055,"byte_start":66005,"column_end":58,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1174,"line_start":1174,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":8,"text":"    if first_partially_matched_nucleotides_left.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/realign.rs:712:48\n    |\n712 |     if first_matched_nucleotides.len() == 0 || first_substituted_nucleotides.len() > 0 {\n    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!first_substituted_nucleotides.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":43273,"byte_start":43234,"column_end":87,"column_start":48,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":712,"line_start":712,"suggested_replacement":"!first_substituted_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":48,"text":"    if first_matched_nucleotides.len() == 0 || first_substituted_nucleotides.len() > 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":43273,"byte_start":43234,"column_end":87,"column_start":48,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":712,"line_start":712,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":48,"text":"    if first_matched_nucleotides.len() == 0 || first_substituted_nucleotides.len() > 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/realign.rs:1175:12\n     |\n1175 |         && first_unmatched_sequence_left_wrt_partially_matched_nucleotides.len() > 0\n     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!first_unmatched_sequence_left_wrt_partially_matched_nucleotides.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":66140,"byte_start":66067,"column_end":85,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1175,"line_start":1175,"suggested_replacement":"!first_unmatched_sequence_left_wrt_partially_matched_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":85,"highlight_start":12,"text":"        && first_unmatched_sequence_left_wrt_partially_matched_nucleotides.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":66140,"byte_start":66067,"column_end":85,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1175,"line_start":1175,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":85,"highlight_start":12,"text":"        && first_unmatched_sequence_left_wrt_partially_matched_nucleotides.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/realign.rs:1182:12\n     |\n1182 |         if q_seq_correct.len() > 0 {\n     |            ^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!q_seq_correct.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":66572,"byte_start":66549,"column_end":35,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1182,"line_start":1182,"suggested_replacement":"!q_seq_correct.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":35,"highlight_start":12,"text":"        if q_seq_correct.len() > 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":66572,"byte_start":66549,"column_end":35,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1182,"line_start":1182,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":12,"text":"        if q_seq_correct.len() > 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/realign.rs:736:8\n    |\n736 |     if alignment_wrong == true {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `alignment_wrong`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":44412,"byte_start":44389,"column_end":31,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":736,"line_start":736,"suggested_replacement":"alignment_wrong","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":31,"highlight_start":8,"text":"    if alignment_wrong == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":44412,"byte_start":44389,"column_end":31,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":736,"line_start":736,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":8,"text":"    if alignment_wrong == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n    --> src/realign.rs:1240:28\n     |\n1240 |                         if hit == false {\n     |                            ^^^^^^^^^^^^ help: try simplifying it as shown: `!hit`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":69794,"byte_start":69782,"column_end":40,"column_start":28,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1240,"line_start":1240,"suggested_replacement":"!hit","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":40,"highlight_start":28,"text":"                        if hit == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":69794,"byte_start":69782,"column_end":40,"column_start":28,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1240,"line_start":1240,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":40,"highlight_start":28,"text":"                        if hit == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1251:20\n     |\n1251 |                 && all_matched_nucleotides == true\n     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":70300,"byte_start":70269,"column_end":51,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1251,"line_start":1251,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":20,"text":"                && all_matched_nucleotides == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":70300,"byte_start":70269,"column_end":51,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1251,"line_start":1251,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":20,"text":"                && all_matched_nucleotides == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n    --> src/realign.rs:1253:20\n     |\n1253 |                 if hit == false {\n     |                    ^^^^^^^^^^^^ help: try simplifying it as shown: `!hit`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":70346,"byte_start":70334,"column_end":32,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1253,"line_start":1253,"suggested_replacement":"!hit","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":32,"highlight_start":20,"text":"                if hit == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":70346,"byte_start":70334,"column_end":32,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1253,"line_start":1253,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":20,"text":"                if hit == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1263:16\n     |\n1263 |             if all_matched_nucleotides == true {\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":70866,"byte_start":70835,"column_end":47,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1263,"line_start":1263,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":16,"text":"            if all_matched_nucleotides == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":70866,"byte_start":70835,"column_end":47,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1263,"line_start":1263,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":16,"text":"            if all_matched_nucleotides == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1276:12\n     |\n1276 |         if all_matched_nucleotides == true {\n     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":71367,"byte_start":71336,"column_end":43,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1276,"line_start":1276,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":12,"text":"        if all_matched_nucleotides == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":71367,"byte_start":71336,"column_end":43,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1276,"line_start":1276,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":12,"text":"        if all_matched_nucleotides == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `k` is only used to index `first_partially_matched_nucleotides_left_vector`\n    --> src/realign.rs:1277:22\n     |\n1277 |             for k in 0..first_partially_matched_nucleotides_left.len() {\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n     |\n1277 -             for k in 0..first_partially_matched_nucleotides_left.len() {\n1277 +             for <item> in first_partially_matched_nucleotides_left_vector.iter().take(first_partially_matched_nucleotides_left.len()) {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":71387,"byte_start":71386,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1277,"line_start":1277,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":18,"highlight_start":17,"text":"            for k in 0..first_partially_matched_nucleotides_left.len() {"}]},{"byte_end":71440,"byte_start":71391,"column_end":71,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1277,"line_start":1277,"suggested_replacement":"first_partially_matched_nucleotides_left_vector.iter().take(first_partially_matched_nucleotides_left.len())","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":71,"highlight_start":22,"text":"            for k in 0..first_partially_matched_nucleotides_left.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `k` is only used to index `first_partially_matched_nucleotides_left_vector`","spans":[{"byte_end":71440,"byte_start":71391,"column_end":71,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1277,"line_start":1277,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":71,"highlight_start":22,"text":"            for k in 0..first_partially_matched_nucleotides_left.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/realign.rs:815:69\n    |\n815 |             if num_iterations != first_matched_nucleotides.len() && all_matched_nucleotides == true\n    |                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":48523,"byte_start":48492,"column_end":100,"column_start":69,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":815,"line_start":815,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":100,"highlight_start":69,"text":"            if num_iterations != first_matched_nucleotides.len() && all_matched_nucleotides == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":48523,"byte_start":48492,"column_end":100,"column_start":69,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":815,"line_start":815,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":100,"highlight_start":69,"text":"            if num_iterations != first_matched_nucleotides.len() && all_matched_nucleotides == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/realign.rs:820:16\n    |\n820 |             if all_matched_nucleotides == true {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":48775,"byte_start":48744,"column_end":47,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":820,"line_start":820,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":16,"text":"            if all_matched_nucleotides == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":48775,"byte_start":48744,"column_end":47,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":820,"line_start":820,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":16,"text":"            if all_matched_nucleotides == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/realign.rs:1314:12\n     |\n1314 |         if align_correct.len() == 0 {\n     |            ^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `align_correct.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":73141,"byte_start":73117,"column_end":36,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1314,"line_start":1314,"suggested_replacement":"align_correct.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":36,"highlight_start":12,"text":"        if align_correct.len() == 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":73141,"byte_start":73117,"column_end":36,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1314,"line_start":1314,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":12,"text":"        if align_correct.len() == 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n    --> src/realign.rs:1321:8\n     |\n1321 |     if alignment_changed == false || align_correct.len() == 0 {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!alignment_changed`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":73492,"byte_start":73466,"column_end":34,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1321,"line_start":1321,"suggested_replacement":"!alignment_changed","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":34,"highlight_start":8,"text":"    if alignment_changed == false || align_correct.len() == 0 {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":73492,"byte_start":73466,"column_end":34,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1321,"line_start":1321,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":8,"text":"    if alignment_changed == false || align_correct.len() == 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/realign.rs:1321:38\n     |\n1321 |     if alignment_changed == false || align_correct.len() == 0 {\n     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `align_correct.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":73520,"byte_start":73496,"column_end":62,"column_start":38,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1321,"line_start":1321,"suggested_replacement":"align_correct.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":38,"text":"    if alignment_changed == false || align_correct.len() == 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":73520,"byte_start":73496,"column_end":62,"column_start":38,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1321,"line_start":1321,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":38,"text":"    if alignment_changed == false || align_correct.len() == 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/realign.rs:860:15\n    |\n860 |     } else if wrong_substitution == true {\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `wrong_substitution`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":50508,"byte_start":50482,"column_end":41,"column_start":15,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":860,"line_start":860,"suggested_replacement":"wrong_substitution","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":41,"highlight_start":15,"text":"    } else if wrong_substitution == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":50508,"byte_start":50482,"column_end":41,"column_start":15,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":860,"line_start":860,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":15,"text":"    } else if wrong_substitution == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/realign.rs:941:20\n    |\n941 |                 && all_substituted_nucleotides == true\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_substituted_nucleotides`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":54653,"byte_start":54618,"column_end":55,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":941,"line_start":941,"suggested_replacement":"all_substituted_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":55,"highlight_start":20,"text":"                && all_substituted_nucleotides == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":54653,"byte_start":54618,"column_end":55,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":941,"line_start":941,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":20,"text":"                && all_substituted_nucleotides == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/realign.rs:946:16\n    |\n946 |             if all_substituted_nucleotides == true {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_substituted_nucleotides`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":54913,"byte_start":54878,"column_end":51,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":946,"line_start":946,"suggested_replacement":"all_substituted_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":16,"text":"            if all_substituted_nucleotides == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":54913,"byte_start":54878,"column_end":51,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":946,"line_start":946,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":16,"text":"            if all_substituted_nucleotides == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needless call to `as_bytes`\n    --> src/realign.rs:1351:9\n     |\n1351 |         query_seq.as_bytes().len(),\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: `len()` can be called directly on strings: `query_seq.len()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_as_bytes\n     = note: `#[warn(clippy::needless_as_bytes)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_as_bytes","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_as_bytes)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"`len()` can be called directly on strings","rendered":null,"spans":[{"byte_end":74622,"byte_start":74596,"column_end":35,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1351,"line_start":1351,"suggested_replacement":"query_seq.len()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":35,"highlight_start":9,"text":"        query_seq.as_bytes().len(),"}]}]}],"code":{"code":"clippy::needless_as_bytes","explanation":null},"level":"warning","message":"needless call to `as_bytes`","spans":[{"byte_end":74622,"byte_start":74596,"column_end":35,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1351,"line_start":1351,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":9,"text":"        query_seq.as_bytes().len(),"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needless call to `as_bytes`\n    --> src/realign.rs:1352:9\n     |\n1352 |         ref_seq.as_bytes().len(),\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: `len()` can be called directly on strings: `ref_seq.len()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_as_bytes\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_as_bytes","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"`len()` can be called directly on strings","rendered":null,"spans":[{"byte_end":74656,"byte_start":74632,"column_end":33,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1352,"line_start":1352,"suggested_replacement":"ref_seq.len()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":33,"highlight_start":9,"text":"        ref_seq.as_bytes().len(),"}]}]}],"code":{"code":"clippy::needless_as_bytes","explanation":null},"level":"warning","message":"needless call to `as_bytes`","spans":[{"byte_end":74656,"byte_start":74632,"column_end":33,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1352,"line_start":1352,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":33,"highlight_start":9,"text":"        ref_seq.as_bytes().len(),"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src/realign.rs:1358:36\n     |\n1358 |     let alignment = aligner.global(&query_seq.as_bytes(), ref_seq.as_bytes());\n     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `query_seq.as_bytes()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n     = note: `#[warn(clippy::needless_borrow)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_borrow)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":74807,"byte_start":74786,"column_end":57,"column_start":36,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1358,"line_start":1358,"suggested_replacement":"query_seq.as_bytes()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":57,"highlight_start":36,"text":"    let alignment = aligner.global(&query_seq.as_bytes(), ref_seq.as_bytes());"}]}]}],"code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","message":"this expression creates a reference which is immediately dereferenced by the compiler","spans":[{"byte_end":74807,"byte_start":74786,"column_end":57,"column_start":36,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1358,"line_start":1358,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":57,"highlight_start":36,"text":"    let alignment = aligner.global(&query_seq.as_bytes(), ref_seq.as_bytes());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/realign.rs:982:15\n    |\n982 |     } else if first_matched_nucleotides.len() > 0\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!first_matched_nucleotides.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":56410,"byte_start":56375,"column_end":50,"column_start":15,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":982,"line_start":982,"suggested_replacement":"!first_matched_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":50,"highlight_start":15,"text":"    } else if first_matched_nucleotides.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":56410,"byte_start":56375,"column_end":50,"column_start":15,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":982,"line_start":982,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":15,"text":"    } else if first_matched_nucleotides.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/realign.rs:983:12\n    |\n983 |         && first_unmatched_sequence.len() > 0\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!first_unmatched_sequence.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":56456,"byte_start":56422,"column_end":46,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":983,"line_start":983,"suggested_replacement":"!first_unmatched_sequence.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":46,"highlight_start":12,"text":"        && first_unmatched_sequence.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":56456,"byte_start":56422,"column_end":46,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":983,"line_start":983,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":12,"text":"        && first_unmatched_sequence.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is used to index `alignment_seq`\n    --> src/realign.rs:1375:14\n     |\n1375 |     for i in 0..alignment_seq.len() {\n     |              ^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator and enumerate()\n     |\n1375 -     for i in 0..alignment_seq.len() {\n1375 +     for (i, <item>) in alignment_seq.iter().enumerate() {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator and enumerate()","rendered":null,"spans":[{"byte_end":75674,"byte_start":75673,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1375,"line_start":1375,"suggested_replacement":"(i, <item>)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":10,"highlight_start":9,"text":"    for i in 0..alignment_seq.len() {"}]},{"byte_end":75700,"byte_start":75678,"column_end":36,"column_start":14,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1375,"line_start":1375,"suggested_replacement":"alignment_seq.iter().enumerate()","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":36,"highlight_start":14,"text":"    for i in 0..alignment_seq.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is used to index `alignment_seq`","spans":[{"byte_end":75700,"byte_start":75678,"column_end":36,"column_start":14,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1375,"line_start":1375,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":14,"text":"    for i in 0..alignment_seq.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n    --> src/realign.rs:1385:22\n     |\n1385 |             align += &\"|\".to_string(); // Add \"|\" when there is a match\n     |                      ^^^^^^^^^^^^^^^^ help: use: `\"|\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n     = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::unnecessary_to_owned)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":76061,"byte_start":76045,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1385,"line_start":1385,"suggested_replacement":"\"|\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":38,"highlight_start":22,"text":"            align += &\"|\".to_string(); // Add \"|\" when there is a match"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":76061,"byte_start":76045,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1385,"line_start":1385,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":22,"text":"            align += &\"|\".to_string(); // Add \"|\" when there is a match"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n    --> src/realign.rs:1395:22\n     |\n1395 |             align += &\"*\".to_string(); // Add \"*\" when there is a substitution\n     |                      ^^^^^^^^^^^^^^^^ help: use: `\"*\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":76461,"byte_start":76445,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1395,"line_start":1395,"suggested_replacement":"\"*\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":38,"highlight_start":22,"text":"            align += &\"*\".to_string(); // Add \"*\" when there is a substitution"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":76461,"byte_start":76445,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1395,"line_start":1395,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":22,"text":"            align += &\"*\".to_string(); // Add \"*\" when there is a substitution"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1032:69\n     |\n1032 |             if num_iterations != first_matched_nucleotides.len() && all_matched_nucleotides == true\n     |                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":58871,"byte_start":58840,"column_end":100,"column_start":69,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1032,"line_start":1032,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":100,"highlight_start":69,"text":"            if num_iterations != first_matched_nucleotides.len() && all_matched_nucleotides == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":58871,"byte_start":58840,"column_end":100,"column_start":69,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1032,"line_start":1032,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":100,"highlight_start":69,"text":"            if num_iterations != first_matched_nucleotides.len() && all_matched_nucleotides == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n    --> src/realign.rs:1399:26\n     |\n1399 |                 q_seq += &\"-\".to_string();\n     |                          ^^^^^^^^^^^^^^^^ help: use: `\"-\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":76788,"byte_start":76772,"column_end":42,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1399,"line_start":1399,"suggested_replacement":"\"-\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":42,"highlight_start":26,"text":"                q_seq += &\"-\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":76788,"byte_start":76772,"column_end":42,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1399,"line_start":1399,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":42,"highlight_start":26,"text":"                q_seq += &\"-\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1037:16\n     |\n1037 |             if all_matched_nucleotides == true {\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":59123,"byte_start":59092,"column_end":47,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1037,"line_start":1037,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":16,"text":"            if all_matched_nucleotides == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":59123,"byte_start":59092,"column_end":47,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1037,"line_start":1037,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":16,"text":"            if all_matched_nucleotides == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1046:12\n     |\n1046 |         if all_matched_nucleotides == true {\n     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":59436,"byte_start":59405,"column_end":43,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1046,"line_start":1046,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":12,"text":"        if all_matched_nucleotides == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":59436,"byte_start":59405,"column_end":43,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1046,"line_start":1046,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":12,"text":"        if all_matched_nucleotides == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n    --> src/realign.rs:1410:26\n     |\n1410 |                 align += &\" \".to_string(); // Add empty space when there is a deletion\n     |                          ^^^^^^^^^^^^^^^^ help: use: `\" \"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":77364,"byte_start":77348,"column_end":42,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1410,"line_start":1410,"suggested_replacement":"\" \"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":42,"highlight_start":26,"text":"                align += &\" \".to_string(); // Add empty space when there is a deletion"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":77364,"byte_start":77348,"column_end":42,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1410,"line_start":1410,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":42,"highlight_start":26,"text":"                align += &\" \".to_string(); // Add empty space when there is a deletion"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n    --> src/realign.rs:1417:22\n     |\n1417 |             r_seq += &\"-\".to_string();\n     |                      ^^^^^^^^^^^^^^^^ help: use: `\"-\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":77658,"byte_start":77642,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1417,"line_start":1417,"suggested_replacement":"\"-\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":38,"highlight_start":22,"text":"            r_seq += &\"-\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":77658,"byte_start":77642,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1417,"line_start":1417,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":22,"text":"            r_seq += &\"-\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n    --> src/realign.rs:1418:22\n     |\n1418 |             align += &\" \".to_string(); // Add empty space when there is an insertion\n     |                      ^^^^^^^^^^^^^^^^ help: use: `\" \"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":77697,"byte_start":77681,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1418,"line_start":1418,"suggested_replacement":"\" \"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":38,"highlight_start":22,"text":"            align += &\" \".to_string(); // Add empty space when there is an insertion"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":77697,"byte_start":77681,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1418,"line_start":1418,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":22,"text":"            align += &\" \".to_string(); // Add empty space when there is an insertion"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/realign.rs:1074:15\n     |\n1074 |     } else if first_partially_matched_nucleotides_right.len() > 0\n     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!first_partially_matched_nucleotides_right.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":60770,"byte_start":60719,"column_end":66,"column_start":15,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1074,"line_start":1074,"suggested_replacement":"!first_partially_matched_nucleotides_right.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":15,"text":"    } else if first_partially_matched_nucleotides_right.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":60770,"byte_start":60719,"column_end":66,"column_start":15,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1074,"line_start":1074,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":15,"text":"    } else if first_partially_matched_nucleotides_right.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/realign.rs:1075:12\n     |\n1075 |         && first_unmatched_sequence_right_wrt_partially_matched_nucleotides.len() > 0\n     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!first_unmatched_sequence_right_wrt_partially_matched_nucleotides.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":60856,"byte_start":60782,"column_end":86,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1075,"line_start":1075,"suggested_replacement":"!first_unmatched_sequence_right_wrt_partially_matched_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":86,"highlight_start":12,"text":"        && first_unmatched_sequence_right_wrt_partially_matched_nucleotides.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":60856,"byte_start":60782,"column_end":86,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1075,"line_start":1075,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":86,"highlight_start":12,"text":"        && first_unmatched_sequence_right_wrt_partially_matched_nucleotides.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1130:20\n     |\n1130 |                 && all_matched_nucleotides == true\n     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":63996,"byte_start":63965,"column_end":51,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1130,"line_start":1130,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":20,"text":"                && all_matched_nucleotides == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":63996,"byte_start":63965,"column_end":51,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1130,"line_start":1130,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":20,"text":"                && all_matched_nucleotides == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1135:16\n     |\n1135 |             if all_matched_nucleotides == true {\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":64264,"byte_start":64233,"column_end":47,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1135,"line_start":1135,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":16,"text":"            if all_matched_nucleotides == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":64264,"byte_start":64233,"column_end":47,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1135,"line_start":1135,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":16,"text":"            if all_matched_nucleotides == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is only used to index `align_chars`\n    --> src/realign.rs:1455:14\n     |\n1455 |     for i in 0..cmp::min(alignment_length_check, align_chars.len()) {\n     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n     |\n1455 -     for i in 0..cmp::min(alignment_length_check, align_chars.len()) {\n1455 +     for <item> in align_chars.iter().take(cmp::min(alignment_length_check, align_chars.len())) {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":80039,"byte_start":80038,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1455,"line_start":1455,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":10,"highlight_start":9,"text":"    for i in 0..cmp::min(alignment_length_check, align_chars.len()) {"}]},{"byte_end":80097,"byte_start":80043,"column_end":68,"column_start":14,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1455,"line_start":1455,"suggested_replacement":"align_chars.iter().take(cmp::min(alignment_length_check, align_chars.len()))","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":68,"highlight_start":14,"text":"    for i in 0..cmp::min(alignment_length_check, align_chars.len()) {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is only used to index `align_chars`","spans":[{"byte_end":80097,"byte_start":80043,"column_end":68,"column_start":14,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1455,"line_start":1455,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":14,"text":"    for i in 0..cmp::min(alignment_length_check, align_chars.len()) {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1144:12\n     |\n1144 |         if all_matched_nucleotides == true {\n     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":64577,"byte_start":64546,"column_end":43,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1144,"line_start":1144,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":12,"text":"        if all_matched_nucleotides == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":64577,"byte_start":64546,"column_end":43,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1144,"line_start":1144,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":12,"text":"        if all_matched_nucleotides == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is only used to index `align_chars`\n    --> src/realign.rs:1468:9\n     |\n1468 |         align_chars.len() - cmp::min(alignment_length_check, align_chars.len())..align_chars.len()\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n     |\n1467 ~     for <item> in\n1468 ~         align_chars.iter().skip(align_chars.len() - cmp::min(alignment_length_check, align_chars.len()))\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":80523,"byte_start":80522,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1467,"line_start":1467,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":10,"highlight_start":9,"text":"    for i in"}]},{"byte_end":80625,"byte_start":80535,"column_end":99,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1468,"line_start":1468,"suggested_replacement":"align_chars.iter().skip(align_chars.len() - cmp::min(alignment_length_check, align_chars.len()))","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":99,"highlight_start":9,"text":"        align_chars.len() - cmp::min(alignment_length_check, align_chars.len())..align_chars.len()"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is only used to index `align_chars`","spans":[{"byte_end":80625,"byte_start":80535,"column_end":99,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1468,"line_start":1468,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":99,"highlight_start":9,"text":"        align_chars.len() - cmp::min(alignment_length_check, align_chars.len())..align_chars.len()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1478:8\n     |\n1478 |     if start_misaligned == true {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `start_misaligned`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":80869,"byte_start":80845,"column_end":32,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1478,"line_start":1478,"suggested_replacement":"start_misaligned","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":32,"highlight_start":8,"text":"    if start_misaligned == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":80869,"byte_start":80845,"column_end":32,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1478,"line_start":1478,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":8,"text":"    if start_misaligned == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/realign.rs:1174:8\n     |\n1174 |     if first_partially_matched_nucleotides_left.len() > 0\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!first_partially_matched_nucleotides_left.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":66055,"byte_start":66005,"column_end":58,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1174,"line_start":1174,"suggested_replacement":"!first_partially_matched_nucleotides_left.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":8,"text":"    if first_partially_matched_nucleotides_left.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":66055,"byte_start":66005,"column_end":58,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1174,"line_start":1174,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":8,"text":"    if first_partially_matched_nucleotides_left.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/realign.rs:1175:12\n     |\n1175 |         && first_unmatched_sequence_left_wrt_partially_matched_nucleotides.len() > 0\n     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!first_unmatched_sequence_left_wrt_partially_matched_nucleotides.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":66140,"byte_start":66067,"column_end":85,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1175,"line_start":1175,"suggested_replacement":"!first_unmatched_sequence_left_wrt_partially_matched_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":85,"highlight_start":12,"text":"        && first_unmatched_sequence_left_wrt_partially_matched_nucleotides.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":66140,"byte_start":66067,"column_end":85,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1175,"line_start":1175,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":85,"highlight_start":12,"text":"        && first_unmatched_sequence_left_wrt_partially_matched_nucleotides.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is used to index `align_chars`\n    --> src/realign.rs:1482:18\n     |\n1482 |         for i in 0..align_final.len() {\n     |                  ^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator and enumerate()\n     |\n1482 -         for i in 0..align_final.len() {\n1482 +         for (i, <item>) in align_chars.iter().enumerate().take(align_final.len()) {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator and enumerate()","rendered":null,"spans":[{"byte_end":81060,"byte_start":81059,"column_end":14,"column_start":13,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1482,"line_start":1482,"suggested_replacement":"(i, <item>)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":14,"highlight_start":13,"text":"        for i in 0..align_final.len() {"}]},{"byte_end":81084,"byte_start":81064,"column_end":38,"column_start":18,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1482,"line_start":1482,"suggested_replacement":"align_chars.iter().enumerate().take(align_final.len())","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":38,"highlight_start":18,"text":"        for i in 0..align_final.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is used to index `align_chars`","spans":[{"byte_end":81084,"byte_start":81064,"column_end":38,"column_start":18,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1482,"line_start":1482,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":18,"text":"        for i in 0..align_final.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/realign.rs:1182:12\n     |\n1182 |         if q_seq_correct.len() > 0 {\n     |            ^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!q_seq_correct.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":66572,"byte_start":66549,"column_end":35,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1182,"line_start":1182,"suggested_replacement":"!q_seq_correct.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":35,"highlight_start":12,"text":"        if q_seq_correct.len() > 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":66572,"byte_start":66549,"column_end":35,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1182,"line_start":1182,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":12,"text":"        if q_seq_correct.len() > 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1500:15\n     |\n1500 |     } else if stop_misaligned == true {\n     |               ^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `stop_misaligned`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":81770,"byte_start":81747,"column_end":38,"column_start":15,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1500,"line_start":1500,"suggested_replacement":"stop_misaligned","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":38,"highlight_start":15,"text":"    } else if stop_misaligned == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":81770,"byte_start":81747,"column_end":38,"column_start":15,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1500,"line_start":1500,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":15,"text":"    } else if stop_misaligned == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n    --> src/realign.rs:1240:28\n     |\n1240 |                         if hit == false {\n     |                            ^^^^^^^^^^^^ help: try simplifying it as shown: `!hit`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":69794,"byte_start":69782,"column_end":40,"column_start":28,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1240,"line_start":1240,"suggested_replacement":"!hit","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":40,"highlight_start":28,"text":"                        if hit == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":69794,"byte_start":69782,"column_end":40,"column_start":28,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1240,"line_start":1240,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":40,"highlight_start":28,"text":"                        if hit == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1251:20\n     |\n1251 |                 && all_matched_nucleotides == true\n     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":70300,"byte_start":70269,"column_end":51,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1251,"line_start":1251,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":20,"text":"                && all_matched_nucleotides == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":70300,"byte_start":70269,"column_end":51,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1251,"line_start":1251,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":20,"text":"                && all_matched_nucleotides == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n    --> src/realign.rs:1253:20\n     |\n1253 |                 if hit == false {\n     |                    ^^^^^^^^^^^^ help: try simplifying it as shown: `!hit`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":70346,"byte_start":70334,"column_end":32,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1253,"line_start":1253,"suggested_replacement":"!hit","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":32,"highlight_start":20,"text":"                if hit == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":70346,"byte_start":70334,"column_end":32,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1253,"line_start":1253,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":20,"text":"                if hit == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1263:16\n     |\n1263 |             if all_matched_nucleotides == true {\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":70866,"byte_start":70835,"column_end":47,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1263,"line_start":1263,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":16,"text":"            if all_matched_nucleotides == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":70866,"byte_start":70835,"column_end":47,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1263,"line_start":1263,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":16,"text":"            if all_matched_nucleotides == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1276:12\n     |\n1276 |         if all_matched_nucleotides == true {\n     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":71367,"byte_start":71336,"column_end":43,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1276,"line_start":1276,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":12,"text":"        if all_matched_nucleotides == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":71367,"byte_start":71336,"column_end":43,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1276,"line_start":1276,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":12,"text":"        if all_matched_nucleotides == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `k` is only used to index `first_partially_matched_nucleotides_left_vector`\n    --> src/realign.rs:1277:22\n     |\n1277 |             for k in 0..first_partially_matched_nucleotides_left.len() {\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n     |\n1277 -             for k in 0..first_partially_matched_nucleotides_left.len() {\n1277 +             for <item> in first_partially_matched_nucleotides_left_vector.iter().take(first_partially_matched_nucleotides_left.len()) {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":71387,"byte_start":71386,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1277,"line_start":1277,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":18,"highlight_start":17,"text":"            for k in 0..first_partially_matched_nucleotides_left.len() {"}]},{"byte_end":71440,"byte_start":71391,"column_end":71,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1277,"line_start":1277,"suggested_replacement":"first_partially_matched_nucleotides_left_vector.iter().take(first_partially_matched_nucleotides_left.len())","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":71,"highlight_start":22,"text":"            for k in 0..first_partially_matched_nucleotides_left.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `k` is only used to index `first_partially_matched_nucleotides_left_vector`","spans":[{"byte_end":71440,"byte_start":71391,"column_end":71,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1277,"line_start":1277,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":71,"highlight_start":22,"text":"            for k in 0..first_partially_matched_nucleotides_left.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this function has too many arguments (11/7)\n    --> src/realign.rs:1532:1\n     |\n1532 | / pub fn determine_start_stop_indel_region_in_read(\n1533 | |     alignment_side: String,\n1534 | |     q_seq_alt: &String,\n1535 | |     q_seq_ref: &String,\n...    |\n1543 | |     indel_length: usize,\n1544 | | ) -> (i64, i64, i64, i64) {\n     | |_________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments","rendered":null,"spans":[]}],"code":{"code":"clippy::too_many_arguments","explanation":null},"level":"warning","message":"this function has too many arguments (11/7)","spans":[{"byte_end":83265,"byte_start":82909,"column_end":26,"column_start":1,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1544,"line_start":1532,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":1,"text":"pub fn determine_start_stop_indel_region_in_read("},{"highlight_end":28,"highlight_start":1,"text":"    alignment_side: String,"},{"highlight_end":24,"highlight_start":1,"text":"    q_seq_alt: &String,"},{"highlight_end":24,"highlight_start":1,"text":"    q_seq_ref: &String,"},{"highlight_end":24,"highlight_start":1,"text":"    r_seq_alt: &String,"},{"highlight_end":24,"highlight_start":1,"text":"    r_seq_ref: &String,"},{"highlight_end":33,"highlight_start":1,"text":"    correct_start_position: i64,"},{"highlight_end":31,"highlight_start":1,"text":"    correct_end_position: i64,"},{"highlight_end":22,"highlight_start":1,"text":"    variant_pos: i64,"},{"highlight_end":23,"highlight_start":1,"text":"    ref_length: usize,"},{"highlight_end":23,"highlight_start":1,"text":"    alt_length: usize,"},{"highlight_end":25,"highlight_start":1,"text":"    indel_length: usize,"},{"highlight_end":26,"highlight_start":1,"text":") -> (i64, i64, i64, i64) {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n    --> src/realign.rs:1534:16\n     |\n1534 |     q_seq_alt: &String,\n     |                ^^^^^^^ help: change this to: `&str`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":83009,"byte_start":83002,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1534,"line_start":1534,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":23,"highlight_start":16,"text":"    q_seq_alt: &String,"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":83009,"byte_start":83002,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1534,"line_start":1534,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":16,"text":"    q_seq_alt: &String,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n    --> src/realign.rs:1535:16\n     |\n1535 |     q_seq_ref: &String,\n     |                ^^^^^^^ help: change this to: `&str`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":83033,"byte_start":83026,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1535,"line_start":1535,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":23,"highlight_start":16,"text":"    q_seq_ref: &String,"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":83033,"byte_start":83026,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1535,"line_start":1535,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":16,"text":"    q_seq_ref: &String,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n    --> src/realign.rs:1536:16\n     |\n1536 |     r_seq_alt: &String,\n     |                ^^^^^^^ help: change this to: `&str`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":83057,"byte_start":83050,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1536,"line_start":1536,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":23,"highlight_start":16,"text":"    r_seq_alt: &String,"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":83057,"byte_start":83050,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1536,"line_start":1536,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":16,"text":"    r_seq_alt: &String,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n    --> src/realign.rs:1537:16\n     |\n1537 |     r_seq_ref: &String,\n     |                ^^^^^^^ help: change this to: `&str`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":83081,"byte_start":83074,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1537,"line_start":1537,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":23,"highlight_start":16,"text":"    r_seq_ref: &String,"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":83081,"byte_start":83074,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1537,"line_start":1537,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":16,"text":"    r_seq_ref: &String,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/realign.rs:1314:12\n     |\n1314 |         if align_correct.len() == 0 {\n     |            ^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `align_correct.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":73141,"byte_start":73117,"column_end":36,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1314,"line_start":1314,"suggested_replacement":"align_correct.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":36,"highlight_start":12,"text":"        if align_correct.len() == 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":73141,"byte_start":73117,"column_end":36,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1314,"line_start":1314,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":12,"text":"        if align_correct.len() == 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n    --> src/realign.rs:1321:8\n     |\n1321 |     if alignment_changed == false || align_correct.len() == 0 {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!alignment_changed`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":73492,"byte_start":73466,"column_end":34,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1321,"line_start":1321,"suggested_replacement":"!alignment_changed","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":34,"highlight_start":8,"text":"    if alignment_changed == false || align_correct.len() == 0 {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":73492,"byte_start":73466,"column_end":34,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1321,"line_start":1321,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":8,"text":"    if alignment_changed == false || align_correct.len() == 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/realign.rs:1321:38\n     |\n1321 |     if alignment_changed == false || align_correct.len() == 0 {\n     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `align_correct.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":73520,"byte_start":73496,"column_end":62,"column_start":38,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1321,"line_start":1321,"suggested_replacement":"align_correct.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":38,"text":"    if alignment_changed == false || align_correct.len() == 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":73520,"byte_start":73496,"column_end":62,"column_start":38,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1321,"line_start":1321,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":38,"text":"    if alignment_changed == false || align_correct.len() == 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n    --> src/realign.rs:1572:26\n     |\n1572 |     if alignment_side == \"left\".to_string() {\n     |                          ^^^^^^^^^^^^^^^^^^ help: try: `*\"left\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n     = note: `#[warn(clippy::cmp_owned)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::cmp_owned)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":85041,"byte_start":85023,"column_end":44,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1572,"line_start":1572,"suggested_replacement":"*\"left\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":44,"highlight_start":26,"text":"    if alignment_side == \"left\".to_string() {"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":85041,"byte_start":85023,"column_end":44,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1572,"line_start":1572,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":26,"text":"    if alignment_side == \"left\".to_string() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting the result of `i64::abs()` to usize\n    --> src/realign.rs:1579:21\n     |\n1579 |         for i in 0..(variant_pos - correct_start_position).abs() as usize {\n     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `(variant_pos - correct_start_position).unsigned_abs()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_abs_to_unsigned\n     = note: `#[warn(clippy::cast_abs_to_unsigned)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_abs_to_unsigned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::cast_abs_to_unsigned)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace with","rendered":null,"spans":[{"byte_end":85542,"byte_start":85498,"column_end":65,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1579,"line_start":1579,"suggested_replacement":"(variant_pos - correct_start_position).unsigned_abs()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":65,"highlight_start":21,"text":"        for i in 0..(variant_pos - correct_start_position).abs() as usize {"}]}]}],"code":{"code":"clippy::cast_abs_to_unsigned","explanation":null},"level":"warning","message":"casting the result of `i64::abs()` to usize","spans":[{"byte_end":85542,"byte_start":85498,"column_end":65,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1579,"line_start":1579,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":65,"highlight_start":21,"text":"        for i in 0..(variant_pos - correct_start_position).abs() as usize {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n    --> src/realign.rs:1605:33\n     |\n1605 |     } else if alignment_side == \"right\".to_string() {\n     |                                 ^^^^^^^^^^^^^^^^^^^ help: try: `*\"right\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":86649,"byte_start":86630,"column_end":52,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1605,"line_start":1605,"suggested_replacement":"*\"right\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":52,"highlight_start":33,"text":"    } else if alignment_side == \"right\".to_string() {"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":86649,"byte_start":86630,"column_end":52,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1605,"line_start":1605,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":33,"text":"    } else if alignment_side == \"right\".to_string() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needless call to `as_bytes`\n    --> src/realign.rs:1351:9\n     |\n1351 |         query_seq.as_bytes().len(),\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: `len()` can be called directly on strings: `query_seq.len()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_as_bytes\n     = note: `#[warn(clippy::needless_as_bytes)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_as_bytes","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_as_bytes)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"`len()` can be called directly on strings","rendered":null,"spans":[{"byte_end":74622,"byte_start":74596,"column_end":35,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1351,"line_start":1351,"suggested_replacement":"query_seq.len()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":35,"highlight_start":9,"text":"        query_seq.as_bytes().len(),"}]}]}],"code":{"code":"clippy::needless_as_bytes","explanation":null},"level":"warning","message":"needless call to `as_bytes`","spans":[{"byte_end":74622,"byte_start":74596,"column_end":35,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1351,"line_start":1351,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":9,"text":"        query_seq.as_bytes().len(),"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needless call to `as_bytes`\n    --> src/realign.rs:1352:9\n     |\n1352 |         ref_seq.as_bytes().len(),\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: `len()` can be called directly on strings: `ref_seq.len()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_as_bytes\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_as_bytes","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"`len()` can be called directly on strings","rendered":null,"spans":[{"byte_end":74656,"byte_start":74632,"column_end":33,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1352,"line_start":1352,"suggested_replacement":"ref_seq.len()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":33,"highlight_start":9,"text":"        ref_seq.as_bytes().len(),"}]}]}],"code":{"code":"clippy::needless_as_bytes","explanation":null},"level":"warning","message":"needless call to `as_bytes`","spans":[{"byte_end":74656,"byte_start":74632,"column_end":33,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1352,"line_start":1352,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":33,"highlight_start":9,"text":"        ref_seq.as_bytes().len(),"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: `if` chain can be rewritten with `match`\n    --> src/realign.rs:1665:9\n     |\n1665 | /         if alt_length > ref_length {\n1666 | |             let red_region_start_ref_left_aligned =\n1667 | |                 q_seq_ref.len() as i64 - correctly_aligned_nclt_in_right_ref - alt_length as i64;\n1668 | |             let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region\n...    |\n1699 | |         }\n     | |_________^ help: consider rewriting the `if` chain with `match`: `match alt_length.cmp(&ref_length) {...}`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain\n     = note: `#[warn(clippy::comparison_chain)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::comparison_chain)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider rewriting the `if` chain with `match`","rendered":null,"spans":[{"byte_end":90924,"byte_start":89190,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1699,"line_start":1665,"suggested_replacement":"match alt_length.cmp(&ref_length) {...}","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":37,"highlight_start":9,"text":"        if alt_length > ref_length {"},{"highlight_end":52,"highlight_start":1,"text":"            let red_region_start_ref_left_aligned ="},{"highlight_end":98,"highlight_start":1,"text":"                q_seq_ref.len() as i64 - correctly_aligned_nclt_in_right_ref - alt_length as i64;"},{"highlight_end":123,"highlight_start":1,"text":"            let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region"},{"highlight_end":83,"highlight_start":1,"text":"            for i in red_region_start_ref_left_aligned + 1..red_region_start_ref {"},{"highlight_end":56,"highlight_start":1,"text":"                if (i as usize) < r_seq_ref_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_ref_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":47,"highlight_start":1,"text":"            if is_complete_insertion == true {"},{"highlight_end":74,"highlight_start":1,"text":"                red_region_start_ref = red_region_start_ref_left_aligned;"},{"highlight_end":80,"highlight_start":1,"text":"                red_region_stop_ref = red_region_start_ref + ref_length as i64;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":44,"highlight_start":1,"text":"        } else if ref_length > alt_length {"},{"highlight_end":52,"highlight_start":1,"text":"            let red_region_start_alt_left_aligned ="},{"highlight_end":98,"highlight_start":1,"text":"                q_seq_alt.len() as i64 - correctly_aligned_nclt_in_right_alt - ref_length as i64;"},{"highlight_end":123,"highlight_start":1,"text":"            let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region"},{"highlight_end":83,"highlight_start":1,"text":"            for i in red_region_start_alt_left_aligned + 1..red_region_start_alt {"},{"highlight_end":56,"highlight_start":1,"text":"                if (i as usize) < r_seq_alt_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_alt_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":47,"highlight_start":1,"text":"            if is_complete_insertion == true {"},{"highlight_end":74,"highlight_start":1,"text":"                red_region_start_alt = red_region_start_alt_left_aligned;"},{"highlight_end":80,"highlight_start":1,"text":"                red_region_stop_alt = red_region_start_alt + alt_length as i64;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":10,"highlight_start":1,"text":"        }"}]}]}],"code":{"code":"clippy::comparison_chain","explanation":null},"level":"warning","message":"`if` chain can be rewritten with `match`","spans":[{"byte_end":90924,"byte_start":89190,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1699,"line_start":1665,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":9,"text":"        if alt_length > ref_length {"},{"highlight_end":52,"highlight_start":1,"text":"            let red_region_start_ref_left_aligned ="},{"highlight_end":98,"highlight_start":1,"text":"                q_seq_ref.len() as i64 - correctly_aligned_nclt_in_right_ref - alt_length as i64;"},{"highlight_end":123,"highlight_start":1,"text":"            let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region"},{"highlight_end":83,"highlight_start":1,"text":"            for i in red_region_start_ref_left_aligned + 1..red_region_start_ref {"},{"highlight_end":56,"highlight_start":1,"text":"                if (i as usize) < r_seq_ref_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_ref_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":47,"highlight_start":1,"text":"            if is_complete_insertion == true {"},{"highlight_end":74,"highlight_start":1,"text":"                red_region_start_ref = red_region_start_ref_left_aligned;"},{"highlight_end":80,"highlight_start":1,"text":"                red_region_stop_ref = red_region_start_ref + ref_length as i64;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":44,"highlight_start":1,"text":"        } else if ref_length > alt_length {"},{"highlight_end":52,"highlight_start":1,"text":"            let red_region_start_alt_left_aligned ="},{"highlight_end":98,"highlight_start":1,"text":"                q_seq_alt.len() as i64 - correctly_aligned_nclt_in_right_alt - ref_length as i64;"},{"highlight_end":123,"highlight_start":1,"text":"            let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region"},{"highlight_end":83,"highlight_start":1,"text":"            for i in red_region_start_alt_left_aligned + 1..red_region_start_alt {"},{"highlight_end":56,"highlight_start":1,"text":"                if (i as usize) < r_seq_alt_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_alt_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":47,"highlight_start":1,"text":"            if is_complete_insertion == true {"},{"highlight_end":74,"highlight_start":1,"text":"                red_region_start_alt = red_region_start_alt_left_aligned;"},{"highlight_end":80,"highlight_start":1,"text":"                red_region_stop_alt = red_region_start_alt + alt_length as i64;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":10,"highlight_start":1,"text":"        }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src/realign.rs:1358:36\n     |\n1358 |     let alignment = aligner.global(&query_seq.as_bytes(), ref_seq.as_bytes());\n     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `query_seq.as_bytes()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n     = note: `#[warn(clippy::needless_borrow)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_borrow)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":74807,"byte_start":74786,"column_end":57,"column_start":36,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1358,"line_start":1358,"suggested_replacement":"query_seq.as_bytes()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":57,"highlight_start":36,"text":"    let alignment = aligner.global(&query_seq.as_bytes(), ref_seq.as_bytes());"}]}]}],"code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","message":"this expression creates a reference which is immediately dereferenced by the compiler","spans":[{"byte_end":74807,"byte_start":74786,"column_end":57,"column_start":36,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1358,"line_start":1358,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":57,"highlight_start":36,"text":"    let alignment = aligner.global(&query_seq.as_bytes(), ref_seq.as_bytes());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1678:16\n     |\n1678 |             if is_complete_insertion == true {\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `is_complete_insertion`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":89874,"byte_start":89845,"column_end":45,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1678,"line_start":1678,"suggested_replacement":"is_complete_insertion","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":45,"highlight_start":16,"text":"            if is_complete_insertion == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":89874,"byte_start":89845,"column_end":45,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1678,"line_start":1678,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":16,"text":"            if is_complete_insertion == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is used to index `alignment_seq`\n    --> src/realign.rs:1375:14\n     |\n1375 |     for i in 0..alignment_seq.len() {\n     |              ^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator and enumerate()\n     |\n1375 -     for i in 0..alignment_seq.len() {\n1375 +     for (i, <item>) in alignment_seq.iter().enumerate() {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator and enumerate()","rendered":null,"spans":[{"byte_end":75674,"byte_start":75673,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1375,"line_start":1375,"suggested_replacement":"(i, <item>)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":10,"highlight_start":9,"text":"    for i in 0..alignment_seq.len() {"}]},{"byte_end":75700,"byte_start":75678,"column_end":36,"column_start":14,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1375,"line_start":1375,"suggested_replacement":"alignment_seq.iter().enumerate()","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":36,"highlight_start":14,"text":"    for i in 0..alignment_seq.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is used to index `alignment_seq`","spans":[{"byte_end":75700,"byte_start":75678,"column_end":36,"column_start":14,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1375,"line_start":1375,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":14,"text":"    for i in 0..alignment_seq.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1695:16\n     |\n1695 |             if is_complete_insertion == true {\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `is_complete_insertion`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":90744,"byte_start":90715,"column_end":45,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1695,"line_start":1695,"suggested_replacement":"is_complete_insertion","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":45,"highlight_start":16,"text":"            if is_complete_insertion == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":90744,"byte_start":90715,"column_end":45,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1695,"line_start":1695,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":16,"text":"            if is_complete_insertion == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n    --> src/realign.rs:1385:22\n     |\n1385 |             align += &\"|\".to_string(); // Add \"|\" when there is a match\n     |                      ^^^^^^^^^^^^^^^^ help: use: `\"|\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n     = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::unnecessary_to_owned)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":76061,"byte_start":76045,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1385,"line_start":1385,"suggested_replacement":"\"|\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":38,"highlight_start":22,"text":"            align += &\"|\".to_string(); // Add \"|\" when there is a match"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":76061,"byte_start":76045,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1385,"line_start":1385,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":22,"text":"            align += &\"|\".to_string(); // Add \"|\" when there is a match"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n    --> src/realign.rs:1741:26\n     |\n1741 |     if alignment_side == \"left\".to_string()\n     |                          ^^^^^^^^^^^^^^^^^^ help: try: `*\"left\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":92549,"byte_start":92531,"column_end":44,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1741,"line_start":1741,"suggested_replacement":"*\"left\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":44,"highlight_start":26,"text":"    if alignment_side == \"left\".to_string()"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":92549,"byte_start":92531,"column_end":44,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1741,"line_start":1741,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":26,"text":"    if alignment_side == \"left\".to_string()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n    --> src/realign.rs:1395:22\n     |\n1395 |             align += &\"*\".to_string(); // Add \"*\" when there is a substitution\n     |                      ^^^^^^^^^^^^^^^^ help: use: `\"*\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":76461,"byte_start":76445,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1395,"line_start":1395,"suggested_replacement":"\"*\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":38,"highlight_start":22,"text":"            align += &\"*\".to_string(); // Add \"*\" when there is a substitution"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":76461,"byte_start":76445,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1395,"line_start":1395,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":22,"text":"            align += &\"*\".to_string(); // Add \"*\" when there is a substitution"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: `if` chain can be rewritten with `match`\n    --> src/realign.rs:1763:9\n     |\n1763 | /         if alt_length > ref_length {\n1764 | |             let red_region_start_ref_left_aligned =\n1765 | |                 q_seq_alt.len() as i64 - correctly_aligned_nclt_in_right_alt - alt_length as i64;\n1766 | |             let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region\n...    |\n1797 | |         }\n     | |_________^ help: consider rewriting the `if` chain with `match`: `match alt_length.cmp(&ref_length) {...}`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider rewriting the `if` chain with `match`","rendered":null,"spans":[{"byte_end":95678,"byte_start":93944,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1797,"line_start":1763,"suggested_replacement":"match alt_length.cmp(&ref_length) {...}","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":37,"highlight_start":9,"text":"        if alt_length > ref_length {"},{"highlight_end":52,"highlight_start":1,"text":"            let red_region_start_ref_left_aligned ="},{"highlight_end":98,"highlight_start":1,"text":"                q_seq_alt.len() as i64 - correctly_aligned_nclt_in_right_alt - alt_length as i64;"},{"highlight_end":123,"highlight_start":1,"text":"            let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region"},{"highlight_end":83,"highlight_start":1,"text":"            for i in red_region_start_ref_left_aligned + 1..red_region_start_ref {"},{"highlight_end":56,"highlight_start":1,"text":"                if (i as usize) < r_seq_ref_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_ref_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":47,"highlight_start":1,"text":"            if is_complete_insertion == true {"},{"highlight_end":74,"highlight_start":1,"text":"                red_region_start_ref = red_region_start_ref_left_aligned;"},{"highlight_end":80,"highlight_start":1,"text":"                red_region_stop_ref = red_region_start_ref + ref_length as i64;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":44,"highlight_start":1,"text":"        } else if ref_length > alt_length {"},{"highlight_end":52,"highlight_start":1,"text":"            let red_region_start_alt_left_aligned ="},{"highlight_end":98,"highlight_start":1,"text":"                q_seq_ref.len() as i64 - correctly_aligned_nclt_in_right_ref - ref_length as i64;"},{"highlight_end":123,"highlight_start":1,"text":"            let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region"},{"highlight_end":83,"highlight_start":1,"text":"            for i in red_region_start_alt_left_aligned + 1..red_region_start_alt {"},{"highlight_end":56,"highlight_start":1,"text":"                if (i as usize) < r_seq_alt_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_alt_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":47,"highlight_start":1,"text":"            if is_complete_insertion == true {"},{"highlight_end":74,"highlight_start":1,"text":"                red_region_start_alt = red_region_start_alt_left_aligned;"},{"highlight_end":80,"highlight_start":1,"text":"                red_region_stop_alt = red_region_start_alt + alt_length as i64;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":10,"highlight_start":1,"text":"        }"}]}]}],"code":{"code":"clippy::comparison_chain","explanation":null},"level":"warning","message":"`if` chain can be rewritten with `match`","spans":[{"byte_end":95678,"byte_start":93944,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1797,"line_start":1763,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":9,"text":"        if alt_length > ref_length {"},{"highlight_end":52,"highlight_start":1,"text":"            let red_region_start_ref_left_aligned ="},{"highlight_end":98,"highlight_start":1,"text":"                q_seq_alt.len() as i64 - correctly_aligned_nclt_in_right_alt - alt_length as i64;"},{"highlight_end":123,"highlight_start":1,"text":"            let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region"},{"highlight_end":83,"highlight_start":1,"text":"            for i in red_region_start_ref_left_aligned + 1..red_region_start_ref {"},{"highlight_end":56,"highlight_start":1,"text":"                if (i as usize) < r_seq_ref_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_ref_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":47,"highlight_start":1,"text":"            if is_complete_insertion == true {"},{"highlight_end":74,"highlight_start":1,"text":"                red_region_start_ref = red_region_start_ref_left_aligned;"},{"highlight_end":80,"highlight_start":1,"text":"                red_region_stop_ref = red_region_start_ref + ref_length as i64;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":44,"highlight_start":1,"text":"        } else if ref_length > alt_length {"},{"highlight_end":52,"highlight_start":1,"text":"            let red_region_start_alt_left_aligned ="},{"highlight_end":98,"highlight_start":1,"text":"                q_seq_ref.len() as i64 - correctly_aligned_nclt_in_right_ref - ref_length as i64;"},{"highlight_end":123,"highlight_start":1,"text":"            let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region"},{"highlight_end":83,"highlight_start":1,"text":"            for i in red_region_start_alt_left_aligned + 1..red_region_start_alt {"},{"highlight_end":56,"highlight_start":1,"text":"                if (i as usize) < r_seq_alt_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_alt_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":47,"highlight_start":1,"text":"            if is_complete_insertion == true {"},{"highlight_end":74,"highlight_start":1,"text":"                red_region_start_alt = red_region_start_alt_left_aligned;"},{"highlight_end":80,"highlight_start":1,"text":"                red_region_stop_alt = red_region_start_alt + alt_length as i64;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":10,"highlight_start":1,"text":"        }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n    --> src/realign.rs:1399:26\n     |\n1399 |                 q_seq += &\"-\".to_string();\n     |                          ^^^^^^^^^^^^^^^^ help: use: `\"-\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":76788,"byte_start":76772,"column_end":42,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1399,"line_start":1399,"suggested_replacement":"\"-\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":42,"highlight_start":26,"text":"                q_seq += &\"-\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":76788,"byte_start":76772,"column_end":42,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1399,"line_start":1399,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":42,"highlight_start":26,"text":"                q_seq += &\"-\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1776:16\n     |\n1776 |             if is_complete_insertion == true {\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `is_complete_insertion`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":94628,"byte_start":94599,"column_end":45,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1776,"line_start":1776,"suggested_replacement":"is_complete_insertion","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":45,"highlight_start":16,"text":"            if is_complete_insertion == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":94628,"byte_start":94599,"column_end":45,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1776,"line_start":1776,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":16,"text":"            if is_complete_insertion == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n    --> src/realign.rs:1410:26\n     |\n1410 |                 align += &\" \".to_string(); // Add empty space when there is a deletion\n     |                          ^^^^^^^^^^^^^^^^ help: use: `\" \"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":77364,"byte_start":77348,"column_end":42,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1410,"line_start":1410,"suggested_replacement":"\" \"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":42,"highlight_start":26,"text":"                align += &\" \".to_string(); // Add empty space when there is a deletion"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":77364,"byte_start":77348,"column_end":42,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1410,"line_start":1410,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":42,"highlight_start":26,"text":"                align += &\" \".to_string(); // Add empty space when there is a deletion"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n    --> src/realign.rs:1417:22\n     |\n1417 |             r_seq += &\"-\".to_string();\n     |                      ^^^^^^^^^^^^^^^^ help: use: `\"-\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":77658,"byte_start":77642,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1417,"line_start":1417,"suggested_replacement":"\"-\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":38,"highlight_start":22,"text":"            r_seq += &\"-\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":77658,"byte_start":77642,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1417,"line_start":1417,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":22,"text":"            r_seq += &\"-\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1793:16\n     |\n1793 |             if is_complete_insertion == true {\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `is_complete_insertion`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":95498,"byte_start":95469,"column_end":45,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1793,"line_start":1793,"suggested_replacement":"is_complete_insertion","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":45,"highlight_start":16,"text":"            if is_complete_insertion == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":95498,"byte_start":95469,"column_end":45,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1793,"line_start":1793,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":16,"text":"            if is_complete_insertion == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n    --> src/realign.rs:1798:33\n     |\n1798 |     } else if alignment_side == \"right\".to_string()\n     |                                 ^^^^^^^^^^^^^^^^^^^ help: try: `*\"right\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":95730,"byte_start":95711,"column_end":52,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1798,"line_start":1798,"suggested_replacement":"*\"right\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":52,"highlight_start":33,"text":"    } else if alignment_side == \"right\".to_string()"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":95730,"byte_start":95711,"column_end":52,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1798,"line_start":1798,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":33,"text":"    } else if alignment_side == \"right\".to_string()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n    --> src/realign.rs:1418:22\n     |\n1418 |             align += &\" \".to_string(); // Add empty space when there is an insertion\n     |                      ^^^^^^^^^^^^^^^^ help: use: `\" \"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":77697,"byte_start":77681,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1418,"line_start":1418,"suggested_replacement":"\" \"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":38,"highlight_start":22,"text":"            align += &\" \".to_string(); // Add empty space when there is an insertion"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":77697,"byte_start":77681,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1418,"line_start":1418,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":22,"text":"            align += &\" \".to_string(); // Add empty space when there is an insertion"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: returning the result of a `let` binding from a block\n  --> src/stats_functions.rs:28:13\n   |\n20 | /             let p_value = fishers_exact(&[\n21 | |                 alternate_forward_count,\n22 | |                 alternate_reverse_count,\n23 | |                 reference_forward_count,\n...  |\n26 | |             .unwrap()\n27 | |             .two_tail_pvalue;\n   | |_____________________________- unnecessary `let` binding\n28 |               p_value\n   |               ^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n   = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n   |\n20 ~             \n21 ~             fishers_exact(&[\n22 +                 alternate_forward_count,\n23 +                 alternate_reverse_count,\n24 +                 reference_forward_count,\n25 +                 reference_reverse_count,\n26 +             ])\n27 +             .unwrap()\n28 +             .two_tail_pvalue\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::let_and_return)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"return the expression directly","rendered":null,"spans":[{"byte_end":1383,"byte_start":1122,"column_end":30,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":27,"line_start":20,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":13,"text":"            let p_value = fishers_exact(&["},{"highlight_end":41,"highlight_start":1,"text":"                alternate_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                alternate_reverse_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_reverse_count,"},{"highlight_end":15,"highlight_start":1,"text":"            ])"},{"highlight_end":22,"highlight_start":1,"text":"            .unwrap()"},{"highlight_end":30,"highlight_start":1,"text":"            .two_tail_pvalue;"}]},{"byte_end":1403,"byte_start":1396,"column_end":20,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":28,"line_start":28,"suggested_replacement":"fishers_exact(&[\n                alternate_forward_count,\n                alternate_reverse_count,\n                reference_forward_count,\n                reference_reverse_count,\n            ])\n            .unwrap()\n            .two_tail_pvalue","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":20,"highlight_start":13,"text":"            p_value"}]}]}],"code":{"code":"clippy::let_and_return","explanation":null},"level":"warning","message":"returning the result of a `let` binding from a block","spans":[{"byte_end":1383,"byte_start":1122,"column_end":30,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":false,"label":"unnecessary `let` binding","line_end":27,"line_start":20,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":13,"text":"            let p_value = fishers_exact(&["},{"highlight_end":41,"highlight_start":1,"text":"                alternate_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                alternate_reverse_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_reverse_count,"},{"highlight_end":15,"highlight_start":1,"text":"            ])"},{"highlight_end":22,"highlight_start":1,"text":"            .unwrap()"},{"highlight_end":30,"highlight_start":1,"text":"            .two_tail_pvalue;"}]},{"byte_end":1403,"byte_start":1396,"column_end":20,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":28,"line_start":28,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":13,"text":"            p_value"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: returning the result of a `let` binding from a block\n  --> src/stats_functions.rs:58:13\n   |\n50 | /             let p_value = fishers_exact(&[\n51 | |                 alternate_forward_count,\n52 | |                 alternate_reverse_count,\n53 | |                 reference_forward_count,\n...  |\n56 | |             .unwrap()\n57 | |             .two_tail_pvalue;\n   | |_____________________________- unnecessary `let` binding\n58 |               p_value\n   |               ^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n   |\n50 ~             \n51 ~             fishers_exact(&[\n52 +                 alternate_forward_count,\n53 +                 alternate_reverse_count,\n54 +                 reference_forward_count,\n55 +                 reference_reverse_count,\n56 +             ])\n57 +             .unwrap()\n58 +             .two_tail_pvalue\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"return the expression directly","rendered":null,"spans":[{"byte_end":2412,"byte_start":2151,"column_end":30,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":57,"line_start":50,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":13,"text":"            let p_value = fishers_exact(&["},{"highlight_end":41,"highlight_start":1,"text":"                alternate_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                alternate_reverse_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_reverse_count,"},{"highlight_end":15,"highlight_start":1,"text":"            ])"},{"highlight_end":22,"highlight_start":1,"text":"            .unwrap()"},{"highlight_end":30,"highlight_start":1,"text":"            .two_tail_pvalue;"}]},{"byte_end":2432,"byte_start":2425,"column_end":20,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":58,"line_start":58,"suggested_replacement":"fishers_exact(&[\n                alternate_forward_count,\n                alternate_reverse_count,\n                reference_forward_count,\n                reference_reverse_count,\n            ])\n            .unwrap()\n            .two_tail_pvalue","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":20,"highlight_start":13,"text":"            p_value"}]}]}],"code":{"code":"clippy::let_and_return","explanation":null},"level":"warning","message":"returning the result of a `let` binding from a block","spans":[{"byte_end":2412,"byte_start":2151,"column_end":30,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":false,"label":"unnecessary `let` binding","line_end":57,"line_start":50,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":13,"text":"            let p_value = fishers_exact(&["},{"highlight_end":41,"highlight_start":1,"text":"                alternate_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                alternate_reverse_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_reverse_count,"},{"highlight_end":15,"highlight_start":1,"text":"            ])"},{"highlight_end":22,"highlight_start":1,"text":"            .unwrap()"},{"highlight_end":30,"highlight_start":1,"text":"            .two_tail_pvalue;"}]},{"byte_end":2432,"byte_start":2425,"column_end":20,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":58,"line_start":58,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":13,"text":"            p_value"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is only used to index `align_chars`\n    --> src/realign.rs:1455:14\n     |\n1455 |     for i in 0..cmp::min(alignment_length_check, align_chars.len()) {\n     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n     |\n1455 -     for i in 0..cmp::min(alignment_length_check, align_chars.len()) {\n1455 +     for <item> in align_chars.iter().take(cmp::min(alignment_length_check, align_chars.len())) {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":80039,"byte_start":80038,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1455,"line_start":1455,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":10,"highlight_start":9,"text":"    for i in 0..cmp::min(alignment_length_check, align_chars.len()) {"}]},{"byte_end":80097,"byte_start":80043,"column_end":68,"column_start":14,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1455,"line_start":1455,"suggested_replacement":"align_chars.iter().take(cmp::min(alignment_length_check, align_chars.len()))","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":68,"highlight_start":14,"text":"    for i in 0..cmp::min(alignment_length_check, align_chars.len()) {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is only used to index `align_chars`","spans":[{"byte_end":80097,"byte_start":80043,"column_end":68,"column_start":14,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1455,"line_start":1455,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":14,"text":"    for i in 0..cmp::min(alignment_length_check, align_chars.len()) {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is only used to index `align_chars`\n    --> src/realign.rs:1468:9\n     |\n1468 |         align_chars.len() - cmp::min(alignment_length_check, align_chars.len())..align_chars.len()\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n     |\n1467 ~     for <item> in\n1468 ~         align_chars.iter().skip(align_chars.len() - cmp::min(alignment_length_check, align_chars.len()))\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":80523,"byte_start":80522,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1467,"line_start":1467,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":10,"highlight_start":9,"text":"    for i in"}]},{"byte_end":80625,"byte_start":80535,"column_end":99,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1468,"line_start":1468,"suggested_replacement":"align_chars.iter().skip(align_chars.len() - cmp::min(alignment_length_check, align_chars.len()))","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":99,"highlight_start":9,"text":"        align_chars.len() - cmp::min(alignment_length_check, align_chars.len())..align_chars.len()"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is only used to index `align_chars`","spans":[{"byte_end":80625,"byte_start":80535,"column_end":99,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1468,"line_start":1468,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":99,"highlight_start":9,"text":"        align_chars.len() - cmp::min(alignment_length_check, align_chars.len())..align_chars.len()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1478:8\n     |\n1478 |     if start_misaligned == true {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `start_misaligned`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":80869,"byte_start":80845,"column_end":32,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1478,"line_start":1478,"suggested_replacement":"start_misaligned","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":32,"highlight_start":8,"text":"    if start_misaligned == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":80869,"byte_start":80845,"column_end":32,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1478,"line_start":1478,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":8,"text":"    if start_misaligned == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is used to index `align_chars`\n    --> src/realign.rs:1482:18\n     |\n1482 |         for i in 0..align_final.len() {\n     |                  ^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator and enumerate()\n     |\n1482 -         for i in 0..align_final.len() {\n1482 +         for (i, <item>) in align_chars.iter().enumerate().take(align_final.len()) {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator and enumerate()","rendered":null,"spans":[{"byte_end":81060,"byte_start":81059,"column_end":14,"column_start":13,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1482,"line_start":1482,"suggested_replacement":"(i, <item>)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":14,"highlight_start":13,"text":"        for i in 0..align_final.len() {"}]},{"byte_end":81084,"byte_start":81064,"column_end":38,"column_start":18,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1482,"line_start":1482,"suggested_replacement":"align_chars.iter().enumerate().take(align_final.len())","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":38,"highlight_start":18,"text":"        for i in 0..align_final.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is used to index `align_chars`","spans":[{"byte_end":81084,"byte_start":81064,"column_end":38,"column_start":18,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1482,"line_start":1482,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":18,"text":"        for i in 0..align_final.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1500:15\n     |\n1500 |     } else if stop_misaligned == true {\n     |               ^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `stop_misaligned`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":81770,"byte_start":81747,"column_end":38,"column_start":15,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1500,"line_start":1500,"suggested_replacement":"stop_misaligned","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":38,"highlight_start":15,"text":"    } else if stop_misaligned == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":81770,"byte_start":81747,"column_end":38,"column_start":15,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1500,"line_start":1500,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":15,"text":"    } else if stop_misaligned == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this function has too many arguments (11/7)\n    --> src/realign.rs:1532:1\n     |\n1532 | / pub fn determine_start_stop_indel_region_in_read(\n1533 | |     alignment_side: String,\n1534 | |     q_seq_alt: &String,\n1535 | |     q_seq_ref: &String,\n...    |\n1543 | |     indel_length: usize,\n1544 | | ) -> (i64, i64, i64, i64) {\n     | |_________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments","rendered":null,"spans":[]}],"code":{"code":"clippy::too_many_arguments","explanation":null},"level":"warning","message":"this function has too many arguments (11/7)","spans":[{"byte_end":83265,"byte_start":82909,"column_end":26,"column_start":1,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1544,"line_start":1532,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":1,"text":"pub fn determine_start_stop_indel_region_in_read("},{"highlight_end":28,"highlight_start":1,"text":"    alignment_side: String,"},{"highlight_end":24,"highlight_start":1,"text":"    q_seq_alt: &String,"},{"highlight_end":24,"highlight_start":1,"text":"    q_seq_ref: &String,"},{"highlight_end":24,"highlight_start":1,"text":"    r_seq_alt: &String,"},{"highlight_end":24,"highlight_start":1,"text":"    r_seq_ref: &String,"},{"highlight_end":33,"highlight_start":1,"text":"    correct_start_position: i64,"},{"highlight_end":31,"highlight_start":1,"text":"    correct_end_position: i64,"},{"highlight_end":22,"highlight_start":1,"text":"    variant_pos: i64,"},{"highlight_end":23,"highlight_start":1,"text":"    ref_length: usize,"},{"highlight_end":23,"highlight_start":1,"text":"    alt_length: usize,"},{"highlight_end":25,"highlight_start":1,"text":"    indel_length: usize,"},{"highlight_end":26,"highlight_start":1,"text":") -> (i64, i64, i64, i64) {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n    --> src/realign.rs:1534:16\n     |\n1534 |     q_seq_alt: &String,\n     |                ^^^^^^^ help: change this to: `&str`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":83009,"byte_start":83002,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1534,"line_start":1534,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":23,"highlight_start":16,"text":"    q_seq_alt: &String,"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":83009,"byte_start":83002,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1534,"line_start":1534,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":16,"text":"    q_seq_alt: &String,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n    --> src/realign.rs:1535:16\n     |\n1535 |     q_seq_ref: &String,\n     |                ^^^^^^^ help: change this to: `&str`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":83033,"byte_start":83026,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1535,"line_start":1535,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":23,"highlight_start":16,"text":"    q_seq_ref: &String,"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":83033,"byte_start":83026,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1535,"line_start":1535,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":16,"text":"    q_seq_ref: &String,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n    --> src/realign.rs:1536:16\n     |\n1536 |     r_seq_alt: &String,\n     |                ^^^^^^^ help: change this to: `&str`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":83057,"byte_start":83050,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1536,"line_start":1536,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":23,"highlight_start":16,"text":"    r_seq_alt: &String,"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":83057,"byte_start":83050,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1536,"line_start":1536,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":16,"text":"    r_seq_alt: &String,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n    --> src/realign.rs:1537:16\n     |\n1537 |     r_seq_ref: &String,\n     |                ^^^^^^^ help: change this to: `&str`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":83081,"byte_start":83074,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1537,"line_start":1537,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":23,"highlight_start":16,"text":"    r_seq_ref: &String,"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":83081,"byte_start":83074,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1537,"line_start":1537,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":16,"text":"    r_seq_ref: &String,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n    --> src/realign.rs:1572:26\n     |\n1572 |     if alignment_side == \"left\".to_string() {\n     |                          ^^^^^^^^^^^^^^^^^^ help: try: `*\"left\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n     = note: `#[warn(clippy::cmp_owned)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::cmp_owned)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":85041,"byte_start":85023,"column_end":44,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1572,"line_start":1572,"suggested_replacement":"*\"left\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":44,"highlight_start":26,"text":"    if alignment_side == \"left\".to_string() {"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":85041,"byte_start":85023,"column_end":44,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1572,"line_start":1572,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":26,"text":"    if alignment_side == \"left\".to_string() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting the result of `i64::abs()` to usize\n    --> src/realign.rs:1579:21\n     |\n1579 |         for i in 0..(variant_pos - correct_start_position).abs() as usize {\n     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `(variant_pos - correct_start_position).unsigned_abs()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_abs_to_unsigned\n     = note: `#[warn(clippy::cast_abs_to_unsigned)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_abs_to_unsigned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::cast_abs_to_unsigned)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace with","rendered":null,"spans":[{"byte_end":85542,"byte_start":85498,"column_end":65,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1579,"line_start":1579,"suggested_replacement":"(variant_pos - correct_start_position).unsigned_abs()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":65,"highlight_start":21,"text":"        for i in 0..(variant_pos - correct_start_position).abs() as usize {"}]}]}],"code":{"code":"clippy::cast_abs_to_unsigned","explanation":null},"level":"warning","message":"casting the result of `i64::abs()` to usize","spans":[{"byte_end":85542,"byte_start":85498,"column_end":65,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1579,"line_start":1579,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":65,"highlight_start":21,"text":"        for i in 0..(variant_pos - correct_start_position).abs() as usize {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/stats_functions.rs:194:12\n    |\n194 |         if is_repeat == false {\n    |            ^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!is_repeat`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n    = note: `#[warn(clippy::bool_comparison)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::bool_comparison)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":7870,"byte_start":7852,"column_end":30,"column_start":12,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":194,"line_start":194,"suggested_replacement":"!is_repeat","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":30,"highlight_start":12,"text":"        if is_repeat == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":7870,"byte_start":7852,"column_end":30,"column_start":12,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":194,"line_start":194,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":12,"text":"        if is_repeat == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n    --> src/realign.rs:1605:33\n     |\n1605 |     } else if alignment_side == \"right\".to_string() {\n     |                                 ^^^^^^^^^^^^^^^^^^^ help: try: `*\"right\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":86649,"byte_start":86630,"column_end":52,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1605,"line_start":1605,"suggested_replacement":"*\"right\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":52,"highlight_start":33,"text":"    } else if alignment_side == \"right\".to_string() {"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":86649,"byte_start":86630,"column_end":52,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1605,"line_start":1605,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":33,"text":"    } else if alignment_side == \"right\".to_string() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/stats_functions.rs:208:16\n    |\n208 |             if is_repeat == false {\n    |                ^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!is_repeat`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":8390,"byte_start":8372,"column_end":34,"column_start":16,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":208,"line_start":208,"suggested_replacement":"!is_repeat","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":34,"highlight_start":16,"text":"            if is_repeat == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":8390,"byte_start":8372,"column_end":34,"column_start":16,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":208,"line_start":208,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":16,"text":"            if is_repeat == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/stats_functions.rs:266:26\n    |\n266 |     let u_y = weight_y - (group2.len() as f64 * (group2.len() as f64 + 1.0) / 2.0) as f64;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(group2.len() as f64 * (group2.len() as f64 + 1.0) / 2.0)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::unnecessary_cast)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":10522,"byte_start":10458,"column_end":90,"column_start":26,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":266,"line_start":266,"suggested_replacement":"(group2.len() as f64 * (group2.len() as f64 + 1.0) / 2.0)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":90,"highlight_start":26,"text":"    let u_y = weight_y - (group2.len() as f64 * (group2.len() as f64 + 1.0) / 2.0) as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":10522,"byte_start":10458,"column_end":90,"column_start":26,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":266,"line_start":266,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":90,"highlight_start":26,"text":"    let u_y = weight_y - (group2.len() as f64 * (group2.len() as f64 + 1.0) / 2.0) as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/stats_functions.rs:270:26\n    |\n270 |     let u_x = weight_x - (group1.len() as f64 * (group1.len() as f64 + 1.0) / 2.0) as f64;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(group1.len() as f64 * (group1.len() as f64 + 1.0) / 2.0)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":10726,"byte_start":10662,"column_end":90,"column_start":26,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":270,"line_start":270,"suggested_replacement":"(group1.len() as f64 * (group1.len() as f64 + 1.0) / 2.0)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":90,"highlight_start":26,"text":"    let u_x = weight_x - (group1.len() as f64 * (group1.len() as f64 + 1.0) / 2.0) as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":10726,"byte_start":10662,"column_end":90,"column_start":26,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":270,"line_start":270,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":90,"highlight_start":26,"text":"    let u_x = weight_x - (group1.len() as f64 * (group1.len() as f64 + 1.0) / 2.0) as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: `if` chain can be rewritten with `match`\n    --> src/realign.rs:1665:9\n     |\n1665 | /         if alt_length > ref_length {\n1666 | |             let red_region_start_ref_left_aligned =\n1667 | |                 q_seq_ref.len() as i64 - correctly_aligned_nclt_in_right_ref - alt_length as i64;\n1668 | |             let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region\n...    |\n1699 | |         }\n     | |_________^ help: consider rewriting the `if` chain with `match`: `match alt_length.cmp(&ref_length) {...}`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain\n     = note: `#[warn(clippy::comparison_chain)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::comparison_chain)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider rewriting the `if` chain with `match`","rendered":null,"spans":[{"byte_end":90924,"byte_start":89190,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1699,"line_start":1665,"suggested_replacement":"match alt_length.cmp(&ref_length) {...}","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":37,"highlight_start":9,"text":"        if alt_length > ref_length {"},{"highlight_end":52,"highlight_start":1,"text":"            let red_region_start_ref_left_aligned ="},{"highlight_end":98,"highlight_start":1,"text":"                q_seq_ref.len() as i64 - correctly_aligned_nclt_in_right_ref - alt_length as i64;"},{"highlight_end":123,"highlight_start":1,"text":"            let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region"},{"highlight_end":83,"highlight_start":1,"text":"            for i in red_region_start_ref_left_aligned + 1..red_region_start_ref {"},{"highlight_end":56,"highlight_start":1,"text":"                if (i as usize) < r_seq_ref_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_ref_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":47,"highlight_start":1,"text":"            if is_complete_insertion == true {"},{"highlight_end":74,"highlight_start":1,"text":"                red_region_start_ref = red_region_start_ref_left_aligned;"},{"highlight_end":80,"highlight_start":1,"text":"                red_region_stop_ref = red_region_start_ref + ref_length as i64;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":44,"highlight_start":1,"text":"        } else if ref_length > alt_length {"},{"highlight_end":52,"highlight_start":1,"text":"            let red_region_start_alt_left_aligned ="},{"highlight_end":98,"highlight_start":1,"text":"                q_seq_alt.len() as i64 - correctly_aligned_nclt_in_right_alt - ref_length as i64;"},{"highlight_end":123,"highlight_start":1,"text":"            let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region"},{"highlight_end":83,"highlight_start":1,"text":"            for i in red_region_start_alt_left_aligned + 1..red_region_start_alt {"},{"highlight_end":56,"highlight_start":1,"text":"                if (i as usize) < r_seq_alt_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_alt_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":47,"highlight_start":1,"text":"            if is_complete_insertion == true {"},{"highlight_end":74,"highlight_start":1,"text":"                red_region_start_alt = red_region_start_alt_left_aligned;"},{"highlight_end":80,"highlight_start":1,"text":"                red_region_stop_alt = red_region_start_alt + alt_length as i64;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":10,"highlight_start":1,"text":"        }"}]}]}],"code":{"code":"clippy::comparison_chain","explanation":null},"level":"warning","message":"`if` chain can be rewritten with `match`","spans":[{"byte_end":90924,"byte_start":89190,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1699,"line_start":1665,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":9,"text":"        if alt_length > ref_length {"},{"highlight_end":52,"highlight_start":1,"text":"            let red_region_start_ref_left_aligned ="},{"highlight_end":98,"highlight_start":1,"text":"                q_seq_ref.len() as i64 - correctly_aligned_nclt_in_right_ref - alt_length as i64;"},{"highlight_end":123,"highlight_start":1,"text":"            let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region"},{"highlight_end":83,"highlight_start":1,"text":"            for i in red_region_start_ref_left_aligned + 1..red_region_start_ref {"},{"highlight_end":56,"highlight_start":1,"text":"                if (i as usize) < r_seq_ref_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_ref_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":47,"highlight_start":1,"text":"            if is_complete_insertion == true {"},{"highlight_end":74,"highlight_start":1,"text":"                red_region_start_ref = red_region_start_ref_left_aligned;"},{"highlight_end":80,"highlight_start":1,"text":"                red_region_stop_ref = red_region_start_ref + ref_length as i64;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":44,"highlight_start":1,"text":"        } else if ref_length > alt_length {"},{"highlight_end":52,"highlight_start":1,"text":"            let red_region_start_alt_left_aligned ="},{"highlight_end":98,"highlight_start":1,"text":"                q_seq_alt.len() as i64 - correctly_aligned_nclt_in_right_alt - ref_length as i64;"},{"highlight_end":123,"highlight_start":1,"text":"            let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region"},{"highlight_end":83,"highlight_start":1,"text":"            for i in red_region_start_alt_left_aligned + 1..red_region_start_alt {"},{"highlight_end":56,"highlight_start":1,"text":"                if (i as usize) < r_seq_alt_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_alt_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":47,"highlight_start":1,"text":"            if is_complete_insertion == true {"},{"highlight_end":74,"highlight_start":1,"text":"                red_region_start_alt = red_region_start_alt_left_aligned;"},{"highlight_end":80,"highlight_start":1,"text":"                red_region_stop_alt = red_region_start_alt + alt_length as i64;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":10,"highlight_start":1,"text":"        }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/stats_functions.rs:286:64\n    |\n286 |     if group1.len() < threshold && group2.len() < threshold && repeat_present == false {\n    |                                                                ^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!repeat_present`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":11290,"byte_start":11267,"column_end":87,"column_start":64,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":286,"line_start":286,"suggested_replacement":"!repeat_present","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":64,"text":"    if group1.len() < threshold && group2.len() < threshold && repeat_present == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":11290,"byte_start":11267,"column_end":87,"column_start":64,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":286,"line_start":286,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":64,"text":"    if group1.len() < threshold && group2.len() < threshold && repeat_present == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1678:16\n     |\n1678 |             if is_complete_insertion == true {\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `is_complete_insertion`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":89874,"byte_start":89845,"column_end":45,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1678,"line_start":1678,"suggested_replacement":"is_complete_insertion","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":45,"highlight_start":16,"text":"            if is_complete_insertion == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":89874,"byte_start":89845,"column_end":45,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1678,"line_start":1678,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":16,"text":"            if is_complete_insertion == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is only used to index `rank_frequencies`\n   --> src/stats_functions.rs:317:18\n    |\n317 |         for i in 0..rank_frequencies.len() {\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n317 -         for i in 0..rank_frequencies.len() {\n317 +         for <item> in &rank_frequencies {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_range_loop)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":12588,"byte_start":12587,"column_end":14,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":317,"line_start":317,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":14,"highlight_start":13,"text":"        for i in 0..rank_frequencies.len() {"}]},{"byte_end":12617,"byte_start":12592,"column_end":43,"column_start":18,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":317,"line_start":317,"suggested_replacement":"&rank_frequencies","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":43,"highlight_start":18,"text":"        for i in 0..rank_frequencies.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is only used to index `rank_frequencies`","spans":[{"byte_end":12617,"byte_start":12592,"column_end":43,"column_start":18,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":317,"line_start":317,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":18,"text":"        for i in 0..rank_frequencies.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1695:16\n     |\n1695 |             if is_complete_insertion == true {\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `is_complete_insertion`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":90744,"byte_start":90715,"column_end":45,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1695,"line_start":1695,"suggested_replacement":"is_complete_insertion","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":45,"highlight_start":16,"text":"            if is_complete_insertion == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":90744,"byte_start":90715,"column_end":45,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1695,"line_start":1695,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":16,"text":"            if is_complete_insertion == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/stats_functions.rs:330:12\n    |\n330 |         if correct == true {\n    |            ^^^^^^^^^^^^^^^ help: try simplifying it as shown: `correct`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":13169,"byte_start":13154,"column_end":27,"column_start":12,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":330,"line_start":330,"suggested_replacement":"correct","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":27,"highlight_start":12,"text":"        if correct == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":13169,"byte_start":13154,"column_end":27,"column_start":12,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":330,"line_start":330,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":12,"text":"        if correct == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n    --> src/realign.rs:1741:26\n     |\n1741 |     if alignment_side == \"left\".to_string()\n     |                          ^^^^^^^^^^^^^^^^^^ help: try: `*\"left\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":92549,"byte_start":92531,"column_end":44,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1741,"line_start":1741,"suggested_replacement":"*\"left\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":44,"highlight_start":26,"text":"    if alignment_side == \"left\".to_string()"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":92549,"byte_start":92531,"column_end":44,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1741,"line_start":1741,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":26,"text":"    if alignment_side == \"left\".to_string()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: `if` chain can be rewritten with `match`\n    --> src/realign.rs:1763:9\n     |\n1763 | /         if alt_length > ref_length {\n1764 | |             let red_region_start_ref_left_aligned =\n1765 | |                 q_seq_alt.len() as i64 - correctly_aligned_nclt_in_right_alt - alt_length as i64;\n1766 | |             let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region\n...    |\n1797 | |         }\n     | |_________^ help: consider rewriting the `if` chain with `match`: `match alt_length.cmp(&ref_length) {...}`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider rewriting the `if` chain with `match`","rendered":null,"spans":[{"byte_end":95678,"byte_start":93944,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1797,"line_start":1763,"suggested_replacement":"match alt_length.cmp(&ref_length) {...}","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":37,"highlight_start":9,"text":"        if alt_length > ref_length {"},{"highlight_end":52,"highlight_start":1,"text":"            let red_region_start_ref_left_aligned ="},{"highlight_end":98,"highlight_start":1,"text":"                q_seq_alt.len() as i64 - correctly_aligned_nclt_in_right_alt - alt_length as i64;"},{"highlight_end":123,"highlight_start":1,"text":"            let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region"},{"highlight_end":83,"highlight_start":1,"text":"            for i in red_region_start_ref_left_aligned + 1..red_region_start_ref {"},{"highlight_end":56,"highlight_start":1,"text":"                if (i as usize) < r_seq_ref_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_ref_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":47,"highlight_start":1,"text":"            if is_complete_insertion == true {"},{"highlight_end":74,"highlight_start":1,"text":"                red_region_start_ref = red_region_start_ref_left_aligned;"},{"highlight_end":80,"highlight_start":1,"text":"                red_region_stop_ref = red_region_start_ref + ref_length as i64;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":44,"highlight_start":1,"text":"        } else if ref_length > alt_length {"},{"highlight_end":52,"highlight_start":1,"text":"            let red_region_start_alt_left_aligned ="},{"highlight_end":98,"highlight_start":1,"text":"                q_seq_ref.len() as i64 - correctly_aligned_nclt_in_right_ref - ref_length as i64;"},{"highlight_end":123,"highlight_start":1,"text":"            let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region"},{"highlight_end":83,"highlight_start":1,"text":"            for i in red_region_start_alt_left_aligned + 1..red_region_start_alt {"},{"highlight_end":56,"highlight_start":1,"text":"                if (i as usize) < r_seq_alt_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_alt_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":47,"highlight_start":1,"text":"            if is_complete_insertion == true {"},{"highlight_end":74,"highlight_start":1,"text":"                red_region_start_alt = red_region_start_alt_left_aligned;"},{"highlight_end":80,"highlight_start":1,"text":"                red_region_stop_alt = red_region_start_alt + alt_length as i64;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":10,"highlight_start":1,"text":"        }"}]}]}],"code":{"code":"clippy::comparison_chain","explanation":null},"level":"warning","message":"`if` chain can be rewritten with `match`","spans":[{"byte_end":95678,"byte_start":93944,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1797,"line_start":1763,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":9,"text":"        if alt_length > ref_length {"},{"highlight_end":52,"highlight_start":1,"text":"            let red_region_start_ref_left_aligned ="},{"highlight_end":98,"highlight_start":1,"text":"                q_seq_alt.len() as i64 - correctly_aligned_nclt_in_right_alt - alt_length as i64;"},{"highlight_end":123,"highlight_start":1,"text":"            let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region"},{"highlight_end":83,"highlight_start":1,"text":"            for i in red_region_start_ref_left_aligned + 1..red_region_start_ref {"},{"highlight_end":56,"highlight_start":1,"text":"                if (i as usize) < r_seq_ref_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_ref_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":47,"highlight_start":1,"text":"            if is_complete_insertion == true {"},{"highlight_end":74,"highlight_start":1,"text":"                red_region_start_ref = red_region_start_ref_left_aligned;"},{"highlight_end":80,"highlight_start":1,"text":"                red_region_stop_ref = red_region_start_ref + ref_length as i64;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":44,"highlight_start":1,"text":"        } else if ref_length > alt_length {"},{"highlight_end":52,"highlight_start":1,"text":"            let red_region_start_alt_left_aligned ="},{"highlight_end":98,"highlight_start":1,"text":"                q_seq_ref.len() as i64 - correctly_aligned_nclt_in_right_ref - ref_length as i64;"},{"highlight_end":123,"highlight_start":1,"text":"            let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region"},{"highlight_end":83,"highlight_start":1,"text":"            for i in red_region_start_alt_left_aligned + 1..red_region_start_alt {"},{"highlight_end":56,"highlight_start":1,"text":"                if (i as usize) < r_seq_alt_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_alt_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":47,"highlight_start":1,"text":"            if is_complete_insertion == true {"},{"highlight_end":74,"highlight_start":1,"text":"                red_region_start_alt = red_region_start_alt_left_aligned;"},{"highlight_end":80,"highlight_start":1,"text":"                red_region_stop_alt = red_region_start_alt + alt_length as i64;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":10,"highlight_start":1,"text":"        }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1776:16\n     |\n1776 |             if is_complete_insertion == true {\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `is_complete_insertion`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":94628,"byte_start":94599,"column_end":45,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1776,"line_start":1776,"suggested_replacement":"is_complete_insertion","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":45,"highlight_start":16,"text":"            if is_complete_insertion == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":94628,"byte_start":94599,"column_end":45,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1776,"line_start":1776,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":16,"text":"            if is_complete_insertion == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1793:16\n     |\n1793 |             if is_complete_insertion == true {\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `is_complete_insertion`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":95498,"byte_start":95469,"column_end":45,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1793,"line_start":1793,"suggested_replacement":"is_complete_insertion","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":45,"highlight_start":16,"text":"            if is_complete_insertion == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":95498,"byte_start":95469,"column_end":45,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1793,"line_start":1793,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":16,"text":"            if is_complete_insertion == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n    --> src/realign.rs:1798:33\n     |\n1798 |     } else if alignment_side == \"right\".to_string()\n     |                                 ^^^^^^^^^^^^^^^^^^^ help: try: `*\"right\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":95730,"byte_start":95711,"column_end":52,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1798,"line_start":1798,"suggested_replacement":"*\"right\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":52,"highlight_start":33,"text":"    } else if alignment_side == \"right\".to_string()"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":95730,"byte_start":95711,"column_end":52,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1798,"line_start":1798,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":33,"text":"    } else if alignment_side == \"right\".to_string()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n  --> src/DEanalysis.rs:39:25\n   |\n39 | fn binary_search(input: &Vec<usize>, y: usize) -> i64 {\n   |                         ^^^^^^^^^^^ help: change this to: `&[usize]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::ptr_arg)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":1773,"byte_start":1762,"column_end":36,"column_start":25,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":39,"line_start":39,"suggested_replacement":"&[usize]","suggestion_applicability":"Unspecified","text":[{"highlight_end":36,"highlight_start":25,"text":"fn binary_search(input: &Vec<usize>, y: usize) -> i64 {"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":1773,"byte_start":1762,"column_end":36,"column_start":25,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":39,"line_start":39,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":25,"text":"fn binary_search(input: &Vec<usize>, y: usize) -> i64 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: `if` chain can be rewritten with `match`\n  --> src/DEanalysis.rs:47:9\n   |\n47 | /         if y == input_dup[m] {\n48 | |             index = m as i64;\n49 | |             break;\n50 | |         } else if y > input_dup[m] {\n...  |\n58 | |             r = m - 1;\n59 | |         }\n   | |_________^ help: consider rewriting the `if` chain with `match`: `match y.cmp(&input_dup[m]) {...}`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain\n   = note: `#[warn(clippy::comparison_chain)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::comparison_chain)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider rewriting the `if` chain with `match`","rendered":null,"spans":[{"byte_end":2310,"byte_start":2005,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":59,"line_start":47,"suggested_replacement":"match y.cmp(&input_dup[m]) {...}","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":31,"highlight_start":9,"text":"        if y == input_dup[m] {"},{"highlight_end":30,"highlight_start":1,"text":"            index = m as i64;"},{"highlight_end":19,"highlight_start":1,"text":"            break;"},{"highlight_end":37,"highlight_start":1,"text":"        } else if y > input_dup[m] {"},{"highlight_end":23,"highlight_start":1,"text":"            l = m + 1;"},{"highlight_end":10,"highlight_start":1,"text":"        }"},{"highlight_end":46,"highlight_start":1,"text":"        // If x is smaller, ignore right half"},{"highlight_end":15,"highlight_start":1,"text":"        else {"},{"highlight_end":33,"highlight_start":1,"text":"            if m == 0 as usize {"},{"highlight_end":23,"highlight_start":1,"text":"                break;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":23,"highlight_start":1,"text":"            r = m - 1;"},{"highlight_end":10,"highlight_start":1,"text":"        }"}]}]}],"code":{"code":"clippy::comparison_chain","explanation":null},"level":"warning","message":"`if` chain can be rewritten with `match`","spans":[{"byte_end":2310,"byte_start":2005,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":59,"line_start":47,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":9,"text":"        if y == input_dup[m] {"},{"highlight_end":30,"highlight_start":1,"text":"            index = m as i64;"},{"highlight_end":19,"highlight_start":1,"text":"            break;"},{"highlight_end":37,"highlight_start":1,"text":"        } else if y > input_dup[m] {"},{"highlight_end":23,"highlight_start":1,"text":"            l = m + 1;"},{"highlight_end":10,"highlight_start":1,"text":"        }"},{"highlight_end":46,"highlight_start":1,"text":"        // If x is smaller, ignore right half"},{"highlight_end":15,"highlight_start":1,"text":"        else {"},{"highlight_end":33,"highlight_start":1,"text":"            if m == 0 as usize {"},{"highlight_end":23,"highlight_start":1,"text":"                break;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":23,"highlight_start":1,"text":"            r = m - 1;"},{"highlight_end":10,"highlight_start":1,"text":"        }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting integer literal to `usize` is unnecessary\n  --> src/DEanalysis.rs:55:21\n   |\n55 |             if m == 0 as usize {\n   |                     ^^^^^^^^^^ help: try: `0_usize`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":2238,"byte_start":2228,"column_end":31,"column_start":21,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":55,"line_start":55,"suggested_replacement":"0_usize","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":31,"highlight_start":21,"text":"            if m == 0 as usize {"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting integer literal to `usize` is unnecessary","spans":[{"byte_end":2238,"byte_start":2228,"column_end":31,"column_start":21,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":55,"line_start":55,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":21,"text":"            if m == 0 as usize {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: very complex type used. Consider factoring parts into `type` definitions\n  --> src/DEanalysis.rs:68:6\n   |\n68 |   ) -> (\n   |  ______^\n69 | |     Matrix<f64, Dyn, Dyn, VecStorage<f64, Dyn, Dyn>>,\n70 | |     Vec<usize>,\n71 | |     Vec<usize>,\n72 | |     Vec<String>,\n73 | |     Vec<String>,\n74 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity\n   = note: `#[warn(clippy::type_complexity)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::type_complexity)]` on by default","rendered":null,"spans":[]}],"code":{"code":"clippy::type_complexity","explanation":null},"level":"warning","message":"very complex type used. Consider factoring parts into `type` definitions","spans":[{"byte_end":2568,"byte_start":2445,"column_end":2,"column_start":6,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":74,"line_start":68,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":7,"highlight_start":6,"text":") -> ("},{"highlight_end":54,"highlight_start":1,"text":"    Matrix<f64, Dyn, Dyn, VecStorage<f64, Dyn, Dyn>>,"},{"highlight_end":16,"highlight_start":1,"text":"    Vec<usize>,"},{"highlight_end":16,"highlight_start":1,"text":"    Vec<usize>,"},{"highlight_end":17,"highlight_start":1,"text":"    Vec<String>,"},{"highlight_end":17,"highlight_start":1,"text":"    Vec<String>,"},{"highlight_end":2,"highlight_start":1,"text":") {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the borrowed expression implements the required traits\n  --> src/DEanalysis.rs:75:31\n   |\n75 |     let file = HDF5File::open(&hdf5_filename).unwrap(); // open for reading\n   |                               ^^^^^^^^^^^^^^ help: change this to: `hdf5_filename`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n   = note: `#[warn(clippy::needless_borrows_for_generic_args)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_borrows_for_generic_args)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":2615,"byte_start":2601,"column_end":45,"column_start":31,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":75,"line_start":75,"suggested_replacement":"hdf5_filename","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":45,"highlight_start":31,"text":"    let file = HDF5File::open(&hdf5_filename).unwrap(); // open for reading"}]}]}],"code":{"code":"clippy::needless_borrows_for_generic_args","explanation":null},"level":"warning","message":"the borrowed expression implements the required traits","spans":[{"byte_end":2615,"byte_start":2601,"column_end":45,"column_start":31,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":75,"line_start":75,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":31,"text":"    let file = HDF5File::open(&hdf5_filename).unwrap(); // open for reading"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unneeded late initialization\n   --> src/DEanalysis.rs:138:9\n    |\n138 |         let sample_index;\n    |         ^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init\n    = note: `#[warn(clippy::needless_late_init)]` on by default\nhelp: move the declaration `sample_index` here and remove the assignments from the `match` arms\n    |\n138 ~         \n139 ~         let sample_index = match samples\n140 |             .iter()\n...\n147 |                 //);\n148 ~                 index\n149 |             }\n...\n153 |             ),\n154 ~         };\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_late_init)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"move the declaration `sample_index` here and remove the assignments from the `match` arms","rendered":null,"spans":[{"byte_end":5967,"byte_start":5952,"column_end":32,"column_start":17,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":148,"line_start":148,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":32,"highlight_start":17,"text":"                sample_index = index;"}]},{"byte_end":5973,"byte_start":5972,"column_end":38,"column_start":37,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":148,"line_start":148,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":38,"highlight_start":37,"text":"                sample_index = index;"}]},{"byte_end":5595,"byte_start":5578,"column_end":26,"column_start":9,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":138,"line_start":138,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":26,"highlight_start":9,"text":"        let sample_index;"}]},{"byte_end":5604,"byte_start":5604,"column_end":9,"column_start":9,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":139,"line_start":139,"suggested_replacement":"let sample_index = ","suggestion_applicability":"Unspecified","text":[{"highlight_end":9,"highlight_start":9,"text":"        match samples"}]},{"byte_end":6147,"byte_start":6147,"column_end":10,"column_start":10,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":154,"line_start":154,"suggested_replacement":";","suggestion_applicability":"Unspecified","text":[{"highlight_end":10,"highlight_start":10,"text":"        }"}]}]}],"code":{"code":"clippy::needless_late_init","explanation":null},"level":"warning","message":"unneeded late initialization","spans":[{"byte_end":5595,"byte_start":5578,"column_end":26,"column_start":9,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":138,"line_start":138,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":9,"text":"        let sample_index;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n   --> src/DEanalysis.rs:141:27\n    |\n141 |             .position(|x| x.to_string() == *sample_name.to_string())\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ try implementing the comparison without allocating\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n    = note: `#[warn(clippy::cmp_owned)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::cmp_owned)]` on by default","rendered":null,"spans":[]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":5705,"byte_start":5664,"column_end":68,"column_start":27,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":"try implementing the comparison without allocating","line_end":141,"line_start":141,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":27,"text":"            .position(|x| x.to_string() == *sample_name.to_string())"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unneeded late initialization\n   --> src/DEanalysis.rs:166:9\n    |\n166 |         let sample_index;\n    |         ^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init\nhelp: move the declaration `sample_index` here and remove the assignments from the `match` arms\n    |\n166 ~         \n167 ~         let sample_index = match samples\n168 |             .iter()\n...\n175 |                 //);\n176 ~                 index\n177 |             }\n...\n181 |             ),\n182 ~         };\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"move the declaration `sample_index` here and remove the assignments from the `match` arms","rendered":null,"spans":[{"byte_end":6999,"byte_start":6984,"column_end":32,"column_start":17,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":176,"line_start":176,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":32,"highlight_start":17,"text":"                sample_index = index;"}]},{"byte_end":7005,"byte_start":7004,"column_end":38,"column_start":37,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":176,"line_start":176,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":38,"highlight_start":37,"text":"                sample_index = index;"}]},{"byte_end":6627,"byte_start":6610,"column_end":26,"column_start":9,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":166,"line_start":166,"suggested_replacement":"","suggestion_applicability":"Unspecified","text":[{"highlight_end":26,"highlight_start":9,"text":"        let sample_index;"}]},{"byte_end":6636,"byte_start":6636,"column_end":9,"column_start":9,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":167,"line_start":167,"suggested_replacement":"let sample_index = ","suggestion_applicability":"Unspecified","text":[{"highlight_end":9,"highlight_start":9,"text":"        match samples"}]},{"byte_end":7179,"byte_start":7179,"column_end":10,"column_start":10,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":182,"line_start":182,"suggested_replacement":";","suggestion_applicability":"Unspecified","text":[{"highlight_end":10,"highlight_start":10,"text":"        }"}]}]}],"code":{"code":"clippy::needless_late_init","explanation":null},"level":"warning","message":"unneeded late initialization","spans":[{"byte_end":6627,"byte_start":6610,"column_end":26,"column_start":9,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":166,"line_start":166,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":9,"text":"        let sample_index;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n   --> src/DEanalysis.rs:169:27\n    |\n169 |             .position(|x| x.to_string() == *sample_name.to_string())\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ try implementing the comparison without allocating\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":6737,"byte_start":6696,"column_end":68,"column_start":27,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":"try implementing the comparison without allocating","line_end":169,"line_start":169,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":27,"text":"            .position(|x| x.to_string() == *sample_name.to_string())"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: very complex type used. Consider factoring parts into `type` definitions\n   --> src/DEanalysis.rs:219:6\n    |\n219 |   ) -> (\n    |  ______^\n220 | |     Matrix<f64, Dyn, Dyn, VecStorage<f64, Dyn, Dyn>>,\n221 | |     Vec<usize>,\n222 | |     Vec<usize>,\n223 | |     Vec<String>,\n224 | |     Vec<String>,\n225 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity","rendered":null,"spans":[]}],"code":{"code":"clippy::type_complexity","explanation":null},"level":"warning","message":"very complex type used. Consider factoring parts into `type` definitions","spans":[{"byte_end":8576,"byte_start":8453,"column_end":2,"column_start":6,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":225,"line_start":219,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":7,"highlight_start":6,"text":") -> ("},{"highlight_end":54,"highlight_start":1,"text":"    Matrix<f64, Dyn, Dyn, VecStorage<f64, Dyn, Dyn>>,"},{"highlight_end":16,"highlight_start":1,"text":"    Vec<usize>,"},{"highlight_end":16,"highlight_start":1,"text":"    Vec<usize>,"},{"highlight_end":17,"highlight_start":1,"text":"    Vec<String>,"},{"highlight_end":17,"highlight_start":1,"text":"    Vec<String>,"},{"highlight_end":2,"highlight_start":1,"text":") {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `line_iter` is only used to index `lines_slice`\n   --> src/DEanalysis.rs:286:26\n    |\n286 |         for line_iter in 1..lines_slice.len() - 1 {\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n286 -         for line_iter in 1..lines_slice.len() - 1 {\n286 +         for <item> in lines_slice.iter().take(lines_slice.len() - 1).skip(1) {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":11350,"byte_start":11341,"column_end":22,"column_start":13,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":286,"line_start":286,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":22,"highlight_start":13,"text":"        for line_iter in 1..lines_slice.len() - 1 {"}]},{"byte_end":11378,"byte_start":11354,"column_end":50,"column_start":26,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":286,"line_start":286,"suggested_replacement":"lines_slice.iter().take(lines_slice.len() - 1).skip(1)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":50,"highlight_start":26,"text":"        for line_iter in 1..lines_slice.len() - 1 {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `line_iter` is only used to index `lines_slice`","spans":[{"byte_end":11378,"byte_start":11354,"column_end":50,"column_start":26,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":286,"line_start":286,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":26,"text":"        for line_iter in 1..lines_slice.len() - 1 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the variable `index` is used as a loop counter\n   --> src/DEanalysis.rs:290:13\n    |\n290 |             for field in line.split('\\t').collect::<Vec<&str>>() {\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `for (index, field) in line.split('\\t').collect::<Vec<&str>>().into_iter().enumerate()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_counter_loop\n    = note: `#[warn(clippy::explicit_counter_loop)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_counter_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::explicit_counter_loop)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using","rendered":null,"spans":[{"byte_end":11638,"byte_start":11586,"column_end":65,"column_start":13,"expansion":{"def_site_span":{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":false,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},"macro_decl_name":"desugaring of `for` loop","span":{"byte_end":13725,"byte_start":11586,"column_end":14,"column_start":13,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":false,"label":null,"line_end":337,"line_start":290,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":67,"highlight_start":13,"text":"            for field in line.split('\\t').collect::<Vec<&str>>() {"},{"highlight_end":55,"highlight_start":1,"text":"                if index == gene_name_index.unwrap() {"},{"highlight_end":54,"highlight_start":1,"text":"                    gene_ids.push(field.to_string());"},{"highlight_end":64,"highlight_start":1,"text":"                } else if index == gene_symbol_index.unwrap() {"},{"highlight_end":56,"highlight_start":1,"text":"                    gene_names.push(field.to_string());"},{"highlight_end":79,"highlight_start":1,"text":"                } else if binary_search(&case_indexes_original, index) != -1 {"},{"highlight_end":56,"highlight_start":1,"text":"                    let num = FromStr::from_str(field);"},{"highlight_end":32,"highlight_start":1,"text":"                    match num {"},{"highlight_end":35,"highlight_start":1,"text":"                        Ok(n) => {"},{"highlight_end":51,"highlight_start":1,"text":"                            //println!(\"n:{}\", n);"},{"highlight_end":50,"highlight_start":1,"text":"                            input_vector.push(n);"},{"highlight_end":48,"highlight_start":1,"text":"                            if num_lines == 0 {"},{"highlight_end":64,"highlight_start":1,"text":"                                case_indexes.push(num_columns);"},{"highlight_end":50,"highlight_start":1,"text":"                                num_columns += 1;"},{"highlight_end":30,"highlight_start":1,"text":"                            }"},{"highlight_end":26,"highlight_start":1,"text":"                        }"},{"highlight_end":37,"highlight_start":1,"text":"                        Err(_n) => {"},{"highlight_end":36,"highlight_start":1,"text":"                            panic!("},{"highlight_end":94,"highlight_start":1,"text":"                                \"Number {} in line {} and column {} is not a decimal number\","},{"highlight_end":39,"highlight_start":1,"text":"                                field,"},{"highlight_end":47,"highlight_start":1,"text":"                                num_lines + 1,"},{"highlight_end":42,"highlight_start":1,"text":"                                index + 1"},{"highlight_end":31,"highlight_start":1,"text":"                            );"},{"highlight_end":26,"highlight_start":1,"text":"                        }"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":82,"highlight_start":1,"text":"                } else if binary_search(&control_indexes_original, index) != -1 {"},{"highlight_end":56,"highlight_start":1,"text":"                    let num = FromStr::from_str(field);"},{"highlight_end":32,"highlight_start":1,"text":"                    match num {"},{"highlight_end":35,"highlight_start":1,"text":"                        Ok(n) => {"},{"highlight_end":51,"highlight_start":1,"text":"                            //println!(\"n:{}\", n);"},{"highlight_end":50,"highlight_start":1,"text":"                            input_vector.push(n);"},{"highlight_end":48,"highlight_start":1,"text":"                            if num_lines == 0 {"},{"highlight_end":67,"highlight_start":1,"text":"                                control_indexes.push(num_columns);"},{"highlight_end":50,"highlight_start":1,"text":"                                num_columns += 1;"},{"highlight_end":30,"highlight_start":1,"text":"                            }"},{"highlight_end":26,"highlight_start":1,"text":"                        }"},{"highlight_end":37,"highlight_start":1,"text":"                        Err(_n) => {"},{"highlight_end":36,"highlight_start":1,"text":"                            panic!("},{"highlight_end":94,"highlight_start":1,"text":"                                \"Number {} in line {} and column {} is not a decimal number\","},{"highlight_end":39,"highlight_start":1,"text":"                                field,"},{"highlight_end":47,"highlight_start":1,"text":"                                num_lines + 1,"},{"highlight_end":42,"highlight_start":1,"text":"                                index + 1"},{"highlight_end":31,"highlight_start":1,"text":"                            );"},{"highlight_end":26,"highlight_start":1,"text":"                        }"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":28,"highlight_start":1,"text":"                index += 1;"},{"highlight_end":14,"highlight_start":1,"text":"            }"}]}},"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":290,"line_start":290,"suggested_replacement":"for (index, field) in line.split('\\t').collect::<Vec<&str>>().into_iter().enumerate()","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":65,"highlight_start":13,"text":"            for field in line.split('\\t').collect::<Vec<&str>>() {"}]}]}],"code":{"code":"clippy::explicit_counter_loop","explanation":null},"level":"warning","message":"the variable `index` is used as a loop counter","spans":[{"byte_end":11638,"byte_start":11586,"column_end":65,"column_start":13,"expansion":{"def_site_span":{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":false,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},"macro_decl_name":"desugaring of `for` loop","span":{"byte_end":13725,"byte_start":11586,"column_end":14,"column_start":13,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":false,"label":null,"line_end":337,"line_start":290,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":67,"highlight_start":13,"text":"            for field in line.split('\\t').collect::<Vec<&str>>() {"},{"highlight_end":55,"highlight_start":1,"text":"                if index == gene_name_index.unwrap() {"},{"highlight_end":54,"highlight_start":1,"text":"                    gene_ids.push(field.to_string());"},{"highlight_end":64,"highlight_start":1,"text":"                } else if index == gene_symbol_index.unwrap() {"},{"highlight_end":56,"highlight_start":1,"text":"                    gene_names.push(field.to_string());"},{"highlight_end":79,"highlight_start":1,"text":"                } else if binary_search(&case_indexes_original, index) != -1 {"},{"highlight_end":56,"highlight_start":1,"text":"                    let num = FromStr::from_str(field);"},{"highlight_end":32,"highlight_start":1,"text":"                    match num {"},{"highlight_end":35,"highlight_start":1,"text":"                        Ok(n) => {"},{"highlight_end":51,"highlight_start":1,"text":"                            //println!(\"n:{}\", n);"},{"highlight_end":50,"highlight_start":1,"text":"                            input_vector.push(n);"},{"highlight_end":48,"highlight_start":1,"text":"                            if num_lines == 0 {"},{"highlight_end":64,"highlight_start":1,"text":"                                case_indexes.push(num_columns);"},{"highlight_end":50,"highlight_start":1,"text":"                                num_columns += 1;"},{"highlight_end":30,"highlight_start":1,"text":"                            }"},{"highlight_end":26,"highlight_start":1,"text":"                        }"},{"highlight_end":37,"highlight_start":1,"text":"                        Err(_n) => {"},{"highlight_end":36,"highlight_start":1,"text":"                            panic!("},{"highlight_end":94,"highlight_start":1,"text":"                                \"Number {} in line {} and column {} is not a decimal number\","},{"highlight_end":39,"highlight_start":1,"text":"                                field,"},{"highlight_end":47,"highlight_start":1,"text":"                                num_lines + 1,"},{"highlight_end":42,"highlight_start":1,"text":"                                index + 1"},{"highlight_end":31,"highlight_start":1,"text":"                            );"},{"highlight_end":26,"highlight_start":1,"text":"                        }"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":82,"highlight_start":1,"text":"                } else if binary_search(&control_indexes_original, index) != -1 {"},{"highlight_end":56,"highlight_start":1,"text":"                    let num = FromStr::from_str(field);"},{"highlight_end":32,"highlight_start":1,"text":"                    match num {"},{"highlight_end":35,"highlight_start":1,"text":"                        Ok(n) => {"},{"highlight_end":51,"highlight_start":1,"text":"                            //println!(\"n:{}\", n);"},{"highlight_end":50,"highlight_start":1,"text":"                            input_vector.push(n);"},{"highlight_end":48,"highlight_start":1,"text":"                            if num_lines == 0 {"},{"highlight_end":67,"highlight_start":1,"text":"                                control_indexes.push(num_columns);"},{"highlight_end":50,"highlight_start":1,"text":"                                num_columns += 1;"},{"highlight_end":30,"highlight_start":1,"text":"                            }"},{"highlight_end":26,"highlight_start":1,"text":"                        }"},{"highlight_end":37,"highlight_start":1,"text":"                        Err(_n) => {"},{"highlight_end":36,"highlight_start":1,"text":"                            panic!("},{"highlight_end":94,"highlight_start":1,"text":"                                \"Number {} in line {} and column {} is not a decimal number\","},{"highlight_end":39,"highlight_start":1,"text":"                                field,"},{"highlight_end":47,"highlight_start":1,"text":"                                num_lines + 1,"},{"highlight_end":42,"highlight_start":1,"text":"                                index + 1"},{"highlight_end":31,"highlight_start":1,"text":"                            );"},{"highlight_end":26,"highlight_start":1,"text":"                        }"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":28,"highlight_start":1,"text":"                index += 1;"},{"highlight_end":14,"highlight_start":1,"text":"            }"}]}},"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":290,"line_start":290,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":65,"highlight_start":13,"text":"            for field in line.split('\\t').collect::<Vec<&str>>() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `line_iter` is used to index `lines`\n   --> src/DEanalysis.rs:378:34\n    |\n378 |                 for line_iter in 1..total_lines - 1 {\n    |                                  ^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator and enumerate()\n    |\n378 -                 for line_iter in 1..total_lines - 1 {\n378 +                 for (line_iter, <item>) in lines.iter().enumerate().take(total_lines - 1).skip(1) {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator and enumerate()","rendered":null,"spans":[{"byte_end":16544,"byte_start":16535,"column_end":30,"column_start":21,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":378,"line_start":378,"suggested_replacement":"(line_iter, <item>)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":30,"highlight_start":21,"text":"                for line_iter in 1..total_lines - 1 {"}]},{"byte_end":16566,"byte_start":16548,"column_end":52,"column_start":34,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":378,"line_start":378,"suggested_replacement":"lines.iter().enumerate().take(total_lines - 1).skip(1)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":52,"highlight_start":34,"text":"                for line_iter in 1..total_lines - 1 {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `line_iter` is used to index `lines`","spans":[{"byte_end":16566,"byte_start":16548,"column_end":52,"column_start":34,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":378,"line_start":378,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":34,"text":"                for line_iter in 1..total_lines - 1 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the variable `index` is used as a loop counter\n   --> src/DEanalysis.rs:385:25\n    |\n385 |                         for field in line.split('\\t').collect::<Vec<&str>>() {\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `for (index, field) in line.split('\\t').collect::<Vec<&str>>().into_iter().enumerate()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_counter_loop\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_counter_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using","rendered":null,"spans":[{"byte_end":17200,"byte_start":17148,"column_end":77,"column_start":25,"expansion":{"def_site_span":{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":false,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},"macro_decl_name":"desugaring of `for` loop","span":{"byte_end":19901,"byte_start":17148,"column_end":26,"column_start":25,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":false,"label":null,"line_end":432,"line_start":385,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":79,"highlight_start":25,"text":"                        for field in line.split('\\t').collect::<Vec<&str>>() {"},{"highlight_end":67,"highlight_start":1,"text":"                            if index == gene_name_index.unwrap() {"},{"highlight_end":76,"highlight_start":1,"text":"                                genes_names_thread.push(field.to_string());"},{"highlight_end":76,"highlight_start":1,"text":"                            } else if index == gene_symbol_index.unwrap() {"},{"highlight_end":78,"highlight_start":1,"text":"                                genes_symbols_thread.push(field.to_string());"},{"highlight_end":91,"highlight_start":1,"text":"                            } else if binary_search(&case_indexes_original, index) != -1 {"},{"highlight_end":68,"highlight_start":1,"text":"                                let num = FromStr::from_str(field);"},{"highlight_end":44,"highlight_start":1,"text":"                                match num {"},{"highlight_end":47,"highlight_start":1,"text":"                                    Ok(n) => {"},{"highlight_end":63,"highlight_start":1,"text":"                                        //println!(\"n:{}\", n);"},{"highlight_end":69,"highlight_start":1,"text":"                                        input_vector_thread.push(n);"},{"highlight_end":60,"highlight_start":1,"text":"                                        if line_iter == 1 {"},{"highlight_end":90,"highlight_start":1,"text":"                                            case_indexes_thread.push(num_columns_thread);"},{"highlight_end":69,"highlight_start":1,"text":"                                            num_columns_thread += 1;"},{"highlight_end":42,"highlight_start":1,"text":"                                        }"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":49,"highlight_start":1,"text":"                                    Err(_n) => {"},{"highlight_end":48,"highlight_start":1,"text":"                                        panic!("},{"highlight_end":102,"highlight_start":1,"text":"                                        \"Number {} in line {} and column {} is not a decimal number\","},{"highlight_end":47,"highlight_start":1,"text":"                                        field,"},{"highlight_end":62,"highlight_start":1,"text":"                                        num_lines_thread + 1,"},{"highlight_end":50,"highlight_start":1,"text":"                                        index + 1"},{"highlight_end":39,"highlight_start":1,"text":"                                    );"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":34,"highlight_start":1,"text":"                                }"},{"highlight_end":94,"highlight_start":1,"text":"                            } else if binary_search(&control_indexes_original, index) != -1 {"},{"highlight_end":68,"highlight_start":1,"text":"                                let num = FromStr::from_str(field);"},{"highlight_end":44,"highlight_start":1,"text":"                                match num {"},{"highlight_end":47,"highlight_start":1,"text":"                                    Ok(n) => {"},{"highlight_end":63,"highlight_start":1,"text":"                                        //println!(\"n:{}\", n);"},{"highlight_end":69,"highlight_start":1,"text":"                                        input_vector_thread.push(n);"},{"highlight_end":60,"highlight_start":1,"text":"                                        if line_iter == 1 {"},{"highlight_end":93,"highlight_start":1,"text":"                                            control_indexes_thread.push(num_columns_thread);"},{"highlight_end":69,"highlight_start":1,"text":"                                            num_columns_thread += 1;"},{"highlight_end":42,"highlight_start":1,"text":"                                        }"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":49,"highlight_start":1,"text":"                                    Err(_n) => {"},{"highlight_end":48,"highlight_start":1,"text":"                                        panic!("},{"highlight_end":102,"highlight_start":1,"text":"                                        \"Number {} in line {} and column {} is not a decimal number\","},{"highlight_end":47,"highlight_start":1,"text":"                                        field,"},{"highlight_end":62,"highlight_start":1,"text":"                                        num_lines_thread + 1,"},{"highlight_end":50,"highlight_start":1,"text":"                                        index + 1"},{"highlight_end":39,"highlight_start":1,"text":"                                    );"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":34,"highlight_start":1,"text":"                                }"},{"highlight_end":30,"highlight_start":1,"text":"                            }"},{"highlight_end":40,"highlight_start":1,"text":"                            index += 1;"},{"highlight_end":26,"highlight_start":1,"text":"                        }"}]}},"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":385,"line_start":385,"suggested_replacement":"for (index, field) in line.split('\\t').collect::<Vec<&str>>().into_iter().enumerate()","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":77,"highlight_start":25,"text":"                        for field in line.split('\\t').collect::<Vec<&str>>() {"}]}]}],"code":{"code":"clippy::explicit_counter_loop","explanation":null},"level":"warning","message":"the variable `index` is used as a loop counter","spans":[{"byte_end":17200,"byte_start":17148,"column_end":77,"column_start":25,"expansion":{"def_site_span":{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":false,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},"macro_decl_name":"desugaring of `for` loop","span":{"byte_end":19901,"byte_start":17148,"column_end":26,"column_start":25,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":false,"label":null,"line_end":432,"line_start":385,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":79,"highlight_start":25,"text":"                        for field in line.split('\\t').collect::<Vec<&str>>() {"},{"highlight_end":67,"highlight_start":1,"text":"                            if index == gene_name_index.unwrap() {"},{"highlight_end":76,"highlight_start":1,"text":"                                genes_names_thread.push(field.to_string());"},{"highlight_end":76,"highlight_start":1,"text":"                            } else if index == gene_symbol_index.unwrap() {"},{"highlight_end":78,"highlight_start":1,"text":"                                genes_symbols_thread.push(field.to_string());"},{"highlight_end":91,"highlight_start":1,"text":"                            } else if binary_search(&case_indexes_original, index) != -1 {"},{"highlight_end":68,"highlight_start":1,"text":"                                let num = FromStr::from_str(field);"},{"highlight_end":44,"highlight_start":1,"text":"                                match num {"},{"highlight_end":47,"highlight_start":1,"text":"                                    Ok(n) => {"},{"highlight_end":63,"highlight_start":1,"text":"                                        //println!(\"n:{}\", n);"},{"highlight_end":69,"highlight_start":1,"text":"                                        input_vector_thread.push(n);"},{"highlight_end":60,"highlight_start":1,"text":"                                        if line_iter == 1 {"},{"highlight_end":90,"highlight_start":1,"text":"                                            case_indexes_thread.push(num_columns_thread);"},{"highlight_end":69,"highlight_start":1,"text":"                                            num_columns_thread += 1;"},{"highlight_end":42,"highlight_start":1,"text":"                                        }"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":49,"highlight_start":1,"text":"                                    Err(_n) => {"},{"highlight_end":48,"highlight_start":1,"text":"                                        panic!("},{"highlight_end":102,"highlight_start":1,"text":"                                        \"Number {} in line {} and column {} is not a decimal number\","},{"highlight_end":47,"highlight_start":1,"text":"                                        field,"},{"highlight_end":62,"highlight_start":1,"text":"                                        num_lines_thread + 1,"},{"highlight_end":50,"highlight_start":1,"text":"                                        index + 1"},{"highlight_end":39,"highlight_start":1,"text":"                                    );"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":34,"highlight_start":1,"text":"                                }"},{"highlight_end":94,"highlight_start":1,"text":"                            } else if binary_search(&control_indexes_original, index) != -1 {"},{"highlight_end":68,"highlight_start":1,"text":"                                let num = FromStr::from_str(field);"},{"highlight_end":44,"highlight_start":1,"text":"                                match num {"},{"highlight_end":47,"highlight_start":1,"text":"                                    Ok(n) => {"},{"highlight_end":63,"highlight_start":1,"text":"                                        //println!(\"n:{}\", n);"},{"highlight_end":69,"highlight_start":1,"text":"                                        input_vector_thread.push(n);"},{"highlight_end":60,"highlight_start":1,"text":"                                        if line_iter == 1 {"},{"highlight_end":93,"highlight_start":1,"text":"                                            control_indexes_thread.push(num_columns_thread);"},{"highlight_end":69,"highlight_start":1,"text":"                                            num_columns_thread += 1;"},{"highlight_end":42,"highlight_start":1,"text":"                                        }"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":49,"highlight_start":1,"text":"                                    Err(_n) => {"},{"highlight_end":48,"highlight_start":1,"text":"                                        panic!("},{"highlight_end":102,"highlight_start":1,"text":"                                        \"Number {} in line {} and column {} is not a decimal number\","},{"highlight_end":47,"highlight_start":1,"text":"                                        field,"},{"highlight_end":62,"highlight_start":1,"text":"                                        num_lines_thread + 1,"},{"highlight_end":50,"highlight_start":1,"text":"                                        index + 1"},{"highlight_end":39,"highlight_start":1,"text":"                                    );"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":34,"highlight_start":1,"text":"                                }"},{"highlight_end":30,"highlight_start":1,"text":"                            }"},{"highlight_end":40,"highlight_start":1,"text":"                            index += 1;"},{"highlight_end":26,"highlight_start":1,"text":"                        }"}]}},"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":385,"line_start":385,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":77,"highlight_start":25,"text":"                        for field in line.split('\\t').collect::<Vec<&str>>() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/align.rs:94:57\n   |\n94 | ...                   realign::align_single_reads(&final_sequence, ref_seq.to_string()); // Aligning against reference\n   |                                                   ^^^^^^^^^^^^^^^ help: change this to: `final_sequence`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":5192,"byte_start":5177,"column_end":72,"column_start":57,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":94,"line_start":94,"suggested_replacement":"final_sequence","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":72,"highlight_start":57,"text":"                            realign::align_single_reads(&final_sequence, ref_seq.to_string()); // Aligning against reference"}]}]}],"code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","message":"this expression creates a reference which is immediately dereferenced by the compiler","spans":[{"byte_end":5192,"byte_start":5177,"column_end":72,"column_start":57,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":94,"line_start":94,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":72,"highlight_start":57,"text":"                            realign::align_single_reads(&final_sequence, ref_seq.to_string()); // Aligning against reference"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/align.rs:96:57\n   |\n96 | ...                   realign::align_single_reads(&final_sequence, alt_seq.to_string()); // Aligning against alternate\n   |                                                   ^^^^^^^^^^^^^^^ help: change this to: `final_sequence`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":5409,"byte_start":5394,"column_end":72,"column_start":57,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":96,"line_start":96,"suggested_replacement":"final_sequence","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":72,"highlight_start":57,"text":"                            realign::align_single_reads(&final_sequence, alt_seq.to_string()); // Aligning against alternate"}]}]}],"code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","message":"this expression creates a reference which is immediately dereferenced by the compiler","spans":[{"byte_end":5409,"byte_start":5394,"column_end":72,"column_start":57,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":96,"line_start":96,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":72,"highlight_start":57,"text":"                            realign::align_single_reads(&final_sequence, alt_seq.to_string()); // Aligning against alternate"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/align.rs:141:42\n    |\n141 |                         output_string += &\",\".to_string();\n    |                                          ^^^^^^^^^^^^^^^^ help: use: `\",\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":7869,"byte_start":7853,"column_end":58,"column_start":42,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":141,"line_start":141,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":42,"text":"                        output_string += &\",\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":7869,"byte_start":7853,"column_end":58,"column_start":42,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":141,"line_start":141,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":42,"text":"                        output_string += &\",\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"align","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/align.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/align.rs:144:38\n    |\n144 |                     output_string += &\"]\".to_string();\n    |                                      ^^^^^^^^^^^^^^^^ help: use: `\"]\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":7987,"byte_start":7971,"column_end":54,"column_start":38,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":144,"line_start":144,"suggested_replacement":"\"]\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":38,"text":"                    output_string += &\"]\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":7987,"byte_start":7971,"column_end":54,"column_start":38,"expansion":null,"file_name":"src/align.rs","is_primary":true,"label":null,"line_end":144,"line_start":144,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":38,"text":"                    output_string += &\"]\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this looks like you are swapping `pos_region1` and `pos_region2` manually\n  --> src/sv.rs:67:17\n   |\n67 | /                 let temp_pos: i64 = pos_region1;\n68 | |                 pos_region1 = pos_region2;\n69 | |                 pos_region2 = temp_pos;\n   | |_______________________________________^ help: try: `std::mem::swap(&mut pos_region1, &mut pos_region2);`\n   |\n   = note: or maybe you should use `std::mem::replace`?\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_swap\n   = note: `#[warn(clippy::manual_swap)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"or maybe you should use `std::mem::replace`?","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_swap","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::manual_swap)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":9924,"byte_start":9809,"column_end":40,"column_start":17,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":69,"line_start":67,"suggested_replacement":"std::mem::swap(&mut pos_region1, &mut pos_region2);","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":49,"highlight_start":17,"text":"                let temp_pos: i64 = pos_region1;"},{"highlight_end":43,"highlight_start":1,"text":"                pos_region1 = pos_region2;"},{"highlight_end":40,"highlight_start":1,"text":"                pos_region2 = temp_pos;"}]}]}],"code":{"code":"clippy::manual_swap","explanation":null},"level":"warning","message":"this looks like you are swapping `pos_region1` and `pos_region2` manually","spans":[{"byte_end":9924,"byte_start":9809,"column_end":40,"column_start":17,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":69,"line_start":67,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":49,"highlight_start":17,"text":"                let temp_pos: i64 = pos_region1;"},{"highlight_end":43,"highlight_start":1,"text":"                pos_region1 = pos_region2;"},{"highlight_end":40,"highlight_start":1,"text":"                pos_region2 = temp_pos;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is only used to index `reads1`\n   --> src/sv.rs:122:22\n    |\n122 |             for i in 0..reads1.len() {\n    |                      ^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n122 -             for i in 0..reads1.len() {\n122 +             for <item> in &reads1 {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":12541,"byte_start":12540,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":122,"line_start":122,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":18,"highlight_start":17,"text":"            for i in 0..reads1.len() {"}]},{"byte_end":12560,"byte_start":12545,"column_end":37,"column_start":22,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":122,"line_start":122,"suggested_replacement":"&reads1","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":37,"highlight_start":22,"text":"            for i in 0..reads1.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is only used to index `reads1`","spans":[{"byte_end":12560,"byte_start":12545,"column_end":37,"column_start":22,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":122,"line_start":122,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":22,"text":"            for i in 0..reads1.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `j` is only used to index `reads2`\n   --> src/sv.rs:123:26\n    |\n123 |                 for j in 0..reads2.len() {\n    |                          ^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n123 -                 for j in 0..reads2.len() {\n123 +                 for <item> in &reads2 {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":12584,"byte_start":12583,"column_end":22,"column_start":21,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":123,"line_start":123,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":22,"highlight_start":21,"text":"                for j in 0..reads2.len() {"}]},{"byte_end":12603,"byte_start":12588,"column_end":41,"column_start":26,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":123,"line_start":123,"suggested_replacement":"&reads2","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":41,"highlight_start":26,"text":"                for j in 0..reads2.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `j` is only used to index `reads2`","spans":[{"byte_end":12603,"byte_start":12588,"column_end":41,"column_start":26,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":123,"line_start":123,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":26,"text":"                for j in 0..reads2.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/sv.rs:130:51\n    |\n130 |                         multi_region_templates += &\",\".to_string();\n    |                                                   ^^^^^^^^^^^^^^^^ help: use: `\",\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":12988,"byte_start":12972,"column_end":67,"column_start":51,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":130,"line_start":130,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":67,"highlight_start":51,"text":"                        multi_region_templates += &\",\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":12988,"byte_start":12972,"column_end":67,"column_start":51,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":130,"line_start":130,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":67,"highlight_start":51,"text":"                        multi_region_templates += &\",\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/sv.rs:136:51\n    |\n136 |                         multi_region_templates += &\",\".to_string();\n    |                                                   ^^^^^^^^^^^^^^^^ help: use: `\",\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":13312,"byte_start":13296,"column_end":67,"column_start":51,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":136,"line_start":136,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":67,"highlight_start":51,"text":"                        multi_region_templates += &\",\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":13312,"byte_start":13296,"column_end":67,"column_start":51,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":136,"line_start":136,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":67,"highlight_start":51,"text":"                        multi_region_templates += &\",\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `j` is only used to index `multi_region_templates_list`\n   --> src/sv.rs:146:26\n    |\n146 |                 for j in 0..multi_region_templates_list.len() {\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n146 -                 for j in 0..multi_region_templates_list.len() {\n146 +                 for <item> in &multi_region_templates_list {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":13725,"byte_start":13724,"column_end":22,"column_start":21,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":146,"line_start":146,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":22,"highlight_start":21,"text":"                for j in 0..multi_region_templates_list.len() {"}]},{"byte_end":13765,"byte_start":13729,"column_end":62,"column_start":26,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":146,"line_start":146,"suggested_replacement":"&multi_region_templates_list","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":62,"highlight_start":26,"text":"                for j in 0..multi_region_templates_list.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `j` is only used to index `multi_region_templates_list`","spans":[{"byte_end":13765,"byte_start":13729,"column_end":62,"column_start":26,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":146,"line_start":146,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":26,"text":"                for j in 0..multi_region_templates_list.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the borrowed expression implements the required traits\n   --> src/DEanalysis.rs:517:31\n    |\n517 |     let file = HDF5File::open(&hdf5_filename).unwrap(); // open for reading\n    |                               ^^^^^^^^^^^^^^ help: change this to: `hdf5_filename`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":23116,"byte_start":23102,"column_end":45,"column_start":31,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":517,"line_start":517,"suggested_replacement":"hdf5_filename","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":45,"highlight_start":31,"text":"    let file = HDF5File::open(&hdf5_filename).unwrap(); // open for reading"}]}]}],"code":{"code":"clippy::needless_borrows_for_generic_args","explanation":null},"level":"warning","message":"the borrowed expression implements the required traits","spans":[{"byte_end":23116,"byte_start":23102,"column_end":45,"column_start":31,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":517,"line_start":517,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":31,"text":"    let file = HDF5File::open(&hdf5_filename).unwrap(); // open for reading"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/sv.rs:155:48\n    |\n155 |                     single_region_templates += &\",\".to_string();\n    |                                                ^^^^^^^^^^^^^^^^ help: use: `\",\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":14222,"byte_start":14206,"column_end":64,"column_start":48,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":155,"line_start":155,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":64,"highlight_start":48,"text":"                    single_region_templates += &\",\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":14222,"byte_start":14206,"column_end":64,"column_start":48,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":155,"line_start":155,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":64,"highlight_start":48,"text":"                    single_region_templates += &\",\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `j` is only used to index `multi_region_templates_list`\n   --> src/sv.rs:160:26\n    |\n160 |                 for j in 0..multi_region_templates_list.len() {\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n160 -                 for j in 0..multi_region_templates_list.len() {\n160 +                 for <item> in &multi_region_templates_list {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":14357,"byte_start":14356,"column_end":22,"column_start":21,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":160,"line_start":160,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":22,"highlight_start":21,"text":"                for j in 0..multi_region_templates_list.len() {"}]},{"byte_end":14397,"byte_start":14361,"column_end":62,"column_start":26,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":160,"line_start":160,"suggested_replacement":"&multi_region_templates_list","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":62,"highlight_start":26,"text":"                for j in 0..multi_region_templates_list.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `j` is only used to index `multi_region_templates_list`","spans":[{"byte_end":14397,"byte_start":14361,"column_end":62,"column_start":26,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":160,"line_start":160,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":26,"text":"                for j in 0..multi_region_templates_list.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: useless use of `format!`\n   --> src/DEanalysis.rs:538:27\n    |\n538 |         output_string += &format!(\"{}\", samples[i].to_string());\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `samples[i].to_string()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format\n    = note: `#[warn(clippy::useless_format)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::useless_format)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using `.to_string()`","rendered":null,"spans":[{"byte_end":24011,"byte_start":23974,"column_end":64,"column_start":27,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":538,"line_start":538,"suggested_replacement":"samples[i].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":64,"highlight_start":27,"text":"        output_string += &format!(\"{}\", samples[i].to_string());"}]}]}],"code":{"code":"clippy::useless_format","explanation":null},"level":"warning","message":"useless use of `format!`","spans":[{"byte_end":24011,"byte_start":23974,"column_end":64,"column_start":27,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":538,"line_start":538,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":64,"highlight_start":27,"text":"        output_string += &format!(\"{}\", samples[i].to_string());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: `to_string` applied to a type that implements `Display` in `format!` args\n   --> src/DEanalysis.rs:538:51\n    |\n538 |         output_string += &format!(\"{}\", samples[i].to_string());\n    |                                                   ^^^^^^^^^^^^ help: remove this\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#to_string_in_format_args\n    = note: `#[warn(clippy::to_string_in_format_args)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#to_string_in_format_args","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::to_string_in_format_args)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove this","rendered":null,"spans":[{"byte_end":24010,"byte_start":23998,"column_end":63,"column_start":51,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":538,"line_start":538,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":63,"highlight_start":51,"text":"        output_string += &format!(\"{}\", samples[i].to_string());"}]}]}],"code":{"code":"clippy::to_string_in_format_args","explanation":null},"level":"warning","message":"`to_string` applied to a type that implements `Display` in `format!` args","spans":[{"byte_end":24010,"byte_start":23998,"column_end":63,"column_start":51,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":538,"line_start":538,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":63,"highlight_start":51,"text":"        output_string += &format!(\"{}\", samples[i].to_string());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/sv.rs:169:48\n    |\n169 |                     single_region_templates += &\",\".to_string();\n    |                                                ^^^^^^^^^^^^^^^^ help: use: `\",\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":14854,"byte_start":14838,"column_end":64,"column_start":48,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":169,"line_start":169,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":64,"highlight_start":48,"text":"                    single_region_templates += &\",\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":14854,"byte_start":14838,"column_end":64,"column_start":48,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":169,"line_start":169,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":64,"highlight_start":48,"text":"                    single_region_templates += &\",\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/DEanalysis.rs:547:30\n    |\n547 |             output_string += &\",\";\n    |                              ^^^^ help: change this to: `\",\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_borrow)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":24308,"byte_start":24304,"column_end":34,"column_start":30,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":547,"line_start":547,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":34,"highlight_start":30,"text":"            output_string += &\",\";"}]}]}],"code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","message":"this expression creates a reference which is immediately dereferenced by the compiler","spans":[{"byte_end":24308,"byte_start":24304,"column_end":34,"column_start":30,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":547,"line_start":547,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":30,"text":"            output_string += &\",\";"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/sv.rs:175:40\n    |\n175 |             single_region_templates += &\"]\".to_string();\n    |                                        ^^^^^^^^^^^^^^^^ help: use: `\"]\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":15099,"byte_start":15083,"column_end":56,"column_start":40,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":175,"line_start":175,"suggested_replacement":"\"]\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":56,"highlight_start":40,"text":"            single_region_templates += &\"]\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":15099,"byte_start":15083,"column_end":56,"column_start":40,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":175,"line_start":175,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":40,"text":"            single_region_templates += &\"]\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/sv.rs:179:39\n    |\n179 |             multi_region_templates += &\"]\".to_string();\n    |                                       ^^^^^^^^^^^^^^^^ help: use: `\"]\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":15309,"byte_start":15293,"column_end":55,"column_start":39,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":179,"line_start":179,"suggested_replacement":"\"]\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":55,"highlight_start":39,"text":"            multi_region_templates += &\"]\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":15309,"byte_start":15293,"column_end":55,"column_start":39,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":179,"line_start":179,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":39,"text":"            multi_region_templates += &\"]\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/sv.rs:202:12\n    |\n202 |         if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n202 -         if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n202 +         if cigar_sequence == \"*\" || &cigar_sequence == &\"=\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":16255,"byte_start":16240,"column_end":27,"column_start":12,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":202,"line_start":202,"suggested_replacement":"cigar_sequence","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":27,"highlight_start":12,"text":"        if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]},{"byte_end":16263,"byte_start":16259,"column_end":35,"column_start":31,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":202,"line_start":202,"suggested_replacement":"\"*\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":35,"highlight_start":31,"text":"        if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":16263,"byte_start":16240,"column_end":35,"column_start":12,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":202,"line_start":202,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":12,"text":"        if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/sv.rs:202:39\n    |\n202 |         if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n    |                                       ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n202 -         if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n202 +         if &cigar_sequence == &\"*\" || cigar_sequence == \"=\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":16282,"byte_start":16267,"column_end":54,"column_start":39,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":202,"line_start":202,"suggested_replacement":"cigar_sequence","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":39,"text":"        if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]},{"byte_end":16290,"byte_start":16286,"column_end":62,"column_start":58,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":202,"line_start":202,"suggested_replacement":"\"=\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":58,"text":"        if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":16290,"byte_start":16267,"column_end":62,"column_start":39,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":202,"line_start":202,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":39,"text":"        if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/sv.rs:210:16\n    |\n210 |             if &alphabets[0].to_string().as_str() == &\"I\"\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n210 -             if &alphabets[0].to_string().as_str() == &\"I\"\n210 +             if alphabets[0].to_string().as_str() == \"I\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":16765,"byte_start":16731,"column_end":50,"column_start":16,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":210,"line_start":210,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":50,"highlight_start":16,"text":"            if &alphabets[0].to_string().as_str() == &\"I\""}]},{"byte_end":16773,"byte_start":16769,"column_end":58,"column_start":54,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":210,"line_start":210,"suggested_replacement":"\"I\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":54,"text":"            if &alphabets[0].to_string().as_str() == &\"I\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":16773,"byte_start":16731,"column_end":58,"column_start":16,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":210,"line_start":210,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":16,"text":"            if &alphabets[0].to_string().as_str() == &\"I\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/sv.rs:211:20\n    |\n211 |                 || &alphabets[0].to_string().as_str() == &\"S\"\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n211 -                 || &alphabets[0].to_string().as_str() == &\"S\"\n211 +                 || alphabets[0].to_string().as_str() == \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":16827,"byte_start":16793,"column_end":54,"column_start":20,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":211,"line_start":211,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":20,"text":"                || &alphabets[0].to_string().as_str() == &\"S\""}]},{"byte_end":16835,"byte_start":16831,"column_end":62,"column_start":58,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":211,"line_start":211,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":58,"text":"                || &alphabets[0].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":16835,"byte_start":16793,"column_end":62,"column_start":20,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":211,"line_start":211,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":20,"text":"                || &alphabets[0].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: manual implementation of an assign operation\n   --> src/sv.rs:213:17\n    |\n213 | /                 correct_start_position =\n214 | |                     correct_start_position - numbers[0].to_string().parse::<i64>().unwrap();\n    | |___________________________________________________________________________________________^ help: replace it with: `correct_start_position -= numbers[0].to_string().parse::<i64>().unwrap()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":16982,"byte_start":16866,"column_end":92,"column_start":17,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":214,"line_start":213,"suggested_replacement":"correct_start_position -= numbers[0].to_string().parse::<i64>().unwrap()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":41,"highlight_start":17,"text":"                correct_start_position ="},{"highlight_end":92,"highlight_start":1,"text":"                    correct_start_position - numbers[0].to_string().parse::<i64>().unwrap();"}]}]}],"code":{"code":"clippy::assign_op_pattern","explanation":null},"level":"warning","message":"manual implementation of an assign operation","spans":[{"byte_end":16982,"byte_start":16866,"column_end":92,"column_start":17,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":214,"line_start":213,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":17,"text":"                correct_start_position ="},{"highlight_end":92,"highlight_start":1,"text":"                    correct_start_position - numbers[0].to_string().parse::<i64>().unwrap();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/sv.rs:223:20\n    |\n223 |                 if &alphabets[i].to_string().as_str() == &\"H\" { // In case of a hard-clip, the read in the bam file will not contain indel region\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n223 -                 if &alphabets[i].to_string().as_str() == &\"H\" { // In case of a hard-clip, the read in the bam file will not contain indel region\n223 +                 if alphabets[i].to_string().as_str() == \"H\" { // In case of a hard-clip, the read in the bam file will not contain indel region\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":17548,"byte_start":17514,"column_end":54,"column_start":20,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":223,"line_start":223,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":20,"text":"                if &alphabets[i].to_string().as_str() == &\"H\" { // In case of a hard-clip, the read in the bam file will not contain indel region"}]},{"byte_end":17556,"byte_start":17552,"column_end":62,"column_start":58,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":223,"line_start":223,"suggested_replacement":"\"H\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":58,"text":"                if &alphabets[i].to_string().as_str() == &\"H\" { // In case of a hard-clip, the read in the bam file will not contain indel region"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":17556,"byte_start":17514,"column_end":62,"column_start":20,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":223,"line_start":223,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":20,"text":"                if &alphabets[i].to_string().as_str() == &\"H\" { // In case of a hard-clip, the read in the bam file will not contain indel region"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/sv.rs:224:27\n    |\n224 |                 } else if &alphabets[i].to_string().as_str() == &\"N\" {\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n224 -                 } else if &alphabets[i].to_string().as_str() == &\"N\" {\n224 +                 } else if alphabets[i].to_string().as_str() == \"N\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":17701,"byte_start":17667,"column_end":61,"column_start":27,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":224,"line_start":224,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":27,"text":"                } else if &alphabets[i].to_string().as_str() == &\"N\" {"}]},{"byte_end":17709,"byte_start":17705,"column_end":69,"column_start":65,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":224,"line_start":224,"suggested_replacement":"\"N\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":69,"highlight_start":65,"text":"                } else if &alphabets[i].to_string().as_str() == &\"N\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":17709,"byte_start":17667,"column_end":69,"column_start":27,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":224,"line_start":224,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":27,"text":"                } else if &alphabets[i].to_string().as_str() == &\"N\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/sv.rs:227:27\n    |\n227 |                 } else if &alphabets[i].to_string().as_str() == &\"I\" {\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n227 -                 } else if &alphabets[i].to_string().as_str() == &\"I\" {\n227 +                 } else if alphabets[i].to_string().as_str() == \"I\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":17902,"byte_start":17868,"column_end":61,"column_start":27,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":227,"line_start":227,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":27,"text":"                } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]},{"byte_end":17910,"byte_start":17906,"column_end":69,"column_start":65,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":227,"line_start":227,"suggested_replacement":"\"I\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":69,"highlight_start":65,"text":"                } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":17910,"byte_start":17868,"column_end":69,"column_start":27,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":227,"line_start":227,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":27,"text":"                } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/DEanalysis.rs:566:38\n    |\n566 |                       let file_name = &json_string[\"input_file\"]\n    |  ______________________________________^\n567 | |                         .to_owned()\n568 | |                         .as_str()\n569 | |                         .unwrap()\n570 | |                         .to_string()\n571 | |                         .split(\",\")\n    | |___________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n    = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\nhelp: use\n    |\n566 ~                     let file_name = &json_string[\"input_file\"]\n567 +                         .to_owned()\n568 +                         .as_str()\n569 +                         .unwrap().split(\",\")\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::unnecessary_to_owned)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":25150,"byte_start":24948,"column_end":36,"column_start":38,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":571,"line_start":566,"suggested_replacement":"json_string[\"input_file\"]\n                        .to_owned()\n                        .as_str()\n                        .unwrap().split(\",\")","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":63,"highlight_start":38,"text":"                    let file_name = &json_string[\"input_file\"]"},{"highlight_end":36,"highlight_start":1,"text":"                        .to_owned()"},{"highlight_end":34,"highlight_start":1,"text":"                        .as_str()"},{"highlight_end":34,"highlight_start":1,"text":"                        .unwrap()"},{"highlight_end":37,"highlight_start":1,"text":"                        .to_string()"},{"highlight_end":36,"highlight_start":1,"text":"                        .split(\",\")"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":25150,"byte_start":24948,"column_end":36,"column_start":38,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":571,"line_start":566,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":63,"highlight_start":38,"text":"                    let file_name = &json_string[\"input_file\"]"},{"highlight_end":36,"highlight_start":1,"text":"                        .to_owned()"},{"highlight_end":34,"highlight_start":1,"text":"                        .as_str()"},{"highlight_end":34,"highlight_start":1,"text":"                        .unwrap()"},{"highlight_end":37,"highlight_start":1,"text":"                        .to_string()"},{"highlight_end":36,"highlight_start":1,"text":"                        .split(\",\")"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/sv.rs:283:24\n    |\n283 |                     if &alphabets[i].to_string().as_str() != &\"N\" {\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n283 -                     if &alphabets[i].to_string().as_str() != &\"N\" {\n283 +                     if alphabets[i].to_string().as_str() != \"N\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":21211,"byte_start":21177,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":283,"line_start":283,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() != &\"N\" {"}]},{"byte_end":21219,"byte_start":21215,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":283,"line_start":283,"suggested_replacement":"\"N\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"                    if &alphabets[i].to_string().as_str() != &\"N\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":21219,"byte_start":21177,"column_end":66,"column_start":24,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":283,"line_start":283,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() != &\"N\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/sv.rs:288:24\n    |\n288 |                     if &alphabets[i].to_string().as_str() == &\"N\" {\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n288 -                     if &alphabets[i].to_string().as_str() == &\"N\" {\n288 +                     if alphabets[i].to_string().as_str() == \"N\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":21442,"byte_start":21408,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":288,"line_start":288,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() == &\"N\" {"}]},{"byte_end":21450,"byte_start":21446,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":288,"line_start":288,"suggested_replacement":"\"N\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"                    if &alphabets[i].to_string().as_str() == &\"N\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":21450,"byte_start":21408,"column_end":66,"column_start":24,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":288,"line_start":288,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() == &\"N\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/sv.rs:291:31\n    |\n291 |                     } else if &alphabets[i].to_string().as_str() == &\"I\" {\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n291 -                     } else if &alphabets[i].to_string().as_str() == &\"I\" {\n291 +                     } else if alphabets[i].to_string().as_str() == \"I\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":21651,"byte_start":21617,"column_end":65,"column_start":31,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":291,"line_start":291,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":65,"highlight_start":31,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]},{"byte_end":21659,"byte_start":21655,"column_end":73,"column_start":69,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":291,"line_start":291,"suggested_replacement":"\"I\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":73,"highlight_start":69,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":21659,"byte_start":21617,"column_end":73,"column_start":31,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":291,"line_start":291,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":31,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/sv.rs:294:31\n    |\n294 |                     } else if &alphabets[i].to_string().as_str() == &\"D\" {\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n294 -                     } else if &alphabets[i].to_string().as_str() == &\"D\" {\n294 +                     } else if alphabets[i].to_string().as_str() == \"D\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":22028,"byte_start":21994,"column_end":65,"column_start":31,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":294,"line_start":294,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":65,"highlight_start":31,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"D\" {"}]},{"byte_end":22036,"byte_start":22032,"column_end":73,"column_start":69,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":294,"line_start":294,"suggested_replacement":"\"D\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":73,"highlight_start":69,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"D\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":22036,"byte_start":21994,"column_end":73,"column_start":31,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":294,"line_start":294,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":31,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"D\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/sv.rs:299:31\n    |\n299 |                     } else if &alphabets[i].to_string().as_str() == &\"M\"\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n299 -                     } else if &alphabets[i].to_string().as_str() == &\"M\"\n299 +                     } else if alphabets[i].to_string().as_str() == \"M\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":22522,"byte_start":22488,"column_end":65,"column_start":31,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":299,"line_start":299,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":65,"highlight_start":31,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"M\""}]},{"byte_end":22530,"byte_start":22526,"column_end":73,"column_start":69,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":299,"line_start":299,"suggested_replacement":"\"M\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":73,"highlight_start":69,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"M\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":22530,"byte_start":22488,"column_end":73,"column_start":31,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":299,"line_start":299,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":31,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"M\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/sv.rs:300:28\n    |\n300 |                         || &alphabets[i].to_string().as_str() == &\"S\"\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n300 -                         || &alphabets[i].to_string().as_str() == &\"S\"\n300 +                         || alphabets[i].to_string().as_str() == \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":22592,"byte_start":22558,"column_end":62,"column_start":28,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":300,"line_start":300,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":28,"text":"                        || &alphabets[i].to_string().as_str() == &\"S\""}]},{"byte_end":22600,"byte_start":22596,"column_end":70,"column_start":66,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":300,"line_start":300,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":66,"text":"                        || &alphabets[i].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":22600,"byte_start":22558,"column_end":70,"column_start":28,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":300,"line_start":300,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":28,"text":"                        || &alphabets[i].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/sv.rs:316:24\n    |\n316 |                     if &alphabets[i].to_string().as_str() == &\"N\" {\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n316 -                     if &alphabets[i].to_string().as_str() == &\"N\" {\n316 +                     if alphabets[i].to_string().as_str() == \"N\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":23429,"byte_start":23395,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":316,"line_start":316,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() == &\"N\" {"}]},{"byte_end":23437,"byte_start":23433,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":316,"line_start":316,"suggested_replacement":"\"N\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"                    if &alphabets[i].to_string().as_str() == &\"N\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":23437,"byte_start":23395,"column_end":66,"column_start":24,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":316,"line_start":316,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() == &\"N\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"sv","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/sv.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/sv.rs:351:20\n    |\n351 |                 if contains_break_point == true {\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `contains_break_point`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":25676,"byte_start":25648,"column_end":48,"column_start":20,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":351,"line_start":351,"suggested_replacement":"contains_break_point","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":48,"highlight_start":20,"text":"                if contains_break_point == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":25676,"byte_start":25648,"column_end":48,"column_start":20,"expansion":null,"file_name":"src/sv.rs","is_primary":true,"label":null,"line_end":351,"line_start":351,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":20,"text":"                if contains_break_point == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: manual implementation of an assign operation\n   --> src/DEanalysis.rs:692:41\n    |\n692 | / ...                   normalized_matrix[(row, col)] =\n693 | | ...                       normalized_matrix[(row, col)] / norm_factor;\n    | |_____________________________________________________________________^ help: replace it with: `normalized_matrix[(row, col)] /= norm_factor`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n    = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::assign_op_pattern)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":32683,"byte_start":32564,"column_end":88,"column_start":41,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":693,"line_start":692,"suggested_replacement":"normalized_matrix[(row, col)] /= norm_factor","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":72,"highlight_start":41,"text":"                                        normalized_matrix[(row, col)] ="},{"highlight_end":88,"highlight_start":1,"text":"                                            normalized_matrix[(row, col)] / norm_factor;"}]}]}],"code":{"code":"clippy::assign_op_pattern","explanation":null},"level":"warning","message":"manual implementation of an assign operation","spans":[{"byte_end":32683,"byte_start":32564,"column_end":88,"column_start":41,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":693,"line_start":692,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":72,"highlight_start":41,"text":"                                        normalized_matrix[(row, col)] ="},{"highlight_end":88,"highlight_start":1,"text":"                                            normalized_matrix[(row, col)] / norm_factor;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/DEanalysis.rs:746:44\n    |\n746 |   ...                   if (treated_mean.unwrap() / control_mean.unwrap())\n    |  __________________________^\n747 | | ...                       .log2()\n748 | | ...                       .is_nan()\n749 | | ...                       == false\n    | |__________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\nhelp: try simplifying it as shown\n    |\n746 ~                                         if !(treated_mean.unwrap() / control_mean.unwrap())\n747 +                                             .log2()\n748 +                                             .is_nan()\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":36776,"byte_start":36570,"column_end":53,"column_start":44,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":749,"line_start":746,"suggested_replacement":"!(treated_mean.unwrap() / control_mean.unwrap())\n                                            .log2()\n                                            .is_nan()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":91,"highlight_start":44,"text":"                                        if (treated_mean.unwrap() / control_mean.unwrap())"},{"highlight_end":52,"highlight_start":1,"text":"                                            .log2()"},{"highlight_end":54,"highlight_start":1,"text":"                                            .is_nan()"},{"highlight_end":53,"highlight_start":1,"text":"                                            == false"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":36776,"byte_start":36570,"column_end":53,"column_start":44,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":749,"line_start":746,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":91,"highlight_start":44,"text":"                                        if (treated_mean.unwrap() / control_mean.unwrap())"},{"highlight_end":52,"highlight_start":1,"text":"                                            .log2()"},{"highlight_end":54,"highlight_start":1,"text":"                                            .is_nan()"},{"highlight_end":53,"highlight_start":1,"text":"                                            == false"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/DEanalysis.rs:750:48\n    |\n750 |   ...                   && (treated_mean.unwrap() / control_mean.unwrap())\n    |  __________________________^\n751 | | ...                       .log2()\n752 | | ...                       .is_infinite()\n753 | | ...                       == false\n    | |__________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\nhelp: try simplifying it as shown\n    |\n750 ~                                             && !(treated_mean.unwrap() / control_mean.unwrap())\n751 +                                                 .log2()\n752 +                                                 .is_infinite()\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":37047,"byte_start":36824,"column_end":57,"column_start":48,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":753,"line_start":750,"suggested_replacement":"!(treated_mean.unwrap() / control_mean.unwrap())\n                                                .log2()\n                                                .is_infinite()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":95,"highlight_start":48,"text":"                                            && (treated_mean.unwrap() / control_mean.unwrap())"},{"highlight_end":56,"highlight_start":1,"text":"                                                .log2()"},{"highlight_end":63,"highlight_start":1,"text":"                                                .is_infinite()"},{"highlight_end":57,"highlight_start":1,"text":"                                                == false"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":37047,"byte_start":36824,"column_end":57,"column_start":48,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":753,"line_start":750,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":95,"highlight_start":48,"text":"                                            && (treated_mean.unwrap() / control_mean.unwrap())"},{"highlight_end":56,"highlight_start":1,"text":"                                                .log2()"},{"highlight_end":63,"highlight_start":1,"text":"                                                .is_infinite()"},{"highlight_end":57,"highlight_start":1,"text":"                                                == false"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this function has too many arguments (9/7)\n  --> src/realign.rs:11:1\n   |\n11 | / fn check_base_pair_quality_scores(\n12 | |     // Function that checks for base pair quality score to ensure all reads being aligned have high quality reads near the variant position\n13 | |     quality_score_sequence: &String, // String containing read base pair sequence\n14 | |     alphabets: &Vec<char>,           // Alphabets from CIGAR sequence\n...  |\n21 | |     right_flanking_region_limit: i64, // Right hand region upto where base-pair quality check needs to be carried out\n22 | | ) -> bool {\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n   = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::too_many_arguments)]` on by default","rendered":null,"spans":[]}],"code":{"code":"clippy::too_many_arguments","explanation":null},"level":"warning","message":"this function has too many arguments (9/7)","spans":[{"byte_end":1283,"byte_start":351,"column_end":10,"column_start":1,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":22,"line_start":11,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":1,"text":"fn check_base_pair_quality_scores("},{"highlight_end":140,"highlight_start":1,"text":"    // Function that checks for base pair quality score to ensure all reads being aligned have high quality reads near the variant position"},{"highlight_end":82,"highlight_start":1,"text":"    quality_score_sequence: &String, // String containing read base pair sequence"},{"highlight_end":70,"highlight_start":1,"text":"    alphabets: &Vec<char>,           // Alphabets from CIGAR sequence"},{"highlight_end":68,"highlight_start":1,"text":"    numbers: &Vec<i64>,              // Numbers from CIGAR sequence"},{"highlight_end":63,"highlight_start":1,"text":"    mut start_position: i64,         // Start position of read"},{"highlight_end":66,"highlight_start":1,"text":"    variant_pos: i64,                // Start position of variant"},{"highlight_end":116,"highlight_start":1,"text":"    flanking_region_length: i64, // Flanking region uptil where base-pair quality of nucleotides need to be checked"},{"highlight_end":49,"highlight_start":1,"text":"    indel_length: i64,           // Indel length"},{"highlight_end":116,"highlight_start":1,"text":"    left_flanking_region_limit: i64, // Left hand region upto where base-pair quality check needs to be carried out"},{"highlight_end":118,"highlight_start":1,"text":"    right_flanking_region_limit: i64, // Right hand region upto where base-pair quality check needs to be carried out"},{"highlight_end":10,"highlight_start":1,"text":") -> bool {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/realign.rs:13:29\n   |\n13 |     quality_score_sequence: &String, // String containing read base pair sequence\n   |                             ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::ptr_arg)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":561,"byte_start":554,"column_end":36,"column_start":29,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":13,"line_start":13,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":36,"highlight_start":29,"text":"    quality_score_sequence: &String, // String containing read base pair sequence"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":561,"byte_start":554,"column_end":36,"column_start":29,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":13,"line_start":13,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":29,"text":"    quality_score_sequence: &String, // String containing read base pair sequence"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n  --> src/realign.rs:14:16\n   |\n14 |     alphabets: &Vec<char>,           // Alphabets from CIGAR sequence\n   |                ^^^^^^^^^^ help: change this to: `&[char]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":633,"byte_start":623,"column_end":26,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":14,"line_start":14,"suggested_replacement":"&[char]","suggestion_applicability":"Unspecified","text":[{"highlight_end":26,"highlight_start":16,"text":"    alphabets: &Vec<char>,           // Alphabets from CIGAR sequence"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":633,"byte_start":623,"column_end":26,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":14,"line_start":14,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":16,"text":"    alphabets: &Vec<char>,           // Alphabets from CIGAR sequence"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n  --> src/realign.rs:15:14\n   |\n15 |     numbers: &Vec<i64>,              // Numbers from CIGAR sequence\n   |              ^^^^^^^^^ help: change this to: `&[i64]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":700,"byte_start":691,"column_end":23,"column_start":14,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":15,"line_start":15,"suggested_replacement":"&[i64]","suggestion_applicability":"Unspecified","text":[{"highlight_end":23,"highlight_start":14,"text":"    numbers: &Vec<i64>,              // Numbers from CIGAR sequence"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":700,"byte_start":691,"column_end":23,"column_start":14,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":15,"line_start":15,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":14,"text":"    numbers: &Vec<i64>,              // Numbers from CIGAR sequence"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/DEanalysis.rs:831:56\n    |\n831 |   ...                   if (treated_mean.unwrap()\n    |  __________________________^\n832 | | ...                       / control_mean.unwrap())\n833 | | ...                   .log2()\n834 | | ...                   .is_nan()\n835 | | ...                       == false\n    | |__________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\nhelp: try simplifying it as shown\n    |\n831 ~                                                     if !(treated_mean.unwrap()\n832 +                                                         / control_mean.unwrap())\n833 +                                                     .log2()\n834 +                                                     .is_nan()\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":43702,"byte_start":43412,"column_end":65,"column_start":56,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":835,"line_start":831,"suggested_replacement":"!(treated_mean.unwrap()\n                                                        / control_mean.unwrap())\n                                                    .log2()\n                                                    .is_nan()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":78,"highlight_start":56,"text":"                                                    if (treated_mean.unwrap()"},{"highlight_end":81,"highlight_start":1,"text":"                                                        / control_mean.unwrap())"},{"highlight_end":60,"highlight_start":1,"text":"                                                    .log2()"},{"highlight_end":62,"highlight_start":1,"text":"                                                    .is_nan()"},{"highlight_end":65,"highlight_start":1,"text":"                                                        == false"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":43702,"byte_start":43412,"column_end":65,"column_start":56,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":835,"line_start":831,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":78,"highlight_start":56,"text":"                                                    if (treated_mean.unwrap()"},{"highlight_end":81,"highlight_start":1,"text":"                                                        / control_mean.unwrap())"},{"highlight_end":60,"highlight_start":1,"text":"                                                    .log2()"},{"highlight_end":62,"highlight_start":1,"text":"                                                    .is_nan()"},{"highlight_end":65,"highlight_start":1,"text":"                                                        == false"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n  --> src/realign.rs:26:8\n   |\n26 |     if &alphabets[0].to_string().as_str() == &\"S\" {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\n   = note: `#[warn(clippy::op_ref)]` on by default\nhelp: use the values directly\n   |\n26 -     if &alphabets[0].to_string().as_str() == &\"S\" {\n26 +     if alphabets[0].to_string().as_str() == \"S\" {\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::op_ref)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":1607,"byte_start":1573,"column_end":42,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":26,"line_start":26,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":42,"highlight_start":8,"text":"    if &alphabets[0].to_string().as_str() == &\"S\" {"}]},{"byte_end":1615,"byte_start":1611,"column_end":50,"column_start":46,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":26,"line_start":26,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":50,"highlight_start":46,"text":"    if &alphabets[0].to_string().as_str() == &\"S\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":1615,"byte_start":1573,"column_end":50,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":26,"line_start":26,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":8,"text":"    if &alphabets[0].to_string().as_str() == &\"S\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/DEanalysis.rs:836:60\n    |\n836 |   ...                   && (treated_mean.unwrap()\n    |  __________________________^\n837 | | ...                       / control_mean.unwrap())\n838 | | ...                   .log2()\n839 | | ...                   .is_infinite()\n840 | | ...                       == false\n    | |__________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\nhelp: try simplifying it as shown\n    |\n836 ~                                                         && !(treated_mean.unwrap()\n837 +                                                             / control_mean.unwrap())\n838 +                                                         .log2()\n839 +                                                         .is_infinite()\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":44073,"byte_start":43762,"column_end":69,"column_start":60,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":840,"line_start":836,"suggested_replacement":"!(treated_mean.unwrap()\n                                                            / control_mean.unwrap())\n                                                        .log2()\n                                                        .is_infinite()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":82,"highlight_start":60,"text":"                                                        && (treated_mean.unwrap()"},{"highlight_end":85,"highlight_start":1,"text":"                                                            / control_mean.unwrap())"},{"highlight_end":64,"highlight_start":1,"text":"                                                        .log2()"},{"highlight_end":71,"highlight_start":1,"text":"                                                        .is_infinite()"},{"highlight_end":69,"highlight_start":1,"text":"                                                            == false"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":44073,"byte_start":43762,"column_end":69,"column_start":60,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":840,"line_start":836,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":82,"highlight_start":60,"text":"                                                        && (treated_mean.unwrap()"},{"highlight_end":85,"highlight_start":1,"text":"                                                            / control_mean.unwrap())"},{"highlight_end":64,"highlight_start":1,"text":"                                                        .log2()"},{"highlight_end":71,"highlight_start":1,"text":"                                                        .is_infinite()"},{"highlight_end":69,"highlight_start":1,"text":"                                                            == false"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n  --> src/realign.rs:34:12\n   |\n34 |         if &alphabets[i].to_string().as_str() == &\"H\" {\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n   |\n34 -         if &alphabets[i].to_string().as_str() == &\"H\" {\n34 +         if alphabets[i].to_string().as_str() == \"H\" {\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":2044,"byte_start":2010,"column_end":46,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":34,"line_start":34,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":46,"highlight_start":12,"text":"        if &alphabets[i].to_string().as_str() == &\"H\" {"}]},{"byte_end":2052,"byte_start":2048,"column_end":54,"column_start":50,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":34,"line_start":34,"suggested_replacement":"\"H\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":50,"text":"        if &alphabets[i].to_string().as_str() == &\"H\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":2052,"byte_start":2010,"column_end":54,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":34,"line_start":34,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":12,"text":"        if &alphabets[i].to_string().as_str() == &\"H\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n  --> src/realign.rs:37:19\n   |\n37 |         } else if &alphabets[i].to_string().as_str() == &\"M\"\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n   |\n37 -         } else if &alphabets[i].to_string().as_str() == &\"M\"\n37 +         } else if alphabets[i].to_string().as_str() == \"M\"\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":2161,"byte_start":2127,"column_end":53,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":37,"line_start":37,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":53,"highlight_start":19,"text":"        } else if &alphabets[i].to_string().as_str() == &\"M\""}]},{"byte_end":2169,"byte_start":2165,"column_end":61,"column_start":57,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":37,"line_start":37,"suggested_replacement":"\"M\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":57,"text":"        } else if &alphabets[i].to_string().as_str() == &\"M\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":2169,"byte_start":2127,"column_end":61,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":37,"line_start":37,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":61,"highlight_start":19,"text":"        } else if &alphabets[i].to_string().as_str() == &\"M\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n  --> src/realign.rs:38:16\n   |\n38 |             || &alphabets[i].to_string().as_str() == &\"S\"\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n   |\n38 -             || &alphabets[i].to_string().as_str() == &\"S\"\n38 +             || alphabets[i].to_string().as_str() == \"S\"\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":2219,"byte_start":2185,"column_end":50,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":38,"line_start":38,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":50,"highlight_start":16,"text":"            || &alphabets[i].to_string().as_str() == &\"S\""}]},{"byte_end":2227,"byte_start":2223,"column_end":58,"column_start":54,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":38,"line_start":38,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":54,"text":"            || &alphabets[i].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":2227,"byte_start":2185,"column_end":58,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":38,"line_start":38,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":16,"text":"            || &alphabets[i].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` branch is empty\n  --> src/realign.rs:45:17\n   |\n45 | /                 if left_flanking_region_limit <= current_nucl\n46 | |                     && current_nucl <= right_flanking_region_limit\n47 | |                 {}\n   | |__________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_if\n   = note: `#[warn(clippy::needless_if)]` on by default\nhelp: you can remove it\n   |\n45 ~                 left_flanking_region_limit <= current_nucl\n46 +                     && current_nucl <= right_flanking_region_limit;\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_if","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_if)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"you can remove it","rendered":null,"spans":[{"byte_end":2858,"byte_start":2727,"column_end":19,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":47,"line_start":45,"suggested_replacement":"left_flanking_region_limit <= current_nucl\n                    && current_nucl <= right_flanking_region_limit;","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":17,"text":"                if left_flanking_region_limit <= current_nucl"},{"highlight_end":67,"highlight_start":1,"text":"                    && current_nucl <= right_flanking_region_limit"},{"highlight_end":19,"highlight_start":1,"text":"                {}"}]}]}],"code":{"code":"clippy::needless_if","explanation":null},"level":"warning","message":"this `if` branch is empty","spans":[{"byte_end":2858,"byte_start":2727,"column_end":19,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":47,"line_start":45,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":17,"text":"                if left_flanking_region_limit <= current_nucl"},{"highlight_end":67,"highlight_start":1,"text":"                    && current_nucl <= right_flanking_region_limit"},{"highlight_end":19,"highlight_start":1,"text":"                {}"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n  --> src/realign.rs:54:19\n   |\n54 |         } else if &alphabets[i].to_string().as_str() == &\"D\"\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n   |\n54 -         } else if &alphabets[i].to_string().as_str() == &\"D\"\n54 +         } else if alphabets[i].to_string().as_str() == \"D\"\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":3047,"byte_start":3013,"column_end":53,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":54,"line_start":54,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":53,"highlight_start":19,"text":"        } else if &alphabets[i].to_string().as_str() == &\"D\""}]},{"byte_end":3055,"byte_start":3051,"column_end":61,"column_start":57,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":54,"line_start":54,"suggested_replacement":"\"D\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":57,"text":"        } else if &alphabets[i].to_string().as_str() == &\"D\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":3055,"byte_start":3013,"column_end":61,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":54,"line_start":54,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":61,"highlight_start":19,"text":"        } else if &alphabets[i].to_string().as_str() == &\"D\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n  --> src/realign.rs:55:16\n   |\n55 |             || &alphabets[i].to_string().as_str() == &\"N\"\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n   |\n55 -             || &alphabets[i].to_string().as_str() == &\"N\"\n55 +             || alphabets[i].to_string().as_str() == \"N\"\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":3105,"byte_start":3071,"column_end":50,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":55,"line_start":55,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":50,"highlight_start":16,"text":"            || &alphabets[i].to_string().as_str() == &\"N\""}]},{"byte_end":3113,"byte_start":3109,"column_end":58,"column_start":54,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":55,"line_start":55,"suggested_replacement":"\"N\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":54,"text":"            || &alphabets[i].to_string().as_str() == &\"N\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":3113,"byte_start":3071,"column_end":58,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":55,"line_start":55,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":16,"text":"            || &alphabets[i].to_string().as_str() == &\"N\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n  --> src/realign.rs:58:19\n   |\n58 |         } else if &alphabets[i].to_string().as_str() == &\"I\" {\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n   |\n58 -         } else if &alphabets[i].to_string().as_str() == &\"I\" {\n58 +         } else if alphabets[i].to_string().as_str() == \"I\" {\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":3251,"byte_start":3217,"column_end":53,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":58,"line_start":58,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":53,"highlight_start":19,"text":"        } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]},{"byte_end":3259,"byte_start":3255,"column_end":61,"column_start":57,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":58,"line_start":58,"suggested_replacement":"\"I\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":57,"text":"        } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":3259,"byte_start":3217,"column_end":61,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":58,"line_start":58,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":61,"highlight_start":19,"text":"        } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/DEanalysis.rs:942:30\n    |\n942 |             output_string += &\",\".to_string();\n    |                              ^^^^^^^^^^^^^^^^ help: use: `\",\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":49125,"byte_start":49109,"column_end":46,"column_start":30,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":942,"line_start":942,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":46,"highlight_start":30,"text":"            output_string += &\",\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":49125,"byte_start":49109,"column_end":46,"column_start":30,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":942,"line_start":942,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":30,"text":"            output_string += &\",\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/DEanalysis.rs:945:22\n    |\n945 |     output_string += &\"]\".to_string();\n    |                      ^^^^^^^^^^^^^^^^ help: use: `\"]\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":49180,"byte_start":49164,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":945,"line_start":945,"suggested_replacement":"\"]\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":38,"highlight_start":22,"text":"    output_string += &\"]\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":49180,"byte_start":49164,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":945,"line_start":945,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":22,"text":"    output_string += &\"]\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this function has too many arguments (9/7)\n  --> src/realign.rs:71:1\n   |\n71 | / pub fn realign_reads(\n72 | |     sequences: &String, // Variable contains sequences separated by \"-\" character, the first two sequences contains the ref and alt sequences\n73 | |     start_positions: &String, // Variable contains start position of reads separated by \"-\" character\n74 | |     cigar_sequences: &String, // Variable contains cigar sequences separated by \"-\" character\n...  |\n80 | |     indel_length: i64,       // Indel length\n81 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments","rendered":null,"spans":[]}],"code":{"code":"clippy::too_many_arguments","explanation":null},"level":"warning","message":"this function has too many arguments (9/7)","spans":[{"byte_end":4457,"byte_start":3705,"column_end":2,"column_start":1,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":81,"line_start":71,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":22,"highlight_start":1,"text":"pub fn realign_reads("},{"highlight_end":142,"highlight_start":1,"text":"    sequences: &String, // Variable contains sequences separated by \"-\" character, the first two sequences contains the ref and alt sequences"},{"highlight_end":102,"highlight_start":1,"text":"    start_positions: &String, // Variable contains start position of reads separated by \"-\" character"},{"highlight_end":94,"highlight_start":1,"text":"    cigar_sequences: &String, // Variable contains cigar sequences separated by \"-\" character"},{"highlight_end":101,"highlight_start":1,"text":"    quality_scores: &String, // Variable contains quality scores of reads separated by \"-\" character"},{"highlight_end":49,"highlight_start":1,"text":"    clustalo_path: &String,  // Path to clustalo"},{"highlight_end":69,"highlight_start":1,"text":"    ref_sequence: &String,   // Complete original reference sequence"},{"highlight_end":69,"highlight_start":1,"text":"    alt_sequence: &String,   // Complete original alternate sequence"},{"highlight_end":58,"highlight_start":1,"text":"    variant_pos: i64,        // Original variant position"},{"highlight_end":45,"highlight_start":1,"text":"    indel_length: i64,       // Indel length"},{"highlight_end":2,"highlight_start":1,"text":") {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/realign.rs:72:16\n   |\n72 |     sequences: &String, // Variable contains sequences separated by \"-\" character, the first two sequences contains the ref and alt sequences\n   |                ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":3749,"byte_start":3742,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":72,"line_start":72,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":23,"highlight_start":16,"text":"    sequences: &String, // Variable contains sequences separated by \"-\" character, the first two sequences contains the ref and alt sequences"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":3749,"byte_start":3742,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":72,"line_start":72,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":16,"text":"    sequences: &String, // Variable contains sequences separated by \"-\" character, the first two sequences contains the ref and alt sequences"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/realign.rs:73:22\n   |\n73 |     start_positions: &String, // Variable contains start position of reads separated by \"-\" character\n   |                      ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":3897,"byte_start":3890,"column_end":29,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":73,"line_start":73,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":29,"highlight_start":22,"text":"    start_positions: &String, // Variable contains start position of reads separated by \"-\" character"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":3897,"byte_start":3890,"column_end":29,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":73,"line_start":73,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":22,"text":"    start_positions: &String, // Variable contains start position of reads separated by \"-\" character"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/realign.rs:74:22\n   |\n74 |     cigar_sequences: &String, // Variable contains cigar sequences separated by \"-\" character\n   |                      ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":3999,"byte_start":3992,"column_end":29,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":74,"line_start":74,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":29,"highlight_start":22,"text":"    cigar_sequences: &String, // Variable contains cigar sequences separated by \"-\" character"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":3999,"byte_start":3992,"column_end":29,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":74,"line_start":74,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":22,"text":"    cigar_sequences: &String, // Variable contains cigar sequences separated by \"-\" character"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/realign.rs:75:21\n   |\n75 |     quality_scores: &String, // Variable contains quality scores of reads separated by \"-\" character\n   |                     ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":4092,"byte_start":4085,"column_end":28,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":75,"line_start":75,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":28,"highlight_start":21,"text":"    quality_scores: &String, // Variable contains quality scores of reads separated by \"-\" character"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":4092,"byte_start":4085,"column_end":28,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":75,"line_start":75,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":28,"highlight_start":21,"text":"    quality_scores: &String, // Variable contains quality scores of reads separated by \"-\" character"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/realign.rs:76:20\n   |\n76 |     clustalo_path: &String,  // Path to clustalo\n   |                    ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":4192,"byte_start":4185,"column_end":27,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":76,"line_start":76,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":27,"highlight_start":20,"text":"    clustalo_path: &String,  // Path to clustalo"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":4192,"byte_start":4185,"column_end":27,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":76,"line_start":76,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":20,"text":"    clustalo_path: &String,  // Path to clustalo"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/realign.rs:77:19\n   |\n77 |     ref_sequence: &String,   // Complete original reference sequence\n   |                   ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":4240,"byte_start":4233,"column_end":26,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":77,"line_start":77,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":26,"highlight_start":19,"text":"    ref_sequence: &String,   // Complete original reference sequence"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":4240,"byte_start":4233,"column_end":26,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":77,"line_start":77,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":19,"text":"    ref_sequence: &String,   // Complete original reference sequence"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/realign.rs:78:19\n   |\n78 |     alt_sequence: &String,   // Complete original alternate sequence\n   |                   ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":4309,"byte_start":4302,"column_end":26,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":78,"line_start":78,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":26,"highlight_start":19,"text":"    alt_sequence: &String,   // Complete original alternate sequence"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":4309,"byte_start":4302,"column_end":26,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":78,"line_start":78,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":19,"text":"    alt_sequence: &String,   // Complete original alternate sequence"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:104:36\n    |\n104 |         if alphabets.len() == 1 && &alphabets[0].to_string().as_str() == &\"M\" {\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n104 -         if alphabets.len() == 1 && &alphabets[0].to_string().as_str() == &\"M\" {\n104 +         if alphabets.len() == 1 && alphabets[0].to_string().as_str() == \"M\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":6559,"byte_start":6525,"column_end":70,"column_start":36,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":104,"line_start":104,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":36,"text":"        if alphabets.len() == 1 && &alphabets[0].to_string().as_str() == &\"M\" {"}]},{"byte_end":6567,"byte_start":6563,"column_end":78,"column_start":74,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":104,"line_start":104,"suggested_replacement":"\"M\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":78,"highlight_start":74,"text":"        if alphabets.len() == 1 && &alphabets[0].to_string().as_str() == &\"M\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":6567,"byte_start":6525,"column_end":78,"column_start":36,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":104,"line_start":104,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":78,"highlight_start":36,"text":"        if alphabets.len() == 1 && &alphabets[0].to_string().as_str() == &\"M\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/DEanalysis.rs:986:28\n    |\n986 |                 col_sum += (input_matrix[(row, col)] as f64).sqrt();\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `input_matrix[(row, col)]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":50959,"byte_start":50926,"column_end":61,"column_start":28,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":986,"line_start":986,"suggested_replacement":"input_matrix[(row, col)]","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":28,"text":"                col_sum += (input_matrix[(row, col)] as f64).sqrt();"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":50959,"byte_start":50926,"column_end":61,"column_start":28,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":986,"line_start":986,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":61,"highlight_start":28,"text":"                col_sum += (input_matrix[(row, col)] as f64).sqrt();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is used to index `f75`\n   --> src/DEanalysis.rs:996:18\n    |\n996 |         for i in 0..f75.len() {\n    |                  ^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator and enumerate()\n    |\n996 -         for i in 0..f75.len() {\n996 +         for (i, <item>) in f75.iter().enumerate() {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator and enumerate()","rendered":null,"spans":[{"byte_end":51219,"byte_start":51218,"column_end":14,"column_start":13,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":996,"line_start":996,"suggested_replacement":"(i, <item>)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":14,"highlight_start":13,"text":"        for i in 0..f75.len() {"}]},{"byte_end":51235,"byte_start":51223,"column_end":30,"column_start":18,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":996,"line_start":996,"suggested_replacement":"f75.iter().enumerate()","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":30,"highlight_start":18,"text":"        for i in 0..f75.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is used to index `f75`","spans":[{"byte_end":51235,"byte_start":51223,"column_end":30,"column_start":18,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":996,"line_start":996,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":18,"text":"        for i in 0..f75.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:112:20\n    |\n112 |                 if &alphabets[0].to_string().as_str() == &\"S\"\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n112 -                 if &alphabets[0].to_string().as_str() == &\"S\"\n112 +                 if alphabets[0].to_string().as_str() == \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":7042,"byte_start":7008,"column_end":54,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":112,"line_start":112,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":20,"text":"                if &alphabets[0].to_string().as_str() == &\"S\""}]},{"byte_end":7050,"byte_start":7046,"column_end":62,"column_start":58,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":112,"line_start":112,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":58,"text":"                if &alphabets[0].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":7050,"byte_start":7008,"column_end":62,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":112,"line_start":112,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":20,"text":"                if &alphabets[0].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:113:24\n    |\n113 |                     || &alphabets[0].to_string().as_str() == &\"H\"\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n113 -                     || &alphabets[0].to_string().as_str() == &\"H\"\n113 +                     || alphabets[0].to_string().as_str() == \"H\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":7108,"byte_start":7074,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":113,"line_start":113,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    || &alphabets[0].to_string().as_str() == &\"H\""}]},{"byte_end":7116,"byte_start":7112,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":113,"line_start":113,"suggested_replacement":"\"H\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"                    || &alphabets[0].to_string().as_str() == &\"H\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":7116,"byte_start":7074,"column_end":66,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":113,"line_start":113,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":24,"text":"                    || &alphabets[0].to_string().as_str() == &\"H\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:118:55\n    |\n118 |                 } else if j == alphabets.len() - 1 && &alphabets[j].to_string().as_str() == &\"H\" {\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n118 -                 } else if j == alphabets.len() - 1 && &alphabets[j].to_string().as_str() == &\"H\" {\n118 +                 } else if j == alphabets.len() - 1 && alphabets[j].to_string().as_str() == \"H\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":7455,"byte_start":7421,"column_end":89,"column_start":55,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":118,"line_start":118,"suggested_replacement":"alphabets[j].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":89,"highlight_start":55,"text":"                } else if j == alphabets.len() - 1 && &alphabets[j].to_string().as_str() == &\"H\" {"}]},{"byte_end":7463,"byte_start":7459,"column_end":97,"column_start":93,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":118,"line_start":118,"suggested_replacement":"\"H\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":97,"highlight_start":93,"text":"                } else if j == alphabets.len() - 1 && &alphabets[j].to_string().as_str() == &\"H\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":7463,"byte_start":7421,"column_end":97,"column_start":55,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":118,"line_start":118,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":97,"highlight_start":55,"text":"                } else if j == alphabets.len() - 1 && &alphabets[j].to_string().as_str() == &\"H\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:121:27\n    |\n121 |                 } else if &alphabets[j].to_string().as_str() == &\"N\" {\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n121 -                 } else if &alphabets[j].to_string().as_str() == &\"N\" {\n121 +                 } else if alphabets[j].to_string().as_str() == \"N\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":7615,"byte_start":7581,"column_end":61,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":121,"line_start":121,"suggested_replacement":"alphabets[j].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":27,"text":"                } else if &alphabets[j].to_string().as_str() == &\"N\" {"}]},{"byte_end":7623,"byte_start":7619,"column_end":69,"column_start":65,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":121,"line_start":121,"suggested_replacement":"\"N\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":69,"highlight_start":65,"text":"                } else if &alphabets[j].to_string().as_str() == &\"N\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":7623,"byte_start":7581,"column_end":69,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":121,"line_start":121,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":27,"text":"                } else if &alphabets[j].to_string().as_str() == &\"N\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `col` is used to index `lib_sizes`\n    --> src/DEanalysis.rs:1010:20\n     |\n1010 |         for col in 0..input_matrix.ncols() {\n     |                    ^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator and enumerate()\n     |\n1010 -         for col in 0..input_matrix.ncols() {\n1010 +         for (col, <item>) in lib_sizes.iter().enumerate().take(input_matrix.ncols()) {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator and enumerate()","rendered":null,"spans":[{"byte_end":51753,"byte_start":51750,"column_end":16,"column_start":13,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1010,"line_start":1010,"suggested_replacement":"(col, <item>)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":16,"highlight_start":13,"text":"        for col in 0..input_matrix.ncols() {"}]},{"byte_end":51780,"byte_start":51757,"column_end":43,"column_start":20,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1010,"line_start":1010,"suggested_replacement":"lib_sizes.iter().enumerate().take(input_matrix.ncols())","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":43,"highlight_start":20,"text":"        for col in 0..input_matrix.ncols() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `col` is used to index `lib_sizes`","spans":[{"byte_end":51780,"byte_start":51757,"column_end":43,"column_start":20,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1010,"line_start":1010,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":20,"text":"        for col in 0..input_matrix.ncols() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:134:27\n    |\n134 |                 } else if &alphabets[j].to_string().as_str() == &\"I\"\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n134 -                 } else if &alphabets[j].to_string().as_str() == &\"I\"\n134 +                 } else if alphabets[j].to_string().as_str() == \"I\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":8584,"byte_start":8550,"column_end":61,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":134,"line_start":134,"suggested_replacement":"alphabets[j].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":27,"text":"                } else if &alphabets[j].to_string().as_str() == &\"I\""}]},{"byte_end":8592,"byte_start":8588,"column_end":69,"column_start":65,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":134,"line_start":134,"suggested_replacement":"\"I\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":69,"highlight_start":65,"text":"                } else if &alphabets[j].to_string().as_str() == &\"I\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":8592,"byte_start":8550,"column_end":69,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":134,"line_start":134,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":27,"text":"                } else if &alphabets[j].to_string().as_str() == &\"I\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:135:24\n    |\n135 |                     || &alphabets[j].to_string().as_str() == &\"D\"\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n135 -                     || &alphabets[j].to_string().as_str() == &\"D\"\n135 +                     || alphabets[j].to_string().as_str() == \"D\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":8650,"byte_start":8616,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":135,"line_start":135,"suggested_replacement":"alphabets[j].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    || &alphabets[j].to_string().as_str() == &\"D\""}]},{"byte_end":8658,"byte_start":8654,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":135,"line_start":135,"suggested_replacement":"\"D\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"                    || &alphabets[j].to_string().as_str() == &\"D\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":8658,"byte_start":8616,"column_end":66,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":135,"line_start":135,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":24,"text":"                    || &alphabets[j].to_string().as_str() == &\"D\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"error: approximate value of `f{32, 64}::consts::E` found\n    --> src/DEanalysis.rs:1062:28\n     |\n1062 |     const NATURAL_E: f64 = 2.718281828459;\n     |                            ^^^^^^^^^^^^^^\n     |\n     = help: consider using the constant directly\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant\n     = note: `#[deny(clippy::approx_constant)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"consider using the constant directly","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[deny(clippy::approx_constant)]` on by default","rendered":null,"spans":[]}],"code":{"code":"clippy::approx_constant","explanation":null},"level":"error","message":"approximate value of `f{32, 64}::consts::E` found","spans":[{"byte_end":54368,"byte_start":54354,"column_end":42,"column_start":28,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1062,"line_start":1062,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":42,"highlight_start":28,"text":"    const NATURAL_E: f64 = 2.718281828459;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this function has too many arguments (8/7)\n   --> src/realign.rs:187:1\n    |\n187 | / pub fn check_read_within_indel_region(\n188 | |     left_most_pos: i64, // Left most pos, contains start_positions_list input for that particular read i.e the nucleotide position from where th...\n189 | |     cigar_sequence: String, // Cigar sequence of that read\n190 | |     indel_starts: &Vec<i64>, // Indel start position\n...   |\n195 | |     read_sequence: String, // Original read sequence\n196 | | ) -> (usize, Vec<i64>, Vec<i64>, Vec<String>, Vec<String>) {\n    | |__________________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments","rendered":null,"spans":[]}],"code":{"code":"clippy::too_many_arguments","explanation":null},"level":"warning","message":"this function has too many arguments (8/7)","spans":[{"byte_end":11986,"byte_start":11322,"column_end":59,"column_start":1,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":196,"line_start":187,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":1,"text":"pub fn check_read_within_indel_region("},{"highlight_end":175,"highlight_start":1,"text":"    left_most_pos: i64, // Left most pos, contains start_positions_list input for that particular read i.e the nucleotide position from where that particular read starts from"},{"highlight_end":59,"highlight_start":1,"text":"    cigar_sequence: String, // Cigar sequence of that read"},{"highlight_end":53,"highlight_start":1,"text":"    indel_starts: &Vec<i64>, // Indel start position"},{"highlight_end":51,"highlight_start":1,"text":"    indel_lengths: &Vec<usize>, // Length of indel"},{"highlight_end":58,"highlight_start":1,"text":"    refalleles: &Vec<&str>, // Length of reference allele"},{"highlight_end":58,"highlight_start":1,"text":"    altalleles: &Vec<&str>, // Length of alternate allele"},{"highlight_end":60,"highlight_start":1,"text":"    strictness: usize,  // Strictness of the indel pipeline"},{"highlight_end":53,"highlight_start":1,"text":"    read_sequence: String, // Original read sequence"},{"highlight_end":59,"highlight_start":1,"text":") -> (usize, Vec<i64>, Vec<i64>, Vec<String>, Vec<String>) {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n    --> src/DEanalysis.rs:1087:21\n     |\n1087 |         let obs_f = obs_data[(i, 0)] as f64;\n     |                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `obs_data[(i, 0)]`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":55331,"byte_start":55308,"column_end":44,"column_start":21,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1087,"line_start":1087,"suggested_replacement":"obs_data[(i, 0)]","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":44,"highlight_start":21,"text":"        let obs_f = obs_data[(i, 0)] as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":55331,"byte_start":55308,"column_end":44,"column_start":21,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1087,"line_start":1087,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":21,"text":"        let obs_f = obs_data[(i, 0)] as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n    --> src/DEanalysis.rs:1088:21\n     |\n1088 |         let ref_f = ref_data[(i, 0)] as f64;\n     |                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `ref_data[(i, 0)]`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":55376,"byte_start":55353,"column_end":44,"column_start":21,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1088,"line_start":1088,"suggested_replacement":"ref_data[(i, 0)]","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":44,"highlight_start":21,"text":"        let ref_f = ref_data[(i, 0)] as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":55376,"byte_start":55353,"column_end":44,"column_start":21,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1088,"line_start":1088,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":21,"text":"        let ref_f = ref_data[(i, 0)] as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n   --> src/realign.rs:190:19\n    |\n190 |     indel_starts: &Vec<i64>, // Indel start position\n    |                   ^^^^^^^^^ help: change this to: `&[i64]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":11622,"byte_start":11613,"column_end":28,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":190,"line_start":190,"suggested_replacement":"&[i64]","suggestion_applicability":"Unspecified","text":[{"highlight_end":28,"highlight_start":19,"text":"    indel_starts: &Vec<i64>, // Indel start position"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":11622,"byte_start":11613,"column_end":28,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":190,"line_start":190,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":28,"highlight_start":19,"text":"    indel_starts: &Vec<i64>, // Indel start position"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n   --> src/realign.rs:191:20\n    |\n191 |     indel_lengths: &Vec<usize>, // Length of indel\n    |                    ^^^^^^^^^^^ help: change this to: `&[usize]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":11678,"byte_start":11667,"column_end":31,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":191,"line_start":191,"suggested_replacement":"&[usize]","suggestion_applicability":"Unspecified","text":[{"highlight_end":31,"highlight_start":20,"text":"    indel_lengths: &Vec<usize>, // Length of indel"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":11678,"byte_start":11667,"column_end":31,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":191,"line_start":191,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":20,"text":"    indel_lengths: &Vec<usize>, // Length of indel"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n   --> src/realign.rs:192:17\n    |\n192 |     refalleles: &Vec<&str>, // Length of reference allele\n    |                 ^^^^^^^^^^ help: change this to: `&[&str]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":11725,"byte_start":11715,"column_end":27,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":192,"line_start":192,"suggested_replacement":"&[&str]","suggestion_applicability":"Unspecified","text":[{"highlight_end":27,"highlight_start":17,"text":"    refalleles: &Vec<&str>, // Length of reference allele"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":11725,"byte_start":11715,"column_end":27,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":192,"line_start":192,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":17,"text":"    refalleles: &Vec<&str>, // Length of reference allele"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n   --> src/realign.rs:193:17\n    |\n193 |     altalleles: &Vec<&str>, // Length of alternate allele\n    |                 ^^^^^^^^^^ help: change this to: `&[&str]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":11783,"byte_start":11773,"column_end":27,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":193,"line_start":193,"suggested_replacement":"&[&str]","suggestion_applicability":"Unspecified","text":[{"highlight_end":27,"highlight_start":17,"text":"    altalleles: &Vec<&str>, // Length of alternate allele"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":11783,"byte_start":11773,"column_end":27,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":193,"line_start":193,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":17,"text":"    altalleles: &Vec<&str>, // Length of alternate allele"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:207:8\n    |\n207 |     if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n207 -     if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n207 +     if cigar_sequence == \"*\" || &cigar_sequence == &\"=\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":13489,"byte_start":13474,"column_end":23,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":207,"line_start":207,"suggested_replacement":"cigar_sequence","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":23,"highlight_start":8,"text":"    if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]},{"byte_end":13497,"byte_start":13493,"column_end":31,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":207,"line_start":207,"suggested_replacement":"\"*\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":31,"highlight_start":27,"text":"    if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":13497,"byte_start":13474,"column_end":31,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":207,"line_start":207,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":8,"text":"    if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:207:35\n    |\n207 |     if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n207 -     if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n207 +     if &cigar_sequence == &\"*\" || cigar_sequence == \"=\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":13516,"byte_start":13501,"column_end":50,"column_start":35,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":207,"line_start":207,"suggested_replacement":"cigar_sequence","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":50,"highlight_start":35,"text":"    if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]},{"byte_end":13524,"byte_start":13520,"column_end":58,"column_start":54,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":207,"line_start":207,"suggested_replacement":"\"=\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":54,"text":"    if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":13524,"byte_start":13501,"column_end":58,"column_start":35,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":207,"line_start":207,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":35,"text":"    if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:217:16\n    |\n217 |             if &alphabets[0].to_string().as_str() == &\"S\"\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n217 -             if &alphabets[0].to_string().as_str() == &\"S\"\n217 +             if alphabets[0].to_string().as_str() == \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":14397,"byte_start":14363,"column_end":50,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":217,"line_start":217,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":50,"highlight_start":16,"text":"            if &alphabets[0].to_string().as_str() == &\"S\""}]},{"byte_end":14405,"byte_start":14401,"column_end":58,"column_start":54,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":217,"line_start":217,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":54,"text":"            if &alphabets[0].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":14405,"byte_start":14363,"column_end":58,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":217,"line_start":217,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":16,"text":"            if &alphabets[0].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:218:20\n    |\n218 |                 || &alphabets[0].to_string().as_str() == &\"I\"\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n218 -                 || &alphabets[0].to_string().as_str() == &\"I\"\n218 +                 || alphabets[0].to_string().as_str() == \"I\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":14459,"byte_start":14425,"column_end":54,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":218,"line_start":218,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":20,"text":"                || &alphabets[0].to_string().as_str() == &\"I\""}]},{"byte_end":14467,"byte_start":14463,"column_end":62,"column_start":58,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":218,"line_start":218,"suggested_replacement":"\"I\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":58,"text":"                || &alphabets[0].to_string().as_str() == &\"I\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":14467,"byte_start":14425,"column_end":62,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":218,"line_start":218,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":20,"text":"                || &alphabets[0].to_string().as_str() == &\"I\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: manual implementation of an assign operation\n   --> src/realign.rs:220:17\n    |\n220 | /                 correct_start_position =\n221 | |                     correct_start_position - numbers[0].to_string().parse::<i64>().unwrap();\n    | |___________________________________________________________________________________________^ help: replace it with: `correct_start_position -= numbers[0].to_string().parse::<i64>().unwrap()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n    = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::assign_op_pattern)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":14614,"byte_start":14498,"column_end":92,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":221,"line_start":220,"suggested_replacement":"correct_start_position -= numbers[0].to_string().parse::<i64>().unwrap()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":41,"highlight_start":17,"text":"                correct_start_position ="},{"highlight_end":92,"highlight_start":1,"text":"                    correct_start_position - numbers[0].to_string().parse::<i64>().unwrap();"}]}]}],"code":{"code":"clippy::assign_op_pattern","explanation":null},"level":"warning","message":"manual implementation of an assign operation","spans":[{"byte_end":14614,"byte_start":14498,"column_end":92,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":221,"line_start":220,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":17,"text":"                correct_start_position ="},{"highlight_end":92,"highlight_start":1,"text":"                    correct_start_position - numbers[0].to_string().parse::<i64>().unwrap();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:232:20\n    |\n232 |                 if &alphabets[i].to_string().as_str() == &\"H\" { // In case of a hard-clip, the read in the bam file will not contain indel region\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n232 -                 if &alphabets[i].to_string().as_str() == &\"H\" { // In case of a hard-clip, the read in the bam file will not contain indel region\n232 +                 if alphabets[i].to_string().as_str() == \"H\" { // In case of a hard-clip, the read in the bam file will not contain indel region\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":15463,"byte_start":15429,"column_end":54,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":232,"line_start":232,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":20,"text":"                if &alphabets[i].to_string().as_str() == &\"H\" { // In case of a hard-clip, the read in the bam file will not contain indel region"}]},{"byte_end":15471,"byte_start":15467,"column_end":62,"column_start":58,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":232,"line_start":232,"suggested_replacement":"\"H\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":58,"text":"                if &alphabets[i].to_string().as_str() == &\"H\" { // In case of a hard-clip, the read in the bam file will not contain indel region"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":15471,"byte_start":15429,"column_end":62,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":232,"line_start":232,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":20,"text":"                if &alphabets[i].to_string().as_str() == &\"H\" { // In case of a hard-clip, the read in the bam file will not contain indel region"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:233:27\n    |\n233 |                 } else if &alphabets[i].to_string().as_str() == &\"N\" {\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n233 -                 } else if &alphabets[i].to_string().as_str() == &\"N\" {\n233 +                 } else if alphabets[i].to_string().as_str() == \"N\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":15616,"byte_start":15582,"column_end":61,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":233,"line_start":233,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":27,"text":"                } else if &alphabets[i].to_string().as_str() == &\"N\" {"}]},{"byte_end":15624,"byte_start":15620,"column_end":69,"column_start":65,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":233,"line_start":233,"suggested_replacement":"\"N\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":69,"highlight_start":65,"text":"                } else if &alphabets[i].to_string().as_str() == &\"N\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":15624,"byte_start":15582,"column_end":69,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":233,"line_start":233,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":27,"text":"                } else if &alphabets[i].to_string().as_str() == &\"N\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n    --> src/DEanalysis.rs:1147:30\n     |\n1147 | fn rank_vector(input_vector: &Vec<f64>) -> Vec<f64> {\n     |                              ^^^^^^^^^ help: change this to: `&[f64]`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":57158,"byte_start":57149,"column_end":39,"column_start":30,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1147,"line_start":1147,"suggested_replacement":"&[f64]","suggestion_applicability":"Unspecified","text":[{"highlight_end":39,"highlight_start":30,"text":"fn rank_vector(input_vector: &Vec<f64>) -> Vec<f64> {"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":57158,"byte_start":57149,"column_end":39,"column_start":30,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1147,"line_start":1147,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":30,"text":"fn rank_vector(input_vector: &Vec<f64>) -> Vec<f64> {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:238:27\n    |\n238 |                 } else if &alphabets[i].to_string().as_str() == &\"I\" {\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n238 -                 } else if &alphabets[i].to_string().as_str() == &\"I\" {\n238 +                 } else if alphabets[i].to_string().as_str() == \"I\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":15952,"byte_start":15918,"column_end":61,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":238,"line_start":238,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":27,"text":"                } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]},{"byte_end":15960,"byte_start":15956,"column_end":69,"column_start":65,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":238,"line_start":238,"suggested_replacement":"\"I\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":69,"highlight_start":65,"text":"                } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":15960,"byte_start":15918,"column_end":69,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":238,"line_start":238,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":27,"text":"                } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is used to index `input_vector`\n    --> src/DEanalysis.rs:1149:14\n     |\n1149 |     for i in 0..input_vector.len() {\n     |              ^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator and enumerate()\n     |\n1149 -     for i in 0..input_vector.len() {\n1149 +     for (i, <item>) in input_vector.iter().enumerate() {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator and enumerate()","rendered":null,"spans":[{"byte_end":57273,"byte_start":57272,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1149,"line_start":1149,"suggested_replacement":"(i, <item>)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":10,"highlight_start":9,"text":"    for i in 0..input_vector.len() {"}]},{"byte_end":57298,"byte_start":57277,"column_end":35,"column_start":14,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1149,"line_start":1149,"suggested_replacement":"input_vector.iter().enumerate()","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":35,"highlight_start":14,"text":"    for i in 0..input_vector.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is used to index `input_vector`","spans":[{"byte_end":57298,"byte_start":57277,"column_end":35,"column_start":14,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1149,"line_start":1149,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":14,"text":"    for i in 0..input_vector.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n   --> src/realign.rs:265:16\n    |\n265 |             if strictness >= 0 {\n    |                ^^^^^^^^^^^^^^^\n    |\n    = help: because `0` is the minimum value for this type, this comparison is always true\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons\n    = note: `#[deny(clippy::absurd_extreme_comparisons)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"because `0` is the minimum value for this type, this comparison is always true","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[deny(clippy::absurd_extreme_comparisons)]` on by default","rendered":null,"spans":[]}],"code":{"code":"clippy::absurd_extreme_comparisons","explanation":null},"level":"error","message":"this comparison involving the minimum or maximum element for this type contains a case that is always true or always false","spans":[{"byte_end":17301,"byte_start":17286,"column_end":31,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":265,"line_start":265,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":16,"text":"            if strictness >= 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n    --> src/DEanalysis.rs:1164:12\n     |\n1164 |         if is_repeat == false {\n     |            ^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!is_repeat`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":57857,"byte_start":57839,"column_end":30,"column_start":12,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1164,"line_start":1164,"suggested_replacement":"!is_repeat","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":30,"highlight_start":12,"text":"        if is_repeat == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":57857,"byte_start":57839,"column_end":30,"column_start":12,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1164,"line_start":1164,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":12,"text":"        if is_repeat == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n    --> src/DEanalysis.rs:1177:16\n     |\n1177 |             if is_repeat == false {\n     |                ^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!is_repeat`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":58375,"byte_start":58357,"column_end":34,"column_start":16,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1177,"line_start":1177,"suggested_replacement":"!is_repeat","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":34,"highlight_start":16,"text":"            if is_repeat == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":58375,"byte_start":58357,"column_end":34,"column_start":16,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1177,"line_start":1177,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":16,"text":"            if is_repeat == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:329:28\n    |\n329 |                         if &alphabets[i].to_string().as_str() == &\"S\" {\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n329 -                         if &alphabets[i].to_string().as_str() == &\"S\" {\n329 +                         if alphabets[i].to_string().as_str() == \"S\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":21568,"byte_start":21534,"column_end":62,"column_start":28,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":329,"line_start":329,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":28,"text":"                        if &alphabets[i].to_string().as_str() == &\"S\" {"}]},{"byte_end":21576,"byte_start":21572,"column_end":70,"column_start":66,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":329,"line_start":329,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":66,"text":"                        if &alphabets[i].to_string().as_str() == &\"S\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":21576,"byte_start":21534,"column_end":70,"column_start":28,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":329,"line_start":329,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":28,"text":"                        if &alphabets[i].to_string().as_str() == &\"S\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:340:24\n    |\n340 |                     if &alphabets[i].to_string().as_str() != &\"N\" {\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n340 -                     if &alphabets[i].to_string().as_str() != &\"N\" {\n340 +                     if alphabets[i].to_string().as_str() != \"N\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":22151,"byte_start":22117,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":340,"line_start":340,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() != &\"N\" {"}]},{"byte_end":22159,"byte_start":22155,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":340,"line_start":340,"suggested_replacement":"\"N\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"                    if &alphabets[i].to_string().as_str() != &\"N\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":22159,"byte_start":22117,"column_end":66,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":340,"line_start":340,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() != &\"N\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n    --> src/DEanalysis.rs:1216:16\n     |\n1216 |     lib_sizes: &Vec<f64>,\n     |                ^^^^^^^^^ help: change this to: `&[f64]`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":59741,"byte_start":59732,"column_end":25,"column_start":16,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1216,"line_start":1216,"suggested_replacement":"&[f64]","suggestion_applicability":"Unspecified","text":[{"highlight_end":25,"highlight_start":16,"text":"    lib_sizes: &Vec<f64>,"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":59741,"byte_start":59732,"column_end":25,"column_start":16,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1216,"line_start":1216,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":25,"highlight_start":16,"text":"    lib_sizes: &Vec<f64>,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:345:24\n    |\n345 |                     if &alphabets[i].to_string().as_str() == &\"N\" {\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n345 -                     if &alphabets[i].to_string().as_str() == &\"N\" {\n345 +                     if alphabets[i].to_string().as_str() == \"N\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":22382,"byte_start":22348,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":345,"line_start":345,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() == &\"N\" {"}]},{"byte_end":22390,"byte_start":22386,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":345,"line_start":345,"suggested_replacement":"\"N\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"                    if &alphabets[i].to_string().as_str() == &\"N\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":22390,"byte_start":22348,"column_end":66,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":345,"line_start":345,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() == &\"N\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:348:31\n    |\n348 |                     } else if &alphabets[i].to_string().as_str() == &\"I\" {\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n348 -                     } else if &alphabets[i].to_string().as_str() == &\"I\" {\n348 +                     } else if alphabets[i].to_string().as_str() == \"I\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":22591,"byte_start":22557,"column_end":65,"column_start":31,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":348,"line_start":348,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":65,"highlight_start":31,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]},{"byte_end":22599,"byte_start":22595,"column_end":73,"column_start":69,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":348,"line_start":348,"suggested_replacement":"\"I\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":73,"highlight_start":69,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":22599,"byte_start":22557,"column_end":73,"column_start":31,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":348,"line_start":348,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":31,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"I\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n    --> src/DEanalysis.rs:1223:26\n     |\n1223 |             row_vec.push(input_matrix[(i, j)] as f64);\n     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `input_matrix[(i, j)]`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":60087,"byte_start":60060,"column_end":53,"column_start":26,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1223,"line_start":1223,"suggested_replacement":"input_matrix[(i, j)]","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":53,"highlight_start":26,"text":"            row_vec.push(input_matrix[(i, j)] as f64);"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":60087,"byte_start":60060,"column_end":53,"column_start":26,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1223,"line_start":1223,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":53,"highlight_start":26,"text":"            row_vec.push(input_matrix[(i, j)] as f64);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:351:31\n    |\n351 |                     } else if &alphabets[i].to_string().as_str() == &\"D\" {\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n351 -                     } else if &alphabets[i].to_string().as_str() == &\"D\" {\n351 +                     } else if alphabets[i].to_string().as_str() == \"D\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":22968,"byte_start":22934,"column_end":65,"column_start":31,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":351,"line_start":351,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":65,"highlight_start":31,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"D\" {"}]},{"byte_end":22976,"byte_start":22972,"column_end":73,"column_start":69,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":351,"line_start":351,"suggested_replacement":"\"D\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":73,"highlight_start":69,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"D\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":22976,"byte_start":22934,"column_end":73,"column_start":31,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":351,"line_start":351,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":31,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"D\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: returning the result of a `let` binding from a block\n    --> src/DEanalysis.rs:1245:5\n     |\n1244 |     let qs_final = (1.0 - h) * qs + h * input[hi as usize - 1];\n     |     ----------------------------------------------------------- unnecessary `let` binding\n1245 |     qs_final\n     |     ^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n     |\n1244 ~     \n1245 ~     (1.0 - h) * qs + h * input[hi as usize - 1]\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"return the expression directly","rendered":null,"spans":[{"byte_end":60949,"byte_start":60890,"column_end":64,"column_start":5,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1244,"line_start":1244,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":64,"highlight_start":5,"text":"    let qs_final = (1.0 - h) * qs + h * input[hi as usize - 1];"}]},{"byte_end":60962,"byte_start":60954,"column_end":13,"column_start":5,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1245,"line_start":1245,"suggested_replacement":"(1.0 - h) * qs + h * input[hi as usize - 1]","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":13,"highlight_start":5,"text":"    qs_final"}]}]}],"code":{"code":"clippy::let_and_return","explanation":null},"level":"warning","message":"returning the result of a `let` binding from a block","spans":[{"byte_end":60949,"byte_start":60890,"column_end":64,"column_start":5,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":false,"label":"unnecessary `let` binding","line_end":1244,"line_start":1244,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":64,"highlight_start":5,"text":"    let qs_final = (1.0 - h) * qs + h * input[hi as usize - 1];"}]},{"byte_end":60962,"byte_start":60954,"column_end":13,"column_start":5,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1245,"line_start":1245,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":13,"highlight_start":5,"text":"    qs_final"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:356:31\n    |\n356 |                     } else if &alphabets[i].to_string().as_str() == &\"M\"\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n356 -                     } else if &alphabets[i].to_string().as_str() == &\"M\"\n356 +                     } else if alphabets[i].to_string().as_str() == \"M\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":23462,"byte_start":23428,"column_end":65,"column_start":31,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":356,"line_start":356,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":65,"highlight_start":31,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"M\""}]},{"byte_end":23470,"byte_start":23466,"column_end":73,"column_start":69,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":356,"line_start":356,"suggested_replacement":"\"M\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":73,"highlight_start":69,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"M\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":23470,"byte_start":23428,"column_end":73,"column_start":31,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":356,"line_start":356,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":31,"text":"                    } else if &alphabets[i].to_string().as_str() == &\"M\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:357:28\n    |\n357 |                         || &alphabets[i].to_string().as_str() == &\"S\"\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n357 -                         || &alphabets[i].to_string().as_str() == &\"S\"\n357 +                         || alphabets[i].to_string().as_str() == \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":23532,"byte_start":23498,"column_end":62,"column_start":28,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":357,"line_start":357,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":28,"text":"                        || &alphabets[i].to_string().as_str() == &\"S\""}]},{"byte_end":23540,"byte_start":23536,"column_end":70,"column_start":66,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":357,"line_start":357,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":66,"text":"                        || &alphabets[i].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":23540,"byte_start":23498,"column_end":70,"column_start":28,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":357,"line_start":357,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":28,"text":"                        || &alphabets[i].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src/DEanalysis.rs:1241:40\n     |\n1241 |     input.sort_by(|a, b| a.partial_cmp(&b).unwrap()); // In R implementation \"partial sort\" was carried out which is upposed to be faster. This m...\n     |                                        ^^ help: change this to: `b`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":60611,"byte_start":60609,"column_end":42,"column_start":40,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1241,"line_start":1241,"suggested_replacement":"b","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":42,"highlight_start":40,"text":"    input.sort_by(|a, b| a.partial_cmp(&b).unwrap()); // In R implementation \"partial sort\" was carried out which is upposed to be faster. This might be very slow for very large number of genes. Need to test this out with large number of genes later"}]}]}],"code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","message":"this expression creates a reference which is immediately dereferenced by the compiler","spans":[{"byte_end":60611,"byte_start":60609,"column_end":42,"column_start":40,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1241,"line_start":1241,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":42,"highlight_start":40,"text":"    input.sort_by(|a, b| a.partial_cmp(&b).unwrap()); // In R implementation \"partial sort\" was carried out which is upposed to be faster. This might be very slow for very large number of genes. Need to test this out with large number of genes later"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:373:24\n    |\n373 |                     if &alphabets[i].to_string().as_str() == &\"N\" {\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n373 -                     if &alphabets[i].to_string().as_str() == &\"N\" {\n373 +                     if alphabets[i].to_string().as_str() == \"N\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":24369,"byte_start":24335,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":373,"line_start":373,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() == &\"N\" {"}]},{"byte_end":24377,"byte_start":24373,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":373,"line_start":373,"suggested_replacement":"\"N\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"                    if &alphabets[i].to_string().as_str() == &\"N\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":24377,"byte_start":24335,"column_end":66,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":373,"line_start":373,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() == &\"N\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: manual implementation of an assign operation\n   --> src/realign.rs:420:21\n    |\n420 |                     splice_start_pos = splice_start_pos - indel_length as i64;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `splice_start_pos -= indel_length as i64`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":27864,"byte_start":27807,"column_end":78,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":420,"line_start":420,"suggested_replacement":"splice_start_pos -= indel_length as i64","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":78,"highlight_start":21,"text":"                    splice_start_pos = splice_start_pos - indel_length as i64;"}]}]}],"code":{"code":"clippy::assign_op_pattern","explanation":null},"level":"warning","message":"manual implementation of an assign operation","spans":[{"byte_end":27864,"byte_start":27807,"column_end":78,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":420,"line_start":420,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":78,"highlight_start":21,"text":"                    splice_start_pos = splice_start_pos - indel_length as i64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: very complex type used. Consider factoring parts into `type` definitions\n    --> src/DEanalysis.rs:1257:6\n     |\n1257 |   ) -> (\n     |  ______^\n1258 | |     Matrix<f64, Dyn, Dyn, VecStorage<f64, Dyn, Dyn>>,\n1259 | |     Vec<f64>,\n1260 | |     Vec<String>,\n1261 | |     Vec<String>,\n1262 | | ) {\n     | |_^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity","rendered":null,"spans":[]}],"code":{"code":"clippy::type_complexity","explanation":null},"level":"warning","message":"very complex type used. Consider factoring parts into `type` definitions","spans":[{"byte_end":61406,"byte_start":61301,"column_end":2,"column_start":6,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1262,"line_start":1257,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":7,"highlight_start":6,"text":") -> ("},{"highlight_end":54,"highlight_start":1,"text":"    Matrix<f64, Dyn, Dyn, VecStorage<f64, Dyn, Dyn>>,"},{"highlight_end":14,"highlight_start":1,"text":"    Vec<f64>,"},{"highlight_end":17,"highlight_start":1,"text":"    Vec<String>,"},{"highlight_end":17,"highlight_start":1,"text":"    Vec<String>,"},{"highlight_end":2,"highlight_start":1,"text":") {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: manual implementation of an assign operation\n   --> src/realign.rs:428:21\n    |\n428 |                     splice_stop_pos = splice_stop_pos + indel_length as i64;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `splice_stop_pos += indel_length as i64`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace it with","rendered":null,"spans":[{"byte_end":28651,"byte_start":28596,"column_end":76,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":428,"line_start":428,"suggested_replacement":"splice_stop_pos += indel_length as i64","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":76,"highlight_start":21,"text":"                    splice_stop_pos = splice_stop_pos + indel_length as i64;"}]}]}],"code":{"code":"clippy::assign_op_pattern","explanation":null},"level":"warning","message":"manual implementation of an assign operation","spans":[{"byte_end":28651,"byte_start":28596,"column_end":76,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":428,"line_start":428,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":76,"highlight_start":21,"text":"                    splice_stop_pos = splice_stop_pos + indel_length as i64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:436:16\n    |\n436 |             if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n436 -             if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n436 +             if cigar_sequence == \"*\" || &cigar_sequence == &\"=\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":29050,"byte_start":29035,"column_end":31,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":436,"line_start":436,"suggested_replacement":"cigar_sequence","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":31,"highlight_start":16,"text":"            if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]},{"byte_end":29058,"byte_start":29054,"column_end":39,"column_start":35,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":436,"line_start":436,"suggested_replacement":"\"*\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":39,"highlight_start":35,"text":"            if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":29058,"byte_start":29035,"column_end":39,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":436,"line_start":436,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":16,"text":"            if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:436:43\n    |\n436 |             if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n436 -             if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {\n436 +             if &cigar_sequence == &\"*\" || cigar_sequence == \"=\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":29077,"byte_start":29062,"column_end":58,"column_start":43,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":436,"line_start":436,"suggested_replacement":"cigar_sequence","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":43,"text":"            if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]},{"byte_end":29085,"byte_start":29081,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":436,"line_start":436,"suggested_replacement":"\"=\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"            if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":29085,"byte_start":29062,"column_end":66,"column_start":43,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":436,"line_start":436,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":43,"text":"            if &cigar_sequence == &\"*\" || &cigar_sequence == &\"=\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: useless conversion to the same type: `f64`\n    --> src/DEanalysis.rs:1287:24\n     |\n1287 |         lib_sizes.push(lib_sizes_vector[(0, i)].into());\n     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `lib_sizes_vector[(0, i)]`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n     = note: `#[warn(clippy::useless_conversion)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::useless_conversion)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider removing `.into()`","rendered":null,"spans":[{"byte_end":62410,"byte_start":62379,"column_end":55,"column_start":24,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1287,"line_start":1287,"suggested_replacement":"lib_sizes_vector[(0, i)]","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":55,"highlight_start":24,"text":"        lib_sizes.push(lib_sizes_vector[(0, i)].into());"}]}]}],"code":{"code":"clippy::useless_conversion","explanation":null},"level":"warning","message":"useless conversion to the same type: `f64`","spans":[{"byte_end":62410,"byte_start":62379,"column_end":55,"column_start":24,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1287,"line_start":1287,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":24,"text":"        lib_sizes.push(lib_sizes_vector[(0, i)].into());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:445:24\n    |\n445 |                     if &alphabets[i].to_string().as_str() != &\"H\" {\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n445 -                     if &alphabets[i].to_string().as_str() != &\"H\" {\n445 +                     if alphabets[i].to_string().as_str() != \"H\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":29696,"byte_start":29662,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":445,"line_start":445,"suggested_replacement":"alphabets[i].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() != &\"H\" {"}]},{"byte_end":29704,"byte_start":29700,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":445,"line_start":445,"suggested_replacement":"\"H\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"                    if &alphabets[i].to_string().as_str() != &\"H\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":29704,"byte_start":29662,"column_end":66,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":445,"line_start":445,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":24,"text":"                    if &alphabets[i].to_string().as_str() != &\"H\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src/DEanalysis.rs:1294:26\n     |\n1294 |     let cpm_matrix = cpm(&raw_data);\n     |                          ^^^^^^^^^ help: change this to: `raw_data`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":62727,"byte_start":62718,"column_end":35,"column_start":26,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1294,"line_start":1294,"suggested_replacement":"raw_data","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":35,"highlight_start":26,"text":"    let cpm_matrix = cpm(&raw_data);"}]}]}],"code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","message":"this expression creates a reference which is immediately dereferenced by the compiler","spans":[{"byte_end":62727,"byte_start":62718,"column_end":35,"column_start":26,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1294,"line_start":1294,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":26,"text":"    let cpm_matrix = cpm(&raw_data);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` has identical blocks\n   --> src/realign.rs:470:17\n    |\n470 | /                 {\n471 | |                     alignment_side = \"right\".to_string();\n...   |\n474 | |                 } else if &alphabets[0].to_string().as_str() == &\"S\"\n    | |_________________^\n    |\nnote: same as this\n   --> src/realign.rs:477:17\n    |\n477 | /                 {\n478 | |                     alignment_side = \"right\".to_string();\n...   |\n481 | |                 } else if splice_freq > 0\n    | |_________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else\n    = note: `#[warn(clippy::if_same_then_else)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"same as this","rendered":null,"spans":[{"byte_end":31976,"byte_start":31698,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":481,"line_start":477,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":17,"text":"                {"},{"highlight_end":58,"highlight_start":1,"text":"                    alignment_side = \"right\".to_string();"},{"highlight_end":112,"highlight_start":1,"text":"                    //read_indel_start = indel_start as usize - correct_end_position as usize + sequence.len();"},{"highlight_end":89,"highlight_start":1,"text":"                    //read_indel_start = correct_end_position as usize - sequence.len();"},{"highlight_end":18,"highlight_start":1,"text":"                } else if splice_freq > 0"}]}]},{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::if_same_then_else)]` on by default","rendered":null,"spans":[]}],"code":{"code":"clippy::if_same_then_else","explanation":null},"level":"warning","message":"this `if` has identical blocks","spans":[{"byte_end":31498,"byte_start":31220,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":474,"line_start":470,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":17,"text":"                {"},{"highlight_end":58,"highlight_start":1,"text":"                    alignment_side = \"right\".to_string();"},{"highlight_end":112,"highlight_start":1,"text":"                    //read_indel_start = indel_start as usize - correct_end_position as usize + sequence.len();"},{"highlight_end":89,"highlight_start":1,"text":"                    //read_indel_start = correct_end_position as usize - sequence.len();"},{"highlight_end":18,"highlight_start":1,"text":"                } else if &alphabets[0].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` has identical blocks\n   --> src/realign.rs:477:17\n    |\n477 | /                 {\n478 | |                     alignment_side = \"right\".to_string();\n...   |\n481 | |                 } else if splice_freq > 0\n    | |_________________^\n    |\nnote: same as this\n   --> src/realign.rs:484:17\n    |\n484 | /                 {\n485 | |                     alignment_side = \"right\".to_string();\n...   |\n488 | |                 } else if &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\"\n    | |_________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"same as this","rendered":null,"spans":[{"byte_end":32434,"byte_start":32156,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":488,"line_start":484,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":17,"text":"                {"},{"highlight_end":58,"highlight_start":1,"text":"                    alignment_side = \"right\".to_string();"},{"highlight_end":112,"highlight_start":1,"text":"                    //read_indel_start = indel_start as usize - correct_end_position as usize + sequence.len();"},{"highlight_end":89,"highlight_start":1,"text":"                    //read_indel_start = correct_end_position as usize - sequence.len();"},{"highlight_end":18,"highlight_start":1,"text":"                } else if &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\""}]}]},{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else","rendered":null,"spans":[]}],"code":{"code":"clippy::if_same_then_else","explanation":null},"level":"warning","message":"this `if` has identical blocks","spans":[{"byte_end":31976,"byte_start":31698,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":481,"line_start":477,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":17,"text":"                {"},{"highlight_end":58,"highlight_start":1,"text":"                    alignment_side = \"right\".to_string();"},{"highlight_end":112,"highlight_start":1,"text":"                    //read_indel_start = indel_start as usize - correct_end_position as usize + sequence.len();"},{"highlight_end":89,"highlight_start":1,"text":"                    //read_indel_start = correct_end_position as usize - sequence.len();"},{"highlight_end":18,"highlight_start":1,"text":"                } else if splice_freq > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` has identical blocks\n   --> src/realign.rs:496:17\n    |\n496 | /                 {\n497 | |                     alignment_side = \"right\".to_string();\n...   |\n500 | |                 } else if correct_start_position + alignment_offset > indel_start\n    | |_________________^\n    |\nnote: same as this\n   --> src/realign.rs:502:17\n    |\n502 | /                 {\n503 | |                     alignment_side = \"right\".to_string();\n...   |\n506 | |                 } else if (indel_start - correct_start_position).abs()\n    | |_________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"same as this","rendered":null,"spans":[{"byte_end":33631,"byte_start":33353,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":506,"line_start":502,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":17,"text":"                {"},{"highlight_end":58,"highlight_start":1,"text":"                    alignment_side = \"right\".to_string();"},{"highlight_end":112,"highlight_start":1,"text":"                    //read_indel_start = indel_start as usize - correct_end_position as usize + sequence.len();"},{"highlight_end":89,"highlight_start":1,"text":"                    //read_indel_start = correct_end_position as usize - sequence.len();"},{"highlight_end":18,"highlight_start":1,"text":"                } else if (indel_start - correct_start_position).abs()"}]}]},{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else","rendered":null,"spans":[]}],"code":{"code":"clippy::if_same_then_else","explanation":null},"level":"warning","message":"this `if` has identical blocks","spans":[{"byte_end":33198,"byte_start":32920,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":500,"line_start":496,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":17,"text":"                {"},{"highlight_end":58,"highlight_start":1,"text":"                    alignment_side = \"right\".to_string();"},{"highlight_end":112,"highlight_start":1,"text":"                    //read_indel_start = indel_start as usize - correct_end_position as usize + sequence.len();"},{"highlight_end":89,"highlight_start":1,"text":"                    //read_indel_start = correct_end_position as usize - sequence.len();"},{"highlight_end":18,"highlight_start":1,"text":"                } else if correct_start_position + alignment_offset > indel_start"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:456:21\n    |\n456 |                 if (&alphabets[0].to_string().as_str() == &\"S\"\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n456 -                 if (&alphabets[0].to_string().as_str() == &\"S\"\n456 +                 if (alphabets[0].to_string().as_str() == \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":30455,"byte_start":30421,"column_end":55,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":456,"line_start":456,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":55,"highlight_start":21,"text":"                if (&alphabets[0].to_string().as_str() == &\"S\""}]},{"byte_end":30463,"byte_start":30459,"column_end":63,"column_start":59,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":456,"line_start":456,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":63,"highlight_start":59,"text":"                if (&alphabets[0].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":30463,"byte_start":30421,"column_end":63,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":456,"line_start":456,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":63,"highlight_start":21,"text":"                if (&alphabets[0].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:457:24\n    |\n457 |                     && &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\")\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n457 -                     && &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\")\n457 +                     && alphabets[alphabets.len() - 1].to_string().as_str() == \"S\")\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":30539,"byte_start":30487,"column_end":76,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":457,"line_start":457,"suggested_replacement":"alphabets[alphabets.len() - 1].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":76,"highlight_start":24,"text":"                    && &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\")"}]},{"byte_end":30547,"byte_start":30543,"column_end":84,"column_start":80,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":457,"line_start":457,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":84,"highlight_start":80,"text":"                    && &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\")"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":30547,"byte_start":30487,"column_end":84,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":457,"line_start":457,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":84,"highlight_start":24,"text":"                    && &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\")"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n    --> src/DEanalysis.rs:1321:12\n     |\n1321 |         if row_sums[(row, 0)] as f64 >= min_total_count - TOL {\n     |            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `row_sums[(row, 0)]`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":63626,"byte_start":63601,"column_end":37,"column_start":12,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1321,"line_start":1321,"suggested_replacement":"row_sums[(row, 0)]","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":37,"highlight_start":12,"text":"        if row_sums[(row, 0)] as f64 >= min_total_count - TOL {"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":63626,"byte_start":63601,"column_end":37,"column_start":12,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1321,"line_start":1321,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":12,"text":"        if row_sums[(row, 0)] as f64 >= min_total_count - TOL {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/DEanalysis.rs:1330:12\n     |\n1330 |         if keep_cpm_bool == true && keep_total_bool == true {\n     |            ^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `keep_cpm_bool`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":63882,"byte_start":63861,"column_end":33,"column_start":12,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1330,"line_start":1330,"suggested_replacement":"keep_cpm_bool","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":33,"highlight_start":12,"text":"        if keep_cpm_bool == true && keep_total_bool == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":63882,"byte_start":63861,"column_end":33,"column_start":12,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1330,"line_start":1330,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":33,"highlight_start":12,"text":"        if keep_cpm_bool == true && keep_total_bool == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:467:27\n    |\n467 |                 } else if &alphabets[0].to_string().as_str() == &\"S\"\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n467 -                 } else if &alphabets[0].to_string().as_str() == &\"S\"\n467 +                 } else if alphabets[0].to_string().as_str() == \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":31063,"byte_start":31029,"column_end":61,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":467,"line_start":467,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":27,"text":"                } else if &alphabets[0].to_string().as_str() == &\"S\""}]},{"byte_end":31071,"byte_start":31067,"column_end":69,"column_start":65,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":467,"line_start":467,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":69,"highlight_start":65,"text":"                } else if &alphabets[0].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":31071,"byte_start":31029,"column_end":69,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":467,"line_start":467,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":27,"text":"                } else if &alphabets[0].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/DEanalysis.rs:1330:37\n     |\n1330 |         if keep_cpm_bool == true && keep_total_bool == true {\n     |                                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `keep_total_bool`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":63909,"byte_start":63886,"column_end":60,"column_start":37,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1330,"line_start":1330,"suggested_replacement":"keep_total_bool","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":60,"highlight_start":37,"text":"        if keep_cpm_bool == true && keep_total_bool == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":63909,"byte_start":63886,"column_end":60,"column_start":37,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1330,"line_start":1330,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":60,"highlight_start":37,"text":"        if keep_cpm_bool == true && keep_total_bool == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:474:27\n    |\n474 |                 } else if &alphabets[0].to_string().as_str() == &\"S\"\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n474 -                 } else if &alphabets[0].to_string().as_str() == &\"S\"\n474 +                 } else if alphabets[0].to_string().as_str() == \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":31541,"byte_start":31507,"column_end":61,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":474,"line_start":474,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":27,"text":"                } else if &alphabets[0].to_string().as_str() == &\"S\""}]},{"byte_end":31549,"byte_start":31545,"column_end":69,"column_start":65,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":474,"line_start":474,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":69,"highlight_start":65,"text":"                } else if &alphabets[0].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":31549,"byte_start":31507,"column_end":69,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":474,"line_start":474,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":69,"highlight_start":27,"text":"                } else if &alphabets[0].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the variable `i` is used as a loop counter\n    --> src/DEanalysis.rs:1352:5\n     |\n1352 |     for index in positives {\n     |     ^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `for (i, index) in positives.into_iter().enumerate()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_counter_loop\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_counter_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using","rendered":null,"spans":[{"byte_end":65020,"byte_start":64998,"column_end":27,"column_start":5,"expansion":{"def_site_span":{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":false,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},"macro_decl_name":"desugaring of `for` loop","span":{"byte_end":65441,"byte_start":64998,"column_end":6,"column_start":5,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":false,"label":null,"line_end":1365,"line_start":1352,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":5,"text":"    for index in positives {"},{"highlight_end":39,"highlight_start":1,"text":"        let row = raw_data.row(index);"},{"highlight_end":57,"highlight_start":1,"text":"        filtered_genes.push(gene_ids[index].to_owned());"},{"highlight_end":64,"highlight_start":1,"text":"        filtered_gene_names.push(gene_names[index].to_owned());"},{"highlight_end":23,"highlight_start":1,"text":"        let mut j = 0;"},{"highlight_end":27,"highlight_start":1,"text":"        for item in &row {"},{"highlight_end":43,"highlight_start":1,"text":"            //println!(\"index:{}\", index);"},{"highlight_end":35,"highlight_start":1,"text":"            //println!(\"i:{}\", i);"},{"highlight_end":35,"highlight_start":1,"text":"            //println!(\"j:{}\", j);"},{"highlight_end":45,"highlight_start":1,"text":"            filtered_matrix[(i, j)] = *item;"},{"highlight_end":20,"highlight_start":1,"text":"            j += 1;"},{"highlight_end":10,"highlight_start":1,"text":"        }"},{"highlight_end":15,"highlight_start":1,"text":"        i += 1"},{"highlight_end":6,"highlight_start":1,"text":"    }"}]}},"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1352,"line_start":1352,"suggested_replacement":"for (i, index) in positives.into_iter().enumerate()","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":27,"highlight_start":5,"text":"    for index in positives {"}]}]}],"code":{"code":"clippy::explicit_counter_loop","explanation":null},"level":"warning","message":"the variable `i` is used as a loop counter","spans":[{"byte_end":65020,"byte_start":64998,"column_end":27,"column_start":5,"expansion":{"def_site_span":{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":false,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},"macro_decl_name":"desugaring of `for` loop","span":{"byte_end":65441,"byte_start":64998,"column_end":6,"column_start":5,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":false,"label":null,"line_end":1365,"line_start":1352,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":5,"text":"    for index in positives {"},{"highlight_end":39,"highlight_start":1,"text":"        let row = raw_data.row(index);"},{"highlight_end":57,"highlight_start":1,"text":"        filtered_genes.push(gene_ids[index].to_owned());"},{"highlight_end":64,"highlight_start":1,"text":"        filtered_gene_names.push(gene_names[index].to_owned());"},{"highlight_end":23,"highlight_start":1,"text":"        let mut j = 0;"},{"highlight_end":27,"highlight_start":1,"text":"        for item in &row {"},{"highlight_end":43,"highlight_start":1,"text":"            //println!(\"index:{}\", index);"},{"highlight_end":35,"highlight_start":1,"text":"            //println!(\"i:{}\", i);"},{"highlight_end":35,"highlight_start":1,"text":"            //println!(\"j:{}\", j);"},{"highlight_end":45,"highlight_start":1,"text":"            filtered_matrix[(i, j)] = *item;"},{"highlight_end":20,"highlight_start":1,"text":"            j += 1;"},{"highlight_end":10,"highlight_start":1,"text":"        }"},{"highlight_end":15,"highlight_start":1,"text":"        i += 1"},{"highlight_end":6,"highlight_start":1,"text":"    }"}]}},"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1352,"line_start":1352,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":5,"text":"    for index in positives {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:488:27\n    |\n488 |                 } else if &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\"\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n488 -                 } else if &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\"\n488 +                 } else if alphabets[alphabets.len() - 1].to_string().as_str() == \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":32495,"byte_start":32443,"column_end":79,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":488,"line_start":488,"suggested_replacement":"alphabets[alphabets.len() - 1].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":79,"highlight_start":27,"text":"                } else if &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\""}]},{"byte_end":32503,"byte_start":32499,"column_end":87,"column_start":83,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":488,"line_start":488,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":83,"text":"                } else if &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":32503,"byte_start":32443,"column_end":87,"column_start":27,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":488,"line_start":488,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":27,"text":"                } else if &alphabets[alphabets.len() - 1].to_string().as_str() == &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:490:24\n    |\n490 |                     && &alphabets[0].to_string().as_str() != &\"S\"\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n490 -                     && &alphabets[0].to_string().as_str() != &\"S\"\n490 +                     && alphabets[0].to_string().as_str() != \"S\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":32601,"byte_start":32567,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":490,"line_start":490,"suggested_replacement":"alphabets[0].to_string().as_str()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    && &alphabets[0].to_string().as_str() != &\"S\""}]},{"byte_end":32609,"byte_start":32605,"column_end":66,"column_start":62,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":490,"line_start":490,"suggested_replacement":"\"S\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":62,"text":"                    && &alphabets[0].to_string().as_str() != &\"S\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":32609,"byte_start":32567,"column_end":66,"column_start":24,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":490,"line_start":490,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":24,"text":"                    && &alphabets[0].to_string().as_str() != &\"S\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the variable `j` is used as a loop counter\n    --> src/DEanalysis.rs:1357:9\n     |\n1357 |         for item in &row {\n     |         ^^^^^^^^^^^^^^^^ help: consider using: `for (j, item) in (&row).into_iter().enumerate()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_counter_loop\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_counter_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using","rendered":null,"spans":[{"byte_end":65230,"byte_start":65214,"column_end":25,"column_start":9,"expansion":{"def_site_span":{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":false,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},"macro_decl_name":"desugaring of `for` loop","span":{"byte_end":65420,"byte_start":65214,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":false,"label":null,"line_end":1363,"line_start":1357,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":9,"text":"        for item in &row {"},{"highlight_end":43,"highlight_start":1,"text":"            //println!(\"index:{}\", index);"},{"highlight_end":35,"highlight_start":1,"text":"            //println!(\"i:{}\", i);"},{"highlight_end":35,"highlight_start":1,"text":"            //println!(\"j:{}\", j);"},{"highlight_end":45,"highlight_start":1,"text":"            filtered_matrix[(i, j)] = *item;"},{"highlight_end":20,"highlight_start":1,"text":"            j += 1;"},{"highlight_end":10,"highlight_start":1,"text":"        }"}]}},"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1357,"line_start":1357,"suggested_replacement":"for (j, item) in (&row).into_iter().enumerate()","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":25,"highlight_start":9,"text":"        for item in &row {"}]}]}],"code":{"code":"clippy::explicit_counter_loop","explanation":null},"level":"warning","message":"the variable `j` is used as a loop counter","spans":[{"byte_end":65230,"byte_start":65214,"column_end":25,"column_start":9,"expansion":{"def_site_span":{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":false,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},"macro_decl_name":"desugaring of `for` loop","span":{"byte_end":65420,"byte_start":65214,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":false,"label":null,"line_end":1363,"line_start":1357,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":9,"text":"        for item in &row {"},{"highlight_end":43,"highlight_start":1,"text":"            //println!(\"index:{}\", index);"},{"highlight_end":35,"highlight_start":1,"text":"            //println!(\"i:{}\", i);"},{"highlight_end":35,"highlight_start":1,"text":"            //println!(\"j:{}\", j);"},{"highlight_end":45,"highlight_start":1,"text":"            filtered_matrix[(i, j)] = *item;"},{"highlight_end":20,"highlight_start":1,"text":"            j += 1;"},{"highlight_end":10,"highlight_start":1,"text":"        }"}]}},"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1357,"line_start":1357,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":25,"highlight_start":9,"text":"        for item in &row {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: useless conversion to the same type: `f64`\n    --> src/DEanalysis.rs:1372:33\n     |\n1372 |         modified_lib_sizes.push(modified_lib_sizes_vector[(0, i)].into());\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `modified_lib_sizes_vector[(0, i)]`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider removing `.into()`","rendered":null,"spans":[{"byte_end":65859,"byte_start":65819,"column_end":73,"column_start":33,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1372,"line_start":1372,"suggested_replacement":"modified_lib_sizes_vector[(0, i)]","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":73,"highlight_start":33,"text":"        modified_lib_sizes.push(modified_lib_sizes_vector[(0, i)].into());"}]}]}],"code":{"code":"clippy::useless_conversion","explanation":null},"level":"warning","message":"useless conversion to the same type: `f64`","spans":[{"byte_end":65859,"byte_start":65819,"column_end":73,"column_start":33,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1372,"line_start":1372,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":33,"text":"        modified_lib_sizes.push(modified_lib_sizes_vector[(0, i)].into());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n   --> src/realign.rs:546:31\n    |\n546 | pub fn parse_cigar(cigar_seq: &String) -> (Vec<char>, Vec<i64>) {\n    |                               ^^^^^^^ help: change this to: `&str`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":35305,"byte_start":35298,"column_end":38,"column_start":31,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":546,"line_start":546,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":38,"highlight_start":31,"text":"pub fn parse_cigar(cigar_seq: &String) -> (Vec<char>, Vec<i64>) {"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":35305,"byte_start":35298,"column_end":38,"column_start":31,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":546,"line_start":546,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":31,"text":"pub fn parse_cigar(cigar_seq: &String) -> (Vec<char>, Vec<i64>) {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n    --> src/DEanalysis.rs:1397:18\n     |\n1397 |                 (input_matrix[(row, col)] as f64 * 1000000.0) / norm_factor as f64;\n     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `input_matrix[(row, col)]`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":66766,"byte_start":66735,"column_end":49,"column_start":18,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1397,"line_start":1397,"suggested_replacement":"input_matrix[(row, col)]","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":49,"highlight_start":18,"text":"                (input_matrix[(row, col)] as f64 * 1000000.0) / norm_factor as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":66766,"byte_start":66735,"column_end":49,"column_start":18,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1397,"line_start":1397,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":49,"highlight_start":18,"text":"                (input_matrix[(row, col)] as f64 * 1000000.0) / norm_factor as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"DEanalysis","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/DEanalysis.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n    --> src/DEanalysis.rs:1397:65\n     |\n1397 |                 (input_matrix[(row, col)] as f64 * 1000000.0) / norm_factor as f64;\n     |                                                                 ^^^^^^^^^^^^^^^^^^ help: try: `norm_factor`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":66800,"byte_start":66782,"column_end":83,"column_start":65,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1397,"line_start":1397,"suggested_replacement":"norm_factor","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":83,"highlight_start":65,"text":"                (input_matrix[(row, col)] as f64 * 1000000.0) / norm_factor as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":66800,"byte_start":66782,"column_end":83,"column_start":65,"expansion":null,"file_name":"src/DEanalysis.rs","is_primary":true,"label":null,"line_end":1397,"line_start":1397,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":83,"highlight_start":65,"text":"                (input_matrix[(row, col)] as f64 * 1000000.0) / norm_factor as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is only used to index `sequence_vector`\n   --> src/realign.rs:552:14\n    |\n552 |     for i in 0..sequence_vector.len() {\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n552 -     for i in 0..sequence_vector.len() {\n552 +     for <item> in &sequence_vector {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_range_loop)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":35637,"byte_start":35636,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":552,"line_start":552,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":10,"highlight_start":9,"text":"    for i in 0..sequence_vector.len() {"}]},{"byte_end":35665,"byte_start":35641,"column_end":38,"column_start":14,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":552,"line_start":552,"suggested_replacement":"&sequence_vector","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":38,"highlight_start":14,"text":"    for i in 0..sequence_vector.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is only used to index `sequence_vector`","spans":[{"byte_end":35665,"byte_start":35641,"column_end":38,"column_start":14,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":552,"line_start":552,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":14,"text":"    for i in 0..sequence_vector.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/realign.rs:553:12\n    |\n553 |         if sequence_vector[i].is_alphabetic() == true {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `sequence_vector[i].is_alphabetic()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n    = note: `#[warn(clippy::bool_comparison)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::bool_comparison)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":35721,"byte_start":35679,"column_end":54,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":553,"line_start":553,"suggested_replacement":"sequence_vector[i].is_alphabetic()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":12,"text":"        if sequence_vector[i].is_alphabetic() == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":35721,"byte_start":35679,"column_end":54,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":553,"line_start":553,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":12,"text":"        if sequence_vector[i].is_alphabetic() == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n   --> src/realign.rs:565:12\n    |\n565 |     q_seq: &String,\n    |            ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\nhelp: change this to\n    |\n565 ~     q_seq: &str,\n566 |     align: &String,\n...\n727 |\n728 ~     let q_seq_original = q_seq.to_owned();\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":36051,"byte_start":36044,"column_end":19,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":565,"line_start":565,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":19,"highlight_start":12,"text":"    q_seq: &String,"}]},{"byte_end":43982,"byte_start":43969,"column_end":39,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":728,"line_start":728,"suggested_replacement":"q_seq.to_owned()","suggestion_applicability":"Unspecified","text":[{"highlight_end":39,"highlight_start":26,"text":"    let q_seq_original = q_seq.clone();"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":36051,"byte_start":36044,"column_end":19,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":565,"line_start":565,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":12,"text":"    q_seq: &String,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n   --> src/realign.rs:566:12\n    |\n566 |     align: &String,\n    |            ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\nhelp: change this to\n    |\n566 ~     align: &str,\n567 |     r_seq: &String,\n...\n728 |     let q_seq_original = q_seq.clone();\n729 ~     let align_original = align.to_owned();\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":36071,"byte_start":36064,"column_end":19,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":566,"line_start":566,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":19,"highlight_start":12,"text":"    align: &String,"}]},{"byte_end":44022,"byte_start":44009,"column_end":39,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":729,"line_start":729,"suggested_replacement":"align.to_owned()","suggestion_applicability":"Unspecified","text":[{"highlight_end":39,"highlight_start":26,"text":"    let align_original = align.clone();"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":36071,"byte_start":36064,"column_end":19,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":566,"line_start":566,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":12,"text":"    align: &String,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n   --> src/realign.rs:567:12\n    |\n567 |     r_seq: &String,\n    |            ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\nhelp: change this to\n    |\n567 ~     r_seq: &str,\n568 | ) -> (String, String, String) {\n...\n729 |     let align_original = align.clone();\n730 ~     let r_seq_original = r_seq.to_owned();\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":36091,"byte_start":36084,"column_end":19,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":567,"line_start":567,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":19,"highlight_start":12,"text":"    r_seq: &String,"}]},{"byte_end":44062,"byte_start":44049,"column_end":39,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":730,"line_start":730,"suggested_replacement":"r_seq.to_owned()","suggestion_applicability":"Unspecified","text":[{"highlight_end":39,"highlight_start":26,"text":"    let r_seq_original = r_seq.clone();"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":36091,"byte_start":36084,"column_end":19,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":567,"line_start":567,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":12,"text":"    r_seq: &String,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:587:12\n    |\n587 |         if &align_chars[j].to_string() == &\"|\"\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n587 -         if &align_chars[j].to_string() == &\"|\"\n587 +         if align_chars[j].to_string() == \"|\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":37096,"byte_start":37069,"column_end":39,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":587,"line_start":587,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":39,"highlight_start":12,"text":"        if &align_chars[j].to_string() == &\"|\""}]},{"byte_end":37104,"byte_start":37100,"column_end":47,"column_start":43,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":587,"line_start":587,"suggested_replacement":"\"|\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":43,"text":"        if &align_chars[j].to_string() == &\"|\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":37104,"byte_start":37069,"column_end":47,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":587,"line_start":587,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":12,"text":"        if &align_chars[j].to_string() == &\"|\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/realign.rs:589:16\n    |\n589 |             && first_substituted_nucleotides.len() == 0\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `first_substituted_nucleotides.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::len_zero)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":37186,"byte_start":37146,"column_end":56,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":589,"line_start":589,"suggested_replacement":"first_substituted_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":56,"highlight_start":16,"text":"            && first_substituted_nucleotides.len() == 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":37186,"byte_start":37146,"column_end":56,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":589,"line_start":589,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":16,"text":"            && first_substituted_nucleotides.len() == 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:593:19\n    |\n593 |         } else if &align_chars[j].to_string() == &\"|\"\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n593 -         } else if &align_chars[j].to_string() == &\"|\"\n593 +         } else if align_chars[j].to_string() == \"|\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":37342,"byte_start":37315,"column_end":46,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":593,"line_start":593,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":46,"highlight_start":19,"text":"        } else if &align_chars[j].to_string() == &\"|\""}]},{"byte_end":37350,"byte_start":37346,"column_end":54,"column_start":50,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":593,"line_start":593,"suggested_replacement":"\"|\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":50,"text":"        } else if &align_chars[j].to_string() == &\"|\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":37350,"byte_start":37315,"column_end":54,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":593,"line_start":593,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":19,"text":"        } else if &align_chars[j].to_string() == &\"|\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/realign.rs:595:16\n    |\n595 |             && first_substituted_nucleotides.len() > 0\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!first_substituted_nucleotides.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":37431,"byte_start":37392,"column_end":55,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":595,"line_start":595,"suggested_replacement":"!first_substituted_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":55,"highlight_start":16,"text":"            && first_substituted_nucleotides.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":37431,"byte_start":37392,"column_end":55,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":595,"line_start":595,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":16,"text":"            && first_substituted_nucleotides.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:598:19\n    |\n598 |         } else if &align_chars[j].to_string() == &\"*\"\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n598 -         } else if &align_chars[j].to_string() == &\"*\"\n598 +         } else if align_chars[j].to_string() == \"*\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":37527,"byte_start":37500,"column_end":46,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":598,"line_start":598,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":46,"highlight_start":19,"text":"        } else if &align_chars[j].to_string() == &\"*\""}]},{"byte_end":37535,"byte_start":37531,"column_end":54,"column_start":50,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":598,"line_start":598,"suggested_replacement":"\"*\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":54,"highlight_start":50,"text":"        } else if &align_chars[j].to_string() == &\"*\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":37535,"byte_start":37500,"column_end":54,"column_start":19,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":598,"line_start":598,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":54,"highlight_start":19,"text":"        } else if &align_chars[j].to_string() == &\"*\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/realign.rs:600:16\n    |\n600 |             && first_matched_nucleotides.len() == 0\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `first_matched_nucleotides.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":37613,"byte_start":37577,"column_end":52,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":600,"line_start":600,"suggested_replacement":"first_matched_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":52,"highlight_start":16,"text":"            && first_matched_nucleotides.len() == 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":37613,"byte_start":37577,"column_end":52,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":600,"line_start":600,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":16,"text":"            && first_matched_nucleotides.len() == 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:603:33\n    |\n603 |         } else if first == 1 && &align_chars[j].to_string() != &\"|\" {\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n603 -         } else if first == 1 && &align_chars[j].to_string() != &\"|\" {\n603 +         } else if first == 1 && align_chars[j].to_string() != \"|\" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":37747,"byte_start":37720,"column_end":60,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":603,"line_start":603,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":60,"highlight_start":33,"text":"        } else if first == 1 && &align_chars[j].to_string() != &\"|\" {"}]},{"byte_end":37755,"byte_start":37751,"column_end":68,"column_start":64,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":603,"line_start":603,"suggested_replacement":"\"|\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":68,"highlight_start":64,"text":"        } else if first == 1 && &align_chars[j].to_string() != &\"|\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":37755,"byte_start":37720,"column_end":68,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":603,"line_start":603,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":33,"text":"        } else if first == 1 && &align_chars[j].to_string() != &\"|\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:607:16\n    |\n607 |             && &align_chars[j].to_string() != &\"|\"\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n607 -             && &align_chars[j].to_string() != &\"|\"\n607 +             && align_chars[j].to_string() != \"|\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":37955,"byte_start":37928,"column_end":43,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":607,"line_start":607,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":16,"text":"            && &align_chars[j].to_string() != &\"|\""}]},{"byte_end":37963,"byte_start":37959,"column_end":51,"column_start":47,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":607,"line_start":607,"suggested_replacement":"\"|\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":47,"text":"            && &align_chars[j].to_string() != &\"|\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":37963,"byte_start":37928,"column_end":51,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":607,"line_start":607,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":16,"text":"            && &align_chars[j].to_string() != &\"|\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:608:16\n    |\n608 |             && &align_chars[j].to_string() != &\"*\"\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n608 -             && &align_chars[j].to_string() != &\"*\"\n608 +             && align_chars[j].to_string() != \"*\"\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":38006,"byte_start":37979,"column_end":43,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":608,"line_start":608,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":16,"text":"            && &align_chars[j].to_string() != &\"*\""}]},{"byte_end":38014,"byte_start":38010,"column_end":51,"column_start":47,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":608,"line_start":608,"suggested_replacement":"\"*\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":47,"text":"            && &align_chars[j].to_string() != &\"*\""}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":38014,"byte_start":37979,"column_end":51,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":608,"line_start":608,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":16,"text":"            && &align_chars[j].to_string() != &\"*\""}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:624:13\n    |\n624 |         if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n624 -         if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")\n624 +         if (align_chars[j].to_string() == \"|\" || &align_chars[j].to_string() == &\"*\")\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":38751,"byte_start":38724,"column_end":40,"column_start":13,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":624,"line_start":624,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":40,"highlight_start":13,"text":"        if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")"}]},{"byte_end":38759,"byte_start":38755,"column_end":48,"column_start":44,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":624,"line_start":624,"suggested_replacement":"\"|\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":48,"highlight_start":44,"text":"        if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":38759,"byte_start":38724,"column_end":48,"column_start":13,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":624,"line_start":624,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":13,"text":"        if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:624:52\n    |\n624 |         if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")\n    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n624 -         if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")\n624 +         if (&align_chars[j].to_string() == &\"|\" || align_chars[j].to_string() == \"*\")\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":38790,"byte_start":38763,"column_end":79,"column_start":52,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":624,"line_start":624,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":79,"highlight_start":52,"text":"        if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")"}]},{"byte_end":38798,"byte_start":38794,"column_end":87,"column_start":83,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":624,"line_start":624,"suggested_replacement":"\"*\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":83,"text":"        if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":38798,"byte_start":38763,"column_end":87,"column_start":52,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":624,"line_start":624,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":52,"text":"        if (&align_chars[j].to_string() == &\"|\" || &align_chars[j].to_string() == &\"*\")"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:628:33\n    |\n628 |         } else if first == 0 && &align_chars[j].to_string() == &\" \" {\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n628 -         } else if first == 0 && &align_chars[j].to_string() == &\" \" {\n628 +         } else if first == 0 && align_chars[j].to_string() == \" \" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":38971,"byte_start":38944,"column_end":60,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":628,"line_start":628,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":60,"highlight_start":33,"text":"        } else if first == 0 && &align_chars[j].to_string() == &\" \" {"}]},{"byte_end":38979,"byte_start":38975,"column_end":68,"column_start":64,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":628,"line_start":628,"suggested_replacement":"\" \"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":68,"highlight_start":64,"text":"        } else if first == 0 && &align_chars[j].to_string() == &\" \" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":38979,"byte_start":38944,"column_end":68,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":628,"line_start":628,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":33,"text":"        } else if first == 0 && &align_chars[j].to_string() == &\" \" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:631:33\n    |\n631 |         } else if first == 1 && &align_chars[j].to_string() == &\" \" {\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n631 -         } else if first == 1 && &align_chars[j].to_string() == &\" \" {\n631 +         } else if first == 1 && align_chars[j].to_string() == \" \" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":39164,"byte_start":39137,"column_end":60,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":631,"line_start":631,"suggested_replacement":"align_chars[j].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":60,"highlight_start":33,"text":"        } else if first == 1 && &align_chars[j].to_string() == &\" \" {"}]},{"byte_end":39172,"byte_start":39168,"column_end":68,"column_start":64,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":631,"line_start":631,"suggested_replacement":"\" \"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":68,"highlight_start":64,"text":"        } else if first == 1 && &align_chars[j].to_string() == &\" \" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":39172,"byte_start":39137,"column_end":68,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":631,"line_start":631,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":33,"text":"        } else if first == 1 && &align_chars[j].to_string() == &\" \" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:643:13\n    |\n643 |         if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n643 -         if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")\n643 +         if (align_chars[i].to_string() == \"|\" || &align_chars[i].to_string() == &\"*\")\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":39784,"byte_start":39757,"column_end":40,"column_start":13,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":643,"line_start":643,"suggested_replacement":"align_chars[i].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":40,"highlight_start":13,"text":"        if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")"}]},{"byte_end":39792,"byte_start":39788,"column_end":48,"column_start":44,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":643,"line_start":643,"suggested_replacement":"\"|\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":48,"highlight_start":44,"text":"        if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":39792,"byte_start":39757,"column_end":48,"column_start":13,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":643,"line_start":643,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":13,"text":"        if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:643:52\n    |\n643 |         if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")\n    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n643 -         if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")\n643 +         if (&align_chars[i].to_string() == &\"|\" || align_chars[i].to_string() == \"*\")\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":39823,"byte_start":39796,"column_end":79,"column_start":52,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":643,"line_start":643,"suggested_replacement":"align_chars[i].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":79,"highlight_start":52,"text":"        if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")"}]},{"byte_end":39831,"byte_start":39827,"column_end":87,"column_start":83,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":643,"line_start":643,"suggested_replacement":"\"*\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":83,"text":"        if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":39831,"byte_start":39796,"column_end":87,"column_start":52,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":643,"line_start":643,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":52,"text":"        if (&align_chars[i].to_string() == &\"|\" || &align_chars[i].to_string() == &\"*\")"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:649:33\n    |\n649 |         } else if first == 0 && &align_chars[i].to_string() == &\" \" {\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n649 -         } else if first == 0 && &align_chars[i].to_string() == &\" \" {\n649 +         } else if first == 0 && align_chars[i].to_string() == \" \" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":40099,"byte_start":40072,"column_end":60,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":649,"line_start":649,"suggested_replacement":"align_chars[i].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":60,"highlight_start":33,"text":"        } else if first == 0 && &align_chars[i].to_string() == &\" \" {"}]},{"byte_end":40107,"byte_start":40103,"column_end":68,"column_start":64,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":649,"line_start":649,"suggested_replacement":"\" \"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":68,"highlight_start":64,"text":"        } else if first == 0 && &align_chars[i].to_string() == &\" \" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":40107,"byte_start":40072,"column_end":68,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":649,"line_start":649,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":33,"text":"        } else if first == 0 && &align_chars[i].to_string() == &\" \" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n   --> src/realign.rs:654:33\n    |\n654 |         } else if first == 1 && &align_chars[i].to_string() == &\" \" {\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n    |\n654 -         } else if first == 1 && &align_chars[i].to_string() == &\" \" {\n654 +         } else if first == 1 && align_chars[i].to_string() == \" \" {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":40387,"byte_start":40360,"column_end":60,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":654,"line_start":654,"suggested_replacement":"align_chars[i].to_string()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":60,"highlight_start":33,"text":"        } else if first == 1 && &align_chars[i].to_string() == &\" \" {"}]},{"byte_end":40395,"byte_start":40391,"column_end":68,"column_start":64,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":654,"line_start":654,"suggested_replacement":"\" \"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":68,"highlight_start":64,"text":"        } else if first == 1 && &align_chars[i].to_string() == &\" \" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":40395,"byte_start":40360,"column_end":68,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":654,"line_start":654,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":33,"text":"        } else if first == 1 && &align_chars[i].to_string() == &\" \" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/realign.rs:712:8\n    |\n712 |     if first_matched_nucleotides.len() == 0 || first_substituted_nucleotides.len() > 0 {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `first_matched_nucleotides.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":43230,"byte_start":43194,"column_end":44,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":712,"line_start":712,"suggested_replacement":"first_matched_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":44,"highlight_start":8,"text":"    if first_matched_nucleotides.len() == 0 || first_substituted_nucleotides.len() > 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":43230,"byte_start":43194,"column_end":44,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":712,"line_start":712,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":8,"text":"    if first_matched_nucleotides.len() == 0 || first_substituted_nucleotides.len() > 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/realign.rs:712:48\n    |\n712 |     if first_matched_nucleotides.len() == 0 || first_substituted_nucleotides.len() > 0 {\n    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!first_substituted_nucleotides.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":43273,"byte_start":43234,"column_end":87,"column_start":48,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":712,"line_start":712,"suggested_replacement":"!first_substituted_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":48,"text":"    if first_matched_nucleotides.len() == 0 || first_substituted_nucleotides.len() > 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":43273,"byte_start":43234,"column_end":87,"column_start":48,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":712,"line_start":712,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":48,"text":"    if first_matched_nucleotides.len() == 0 || first_substituted_nucleotides.len() > 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/realign.rs:736:8\n    |\n736 |     if alignment_wrong == true {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `alignment_wrong`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":44412,"byte_start":44389,"column_end":31,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":736,"line_start":736,"suggested_replacement":"alignment_wrong","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":31,"highlight_start":8,"text":"    if alignment_wrong == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":44412,"byte_start":44389,"column_end":31,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":736,"line_start":736,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":8,"text":"    if alignment_wrong == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/realign.rs:815:69\n    |\n815 |             if num_iterations != first_matched_nucleotides.len() && all_matched_nucleotides == true\n    |                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":48523,"byte_start":48492,"column_end":100,"column_start":69,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":815,"line_start":815,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":100,"highlight_start":69,"text":"            if num_iterations != first_matched_nucleotides.len() && all_matched_nucleotides == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":48523,"byte_start":48492,"column_end":100,"column_start":69,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":815,"line_start":815,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":100,"highlight_start":69,"text":"            if num_iterations != first_matched_nucleotides.len() && all_matched_nucleotides == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/realign.rs:820:16\n    |\n820 |             if all_matched_nucleotides == true {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":48775,"byte_start":48744,"column_end":47,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":820,"line_start":820,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":16,"text":"            if all_matched_nucleotides == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":48775,"byte_start":48744,"column_end":47,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":820,"line_start":820,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":16,"text":"            if all_matched_nucleotides == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/realign.rs:860:15\n    |\n860 |     } else if wrong_substitution == true {\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `wrong_substitution`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":50508,"byte_start":50482,"column_end":41,"column_start":15,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":860,"line_start":860,"suggested_replacement":"wrong_substitution","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":41,"highlight_start":15,"text":"    } else if wrong_substitution == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":50508,"byte_start":50482,"column_end":41,"column_start":15,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":860,"line_start":860,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":15,"text":"    } else if wrong_substitution == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/realign.rs:941:20\n    |\n941 |                 && all_substituted_nucleotides == true\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_substituted_nucleotides`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":54653,"byte_start":54618,"column_end":55,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":941,"line_start":941,"suggested_replacement":"all_substituted_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":55,"highlight_start":20,"text":"                && all_substituted_nucleotides == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":54653,"byte_start":54618,"column_end":55,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":941,"line_start":941,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":20,"text":"                && all_substituted_nucleotides == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/realign.rs:946:16\n    |\n946 |             if all_substituted_nucleotides == true {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_substituted_nucleotides`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":54913,"byte_start":54878,"column_end":51,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":946,"line_start":946,"suggested_replacement":"all_substituted_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":16,"text":"            if all_substituted_nucleotides == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":54913,"byte_start":54878,"column_end":51,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":946,"line_start":946,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":16,"text":"            if all_substituted_nucleotides == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/realign.rs:982:15\n    |\n982 |     } else if first_matched_nucleotides.len() > 0\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!first_matched_nucleotides.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":56410,"byte_start":56375,"column_end":50,"column_start":15,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":982,"line_start":982,"suggested_replacement":"!first_matched_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":50,"highlight_start":15,"text":"    } else if first_matched_nucleotides.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":56410,"byte_start":56375,"column_end":50,"column_start":15,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":982,"line_start":982,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":15,"text":"    } else if first_matched_nucleotides.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n   --> src/realign.rs:983:12\n    |\n983 |         && first_unmatched_sequence.len() > 0\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!first_unmatched_sequence.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":56456,"byte_start":56422,"column_end":46,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":983,"line_start":983,"suggested_replacement":"!first_unmatched_sequence.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":46,"highlight_start":12,"text":"        && first_unmatched_sequence.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":56456,"byte_start":56422,"column_end":46,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":983,"line_start":983,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":12,"text":"        && first_unmatched_sequence.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1032:69\n     |\n1032 |             if num_iterations != first_matched_nucleotides.len() && all_matched_nucleotides == true\n     |                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":58871,"byte_start":58840,"column_end":100,"column_start":69,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1032,"line_start":1032,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":100,"highlight_start":69,"text":"            if num_iterations != first_matched_nucleotides.len() && all_matched_nucleotides == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":58871,"byte_start":58840,"column_end":100,"column_start":69,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1032,"line_start":1032,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":100,"highlight_start":69,"text":"            if num_iterations != first_matched_nucleotides.len() && all_matched_nucleotides == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1037:16\n     |\n1037 |             if all_matched_nucleotides == true {\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":59123,"byte_start":59092,"column_end":47,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1037,"line_start":1037,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":16,"text":"            if all_matched_nucleotides == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":59123,"byte_start":59092,"column_end":47,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1037,"line_start":1037,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":16,"text":"            if all_matched_nucleotides == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1046:12\n     |\n1046 |         if all_matched_nucleotides == true {\n     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":59436,"byte_start":59405,"column_end":43,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1046,"line_start":1046,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":12,"text":"        if all_matched_nucleotides == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":59436,"byte_start":59405,"column_end":43,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1046,"line_start":1046,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":12,"text":"        if all_matched_nucleotides == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/realign.rs:1074:15\n     |\n1074 |     } else if first_partially_matched_nucleotides_right.len() > 0\n     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!first_partially_matched_nucleotides_right.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":60770,"byte_start":60719,"column_end":66,"column_start":15,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1074,"line_start":1074,"suggested_replacement":"!first_partially_matched_nucleotides_right.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":66,"highlight_start":15,"text":"    } else if first_partially_matched_nucleotides_right.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":60770,"byte_start":60719,"column_end":66,"column_start":15,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1074,"line_start":1074,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":66,"highlight_start":15,"text":"    } else if first_partially_matched_nucleotides_right.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/realign.rs:1075:12\n     |\n1075 |         && first_unmatched_sequence_right_wrt_partially_matched_nucleotides.len() > 0\n     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!first_unmatched_sequence_right_wrt_partially_matched_nucleotides.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":60856,"byte_start":60782,"column_end":86,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1075,"line_start":1075,"suggested_replacement":"!first_unmatched_sequence_right_wrt_partially_matched_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":86,"highlight_start":12,"text":"        && first_unmatched_sequence_right_wrt_partially_matched_nucleotides.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":60856,"byte_start":60782,"column_end":86,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1075,"line_start":1075,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":86,"highlight_start":12,"text":"        && first_unmatched_sequence_right_wrt_partially_matched_nucleotides.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1130:20\n     |\n1130 |                 && all_matched_nucleotides == true\n     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":63996,"byte_start":63965,"column_end":51,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1130,"line_start":1130,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":20,"text":"                && all_matched_nucleotides == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":63996,"byte_start":63965,"column_end":51,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1130,"line_start":1130,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":20,"text":"                && all_matched_nucleotides == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1135:16\n     |\n1135 |             if all_matched_nucleotides == true {\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":64264,"byte_start":64233,"column_end":47,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1135,"line_start":1135,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":16,"text":"            if all_matched_nucleotides == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":64264,"byte_start":64233,"column_end":47,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1135,"line_start":1135,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":16,"text":"            if all_matched_nucleotides == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1144:12\n     |\n1144 |         if all_matched_nucleotides == true {\n     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":64577,"byte_start":64546,"column_end":43,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1144,"line_start":1144,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":12,"text":"        if all_matched_nucleotides == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":64577,"byte_start":64546,"column_end":43,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1144,"line_start":1144,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":12,"text":"        if all_matched_nucleotides == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/realign.rs:1174:8\n     |\n1174 |     if first_partially_matched_nucleotides_left.len() > 0\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!first_partially_matched_nucleotides_left.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":66055,"byte_start":66005,"column_end":58,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1174,"line_start":1174,"suggested_replacement":"!first_partially_matched_nucleotides_left.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":8,"text":"    if first_partially_matched_nucleotides_left.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":66055,"byte_start":66005,"column_end":58,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1174,"line_start":1174,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":8,"text":"    if first_partially_matched_nucleotides_left.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/realign.rs:1175:12\n     |\n1175 |         && first_unmatched_sequence_left_wrt_partially_matched_nucleotides.len() > 0\n     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!first_unmatched_sequence_left_wrt_partially_matched_nucleotides.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":66140,"byte_start":66067,"column_end":85,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1175,"line_start":1175,"suggested_replacement":"!first_unmatched_sequence_left_wrt_partially_matched_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":85,"highlight_start":12,"text":"        && first_unmatched_sequence_left_wrt_partially_matched_nucleotides.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":66140,"byte_start":66067,"column_end":85,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1175,"line_start":1175,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":85,"highlight_start":12,"text":"        && first_unmatched_sequence_left_wrt_partially_matched_nucleotides.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/realign.rs:1182:12\n     |\n1182 |         if q_seq_correct.len() > 0 {\n     |            ^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!q_seq_correct.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":66572,"byte_start":66549,"column_end":35,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1182,"line_start":1182,"suggested_replacement":"!q_seq_correct.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":35,"highlight_start":12,"text":"        if q_seq_correct.len() > 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":66572,"byte_start":66549,"column_end":35,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1182,"line_start":1182,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":12,"text":"        if q_seq_correct.len() > 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n    --> src/realign.rs:1240:28\n     |\n1240 |                         if hit == false {\n     |                            ^^^^^^^^^^^^ help: try simplifying it as shown: `!hit`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":69794,"byte_start":69782,"column_end":40,"column_start":28,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1240,"line_start":1240,"suggested_replacement":"!hit","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":40,"highlight_start":28,"text":"                        if hit == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":69794,"byte_start":69782,"column_end":40,"column_start":28,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1240,"line_start":1240,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":40,"highlight_start":28,"text":"                        if hit == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1251:20\n     |\n1251 |                 && all_matched_nucleotides == true\n     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":70300,"byte_start":70269,"column_end":51,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1251,"line_start":1251,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":20,"text":"                && all_matched_nucleotides == true"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":70300,"byte_start":70269,"column_end":51,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1251,"line_start":1251,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":20,"text":"                && all_matched_nucleotides == true"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n    --> src/realign.rs:1253:20\n     |\n1253 |                 if hit == false {\n     |                    ^^^^^^^^^^^^ help: try simplifying it as shown: `!hit`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":70346,"byte_start":70334,"column_end":32,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1253,"line_start":1253,"suggested_replacement":"!hit","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":32,"highlight_start":20,"text":"                if hit == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":70346,"byte_start":70334,"column_end":32,"column_start":20,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1253,"line_start":1253,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":20,"text":"                if hit == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1263:16\n     |\n1263 |             if all_matched_nucleotides == true {\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":70866,"byte_start":70835,"column_end":47,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1263,"line_start":1263,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":47,"highlight_start":16,"text":"            if all_matched_nucleotides == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":70866,"byte_start":70835,"column_end":47,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1263,"line_start":1263,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":16,"text":"            if all_matched_nucleotides == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1276:12\n     |\n1276 |         if all_matched_nucleotides == true {\n     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `all_matched_nucleotides`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":71367,"byte_start":71336,"column_end":43,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1276,"line_start":1276,"suggested_replacement":"all_matched_nucleotides","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":12,"text":"        if all_matched_nucleotides == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":71367,"byte_start":71336,"column_end":43,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1276,"line_start":1276,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":12,"text":"        if all_matched_nucleotides == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `k` is only used to index `first_partially_matched_nucleotides_left_vector`\n    --> src/realign.rs:1277:22\n     |\n1277 |             for k in 0..first_partially_matched_nucleotides_left.len() {\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n     |\n1277 -             for k in 0..first_partially_matched_nucleotides_left.len() {\n1277 +             for <item> in first_partially_matched_nucleotides_left_vector.iter().take(first_partially_matched_nucleotides_left.len()) {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":71387,"byte_start":71386,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1277,"line_start":1277,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":18,"highlight_start":17,"text":"            for k in 0..first_partially_matched_nucleotides_left.len() {"}]},{"byte_end":71440,"byte_start":71391,"column_end":71,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1277,"line_start":1277,"suggested_replacement":"first_partially_matched_nucleotides_left_vector.iter().take(first_partially_matched_nucleotides_left.len())","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":71,"highlight_start":22,"text":"            for k in 0..first_partially_matched_nucleotides_left.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `k` is only used to index `first_partially_matched_nucleotides_left_vector`","spans":[{"byte_end":71440,"byte_start":71391,"column_end":71,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1277,"line_start":1277,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":71,"highlight_start":22,"text":"            for k in 0..first_partially_matched_nucleotides_left.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/realign.rs:1314:12\n     |\n1314 |         if align_correct.len() == 0 {\n     |            ^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `align_correct.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":73141,"byte_start":73117,"column_end":36,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1314,"line_start":1314,"suggested_replacement":"align_correct.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":36,"highlight_start":12,"text":"        if align_correct.len() == 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":73141,"byte_start":73117,"column_end":36,"column_start":12,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1314,"line_start":1314,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":12,"text":"        if align_correct.len() == 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n    --> src/realign.rs:1321:8\n     |\n1321 |     if alignment_changed == false || align_correct.len() == 0 {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!alignment_changed`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":73492,"byte_start":73466,"column_end":34,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1321,"line_start":1321,"suggested_replacement":"!alignment_changed","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":34,"highlight_start":8,"text":"    if alignment_changed == false || align_correct.len() == 0 {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":73492,"byte_start":73466,"column_end":34,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1321,"line_start":1321,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":8,"text":"    if alignment_changed == false || align_correct.len() == 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/realign.rs:1321:38\n     |\n1321 |     if alignment_changed == false || align_correct.len() == 0 {\n     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `align_correct.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":73520,"byte_start":73496,"column_end":62,"column_start":38,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1321,"line_start":1321,"suggested_replacement":"align_correct.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":38,"text":"    if alignment_changed == false || align_correct.len() == 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":73520,"byte_start":73496,"column_end":62,"column_start":38,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1321,"line_start":1321,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":38,"text":"    if alignment_changed == false || align_correct.len() == 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needless call to `as_bytes`\n    --> src/realign.rs:1351:9\n     |\n1351 |         query_seq.as_bytes().len(),\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: `len()` can be called directly on strings: `query_seq.len()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_as_bytes\n     = note: `#[warn(clippy::needless_as_bytes)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_as_bytes","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_as_bytes)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"`len()` can be called directly on strings","rendered":null,"spans":[{"byte_end":74622,"byte_start":74596,"column_end":35,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1351,"line_start":1351,"suggested_replacement":"query_seq.len()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":35,"highlight_start":9,"text":"        query_seq.as_bytes().len(),"}]}]}],"code":{"code":"clippy::needless_as_bytes","explanation":null},"level":"warning","message":"needless call to `as_bytes`","spans":[{"byte_end":74622,"byte_start":74596,"column_end":35,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1351,"line_start":1351,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":9,"text":"        query_seq.as_bytes().len(),"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needless call to `as_bytes`\n    --> src/realign.rs:1352:9\n     |\n1352 |         ref_seq.as_bytes().len(),\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: `len()` can be called directly on strings: `ref_seq.len()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_as_bytes\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_as_bytes","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"`len()` can be called directly on strings","rendered":null,"spans":[{"byte_end":74656,"byte_start":74632,"column_end":33,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1352,"line_start":1352,"suggested_replacement":"ref_seq.len()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":33,"highlight_start":9,"text":"        ref_seq.as_bytes().len(),"}]}]}],"code":{"code":"clippy::needless_as_bytes","explanation":null},"level":"warning","message":"needless call to `as_bytes`","spans":[{"byte_end":74656,"byte_start":74632,"column_end":33,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1352,"line_start":1352,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":33,"highlight_start":9,"text":"        ref_seq.as_bytes().len(),"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src/realign.rs:1358:36\n     |\n1358 |     let alignment = aligner.global(&query_seq.as_bytes(), ref_seq.as_bytes());\n     |                                    ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `query_seq.as_bytes()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n     = note: `#[warn(clippy::needless_borrow)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_borrow)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":74807,"byte_start":74786,"column_end":57,"column_start":36,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1358,"line_start":1358,"suggested_replacement":"query_seq.as_bytes()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":57,"highlight_start":36,"text":"    let alignment = aligner.global(&query_seq.as_bytes(), ref_seq.as_bytes());"}]}]}],"code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","message":"this expression creates a reference which is immediately dereferenced by the compiler","spans":[{"byte_end":74807,"byte_start":74786,"column_end":57,"column_start":36,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1358,"line_start":1358,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":57,"highlight_start":36,"text":"    let alignment = aligner.global(&query_seq.as_bytes(), ref_seq.as_bytes());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is used to index `alignment_seq`\n    --> src/realign.rs:1375:14\n     |\n1375 |     for i in 0..alignment_seq.len() {\n     |              ^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator and enumerate()\n     |\n1375 -     for i in 0..alignment_seq.len() {\n1375 +     for (i, <item>) in alignment_seq.iter().enumerate() {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator and enumerate()","rendered":null,"spans":[{"byte_end":75674,"byte_start":75673,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1375,"line_start":1375,"suggested_replacement":"(i, <item>)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":10,"highlight_start":9,"text":"    for i in 0..alignment_seq.len() {"}]},{"byte_end":75700,"byte_start":75678,"column_end":36,"column_start":14,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1375,"line_start":1375,"suggested_replacement":"alignment_seq.iter().enumerate()","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":36,"highlight_start":14,"text":"    for i in 0..alignment_seq.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is used to index `alignment_seq`","spans":[{"byte_end":75700,"byte_start":75678,"column_end":36,"column_start":14,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1375,"line_start":1375,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":14,"text":"    for i in 0..alignment_seq.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n    --> src/realign.rs:1385:22\n     |\n1385 |             align += &\"|\".to_string(); // Add \"|\" when there is a match\n     |                      ^^^^^^^^^^^^^^^^ help: use: `\"|\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n     = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::unnecessary_to_owned)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":76061,"byte_start":76045,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1385,"line_start":1385,"suggested_replacement":"\"|\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":38,"highlight_start":22,"text":"            align += &\"|\".to_string(); // Add \"|\" when there is a match"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":76061,"byte_start":76045,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1385,"line_start":1385,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":22,"text":"            align += &\"|\".to_string(); // Add \"|\" when there is a match"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n    --> src/realign.rs:1395:22\n     |\n1395 |             align += &\"*\".to_string(); // Add \"*\" when there is a substitution\n     |                      ^^^^^^^^^^^^^^^^ help: use: `\"*\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":76461,"byte_start":76445,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1395,"line_start":1395,"suggested_replacement":"\"*\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":38,"highlight_start":22,"text":"            align += &\"*\".to_string(); // Add \"*\" when there is a substitution"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":76461,"byte_start":76445,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1395,"line_start":1395,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":22,"text":"            align += &\"*\".to_string(); // Add \"*\" when there is a substitution"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n    --> src/realign.rs:1399:26\n     |\n1399 |                 q_seq += &\"-\".to_string();\n     |                          ^^^^^^^^^^^^^^^^ help: use: `\"-\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":76788,"byte_start":76772,"column_end":42,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1399,"line_start":1399,"suggested_replacement":"\"-\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":42,"highlight_start":26,"text":"                q_seq += &\"-\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":76788,"byte_start":76772,"column_end":42,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1399,"line_start":1399,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":42,"highlight_start":26,"text":"                q_seq += &\"-\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n    --> src/realign.rs:1410:26\n     |\n1410 |                 align += &\" \".to_string(); // Add empty space when there is a deletion\n     |                          ^^^^^^^^^^^^^^^^ help: use: `\" \"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":77364,"byte_start":77348,"column_end":42,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1410,"line_start":1410,"suggested_replacement":"\" \"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":42,"highlight_start":26,"text":"                align += &\" \".to_string(); // Add empty space when there is a deletion"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":77364,"byte_start":77348,"column_end":42,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1410,"line_start":1410,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":42,"highlight_start":26,"text":"                align += &\" \".to_string(); // Add empty space when there is a deletion"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n    --> src/realign.rs:1417:22\n     |\n1417 |             r_seq += &\"-\".to_string();\n     |                      ^^^^^^^^^^^^^^^^ help: use: `\"-\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":77658,"byte_start":77642,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1417,"line_start":1417,"suggested_replacement":"\"-\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":38,"highlight_start":22,"text":"            r_seq += &\"-\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":77658,"byte_start":77642,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1417,"line_start":1417,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":22,"text":"            r_seq += &\"-\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n    --> src/realign.rs:1418:22\n     |\n1418 |             align += &\" \".to_string(); // Add empty space when there is an insertion\n     |                      ^^^^^^^^^^^^^^^^ help: use: `\" \"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":77697,"byte_start":77681,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1418,"line_start":1418,"suggested_replacement":"\" \"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":38,"highlight_start":22,"text":"            align += &\" \".to_string(); // Add empty space when there is an insertion"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":77697,"byte_start":77681,"column_end":38,"column_start":22,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1418,"line_start":1418,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":22,"text":"            align += &\" \".to_string(); // Add empty space when there is an insertion"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is only used to index `align_chars`\n    --> src/realign.rs:1455:14\n     |\n1455 |     for i in 0..cmp::min(alignment_length_check, align_chars.len()) {\n     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n     |\n1455 -     for i in 0..cmp::min(alignment_length_check, align_chars.len()) {\n1455 +     for <item> in align_chars.iter().take(cmp::min(alignment_length_check, align_chars.len())) {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":80039,"byte_start":80038,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1455,"line_start":1455,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":10,"highlight_start":9,"text":"    for i in 0..cmp::min(alignment_length_check, align_chars.len()) {"}]},{"byte_end":80097,"byte_start":80043,"column_end":68,"column_start":14,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1455,"line_start":1455,"suggested_replacement":"align_chars.iter().take(cmp::min(alignment_length_check, align_chars.len()))","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":68,"highlight_start":14,"text":"    for i in 0..cmp::min(alignment_length_check, align_chars.len()) {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is only used to index `align_chars`","spans":[{"byte_end":80097,"byte_start":80043,"column_end":68,"column_start":14,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1455,"line_start":1455,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":68,"highlight_start":14,"text":"    for i in 0..cmp::min(alignment_length_check, align_chars.len()) {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is only used to index `align_chars`\n    --> src/realign.rs:1468:9\n     |\n1468 |         align_chars.len() - cmp::min(alignment_length_check, align_chars.len())..align_chars.len()\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n     |\n1467 ~     for <item> in\n1468 ~         align_chars.iter().skip(align_chars.len() - cmp::min(alignment_length_check, align_chars.len()))\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":80523,"byte_start":80522,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1467,"line_start":1467,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":10,"highlight_start":9,"text":"    for i in"}]},{"byte_end":80625,"byte_start":80535,"column_end":99,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1468,"line_start":1468,"suggested_replacement":"align_chars.iter().skip(align_chars.len() - cmp::min(alignment_length_check, align_chars.len()))","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":99,"highlight_start":9,"text":"        align_chars.len() - cmp::min(alignment_length_check, align_chars.len())..align_chars.len()"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is only used to index `align_chars`","spans":[{"byte_end":80625,"byte_start":80535,"column_end":99,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1468,"line_start":1468,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":99,"highlight_start":9,"text":"        align_chars.len() - cmp::min(alignment_length_check, align_chars.len())..align_chars.len()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1478:8\n     |\n1478 |     if start_misaligned == true {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `start_misaligned`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":80869,"byte_start":80845,"column_end":32,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1478,"line_start":1478,"suggested_replacement":"start_misaligned","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":32,"highlight_start":8,"text":"    if start_misaligned == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":80869,"byte_start":80845,"column_end":32,"column_start":8,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1478,"line_start":1478,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":8,"text":"    if start_misaligned == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is used to index `align_chars`\n    --> src/realign.rs:1482:18\n     |\n1482 |         for i in 0..align_final.len() {\n     |                  ^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator and enumerate()\n     |\n1482 -         for i in 0..align_final.len() {\n1482 +         for (i, <item>) in align_chars.iter().enumerate().take(align_final.len()) {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator and enumerate()","rendered":null,"spans":[{"byte_end":81060,"byte_start":81059,"column_end":14,"column_start":13,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1482,"line_start":1482,"suggested_replacement":"(i, <item>)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":14,"highlight_start":13,"text":"        for i in 0..align_final.len() {"}]},{"byte_end":81084,"byte_start":81064,"column_end":38,"column_start":18,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1482,"line_start":1482,"suggested_replacement":"align_chars.iter().enumerate().take(align_final.len())","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":38,"highlight_start":18,"text":"        for i in 0..align_final.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is used to index `align_chars`","spans":[{"byte_end":81084,"byte_start":81064,"column_end":38,"column_start":18,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1482,"line_start":1482,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":18,"text":"        for i in 0..align_final.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1500:15\n     |\n1500 |     } else if stop_misaligned == true {\n     |               ^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `stop_misaligned`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":81770,"byte_start":81747,"column_end":38,"column_start":15,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1500,"line_start":1500,"suggested_replacement":"stop_misaligned","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":38,"highlight_start":15,"text":"    } else if stop_misaligned == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":81770,"byte_start":81747,"column_end":38,"column_start":15,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1500,"line_start":1500,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":15,"text":"    } else if stop_misaligned == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this function has too many arguments (11/7)\n    --> src/realign.rs:1532:1\n     |\n1532 | / pub fn determine_start_stop_indel_region_in_read(\n1533 | |     alignment_side: String,\n1534 | |     q_seq_alt: &String,\n1535 | |     q_seq_ref: &String,\n...    |\n1543 | |     indel_length: usize,\n1544 | | ) -> (i64, i64, i64, i64) {\n     | |_________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments","rendered":null,"spans":[]}],"code":{"code":"clippy::too_many_arguments","explanation":null},"level":"warning","message":"this function has too many arguments (11/7)","spans":[{"byte_end":83265,"byte_start":82909,"column_end":26,"column_start":1,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1544,"line_start":1532,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":1,"text":"pub fn determine_start_stop_indel_region_in_read("},{"highlight_end":28,"highlight_start":1,"text":"    alignment_side: String,"},{"highlight_end":24,"highlight_start":1,"text":"    q_seq_alt: &String,"},{"highlight_end":24,"highlight_start":1,"text":"    q_seq_ref: &String,"},{"highlight_end":24,"highlight_start":1,"text":"    r_seq_alt: &String,"},{"highlight_end":24,"highlight_start":1,"text":"    r_seq_ref: &String,"},{"highlight_end":33,"highlight_start":1,"text":"    correct_start_position: i64,"},{"highlight_end":31,"highlight_start":1,"text":"    correct_end_position: i64,"},{"highlight_end":22,"highlight_start":1,"text":"    variant_pos: i64,"},{"highlight_end":23,"highlight_start":1,"text":"    ref_length: usize,"},{"highlight_end":23,"highlight_start":1,"text":"    alt_length: usize,"},{"highlight_end":25,"highlight_start":1,"text":"    indel_length: usize,"},{"highlight_end":26,"highlight_start":1,"text":") -> (i64, i64, i64, i64) {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n    --> src/realign.rs:1534:16\n     |\n1534 |     q_seq_alt: &String,\n     |                ^^^^^^^ help: change this to: `&str`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":83009,"byte_start":83002,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1534,"line_start":1534,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":23,"highlight_start":16,"text":"    q_seq_alt: &String,"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":83009,"byte_start":83002,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1534,"line_start":1534,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":16,"text":"    q_seq_alt: &String,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n    --> src/realign.rs:1535:16\n     |\n1535 |     q_seq_ref: &String,\n     |                ^^^^^^^ help: change this to: `&str`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":83033,"byte_start":83026,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1535,"line_start":1535,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":23,"highlight_start":16,"text":"    q_seq_ref: &String,"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":83033,"byte_start":83026,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1535,"line_start":1535,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":16,"text":"    q_seq_ref: &String,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n    --> src/realign.rs:1536:16\n     |\n1536 |     r_seq_alt: &String,\n     |                ^^^^^^^ help: change this to: `&str`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":83057,"byte_start":83050,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1536,"line_start":1536,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":23,"highlight_start":16,"text":"    r_seq_alt: &String,"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":83057,"byte_start":83050,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1536,"line_start":1536,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":16,"text":"    r_seq_alt: &String,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n    --> src/realign.rs:1537:16\n     |\n1537 |     r_seq_ref: &String,\n     |                ^^^^^^^ help: change this to: `&str`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":83081,"byte_start":83074,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1537,"line_start":1537,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":23,"highlight_start":16,"text":"    r_seq_ref: &String,"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":83081,"byte_start":83074,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1537,"line_start":1537,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":16,"text":"    r_seq_ref: &String,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n    --> src/realign.rs:1572:26\n     |\n1572 |     if alignment_side == \"left\".to_string() {\n     |                          ^^^^^^^^^^^^^^^^^^ help: try: `*\"left\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n     = note: `#[warn(clippy::cmp_owned)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::cmp_owned)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":85041,"byte_start":85023,"column_end":44,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1572,"line_start":1572,"suggested_replacement":"*\"left\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":44,"highlight_start":26,"text":"    if alignment_side == \"left\".to_string() {"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":85041,"byte_start":85023,"column_end":44,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1572,"line_start":1572,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":26,"text":"    if alignment_side == \"left\".to_string() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting the result of `i64::abs()` to usize\n    --> src/realign.rs:1579:21\n     |\n1579 |         for i in 0..(variant_pos - correct_start_position).abs() as usize {\n     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `(variant_pos - correct_start_position).unsigned_abs()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_abs_to_unsigned\n     = note: `#[warn(clippy::cast_abs_to_unsigned)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_abs_to_unsigned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::cast_abs_to_unsigned)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"replace with","rendered":null,"spans":[{"byte_end":85542,"byte_start":85498,"column_end":65,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1579,"line_start":1579,"suggested_replacement":"(variant_pos - correct_start_position).unsigned_abs()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":65,"highlight_start":21,"text":"        for i in 0..(variant_pos - correct_start_position).abs() as usize {"}]}]}],"code":{"code":"clippy::cast_abs_to_unsigned","explanation":null},"level":"warning","message":"casting the result of `i64::abs()` to usize","spans":[{"byte_end":85542,"byte_start":85498,"column_end":65,"column_start":21,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1579,"line_start":1579,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":65,"highlight_start":21,"text":"        for i in 0..(variant_pos - correct_start_position).abs() as usize {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n    --> src/realign.rs:1605:33\n     |\n1605 |     } else if alignment_side == \"right\".to_string() {\n     |                                 ^^^^^^^^^^^^^^^^^^^ help: try: `*\"right\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":86649,"byte_start":86630,"column_end":52,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1605,"line_start":1605,"suggested_replacement":"*\"right\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":52,"highlight_start":33,"text":"    } else if alignment_side == \"right\".to_string() {"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":86649,"byte_start":86630,"column_end":52,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1605,"line_start":1605,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":33,"text":"    } else if alignment_side == \"right\".to_string() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: `if` chain can be rewritten with `match`\n    --> src/realign.rs:1665:9\n     |\n1665 | /         if alt_length > ref_length {\n1666 | |             let red_region_start_ref_left_aligned =\n1667 | |                 q_seq_ref.len() as i64 - correctly_aligned_nclt_in_right_ref - alt_length as i64;\n1668 | |             let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region\n...    |\n1699 | |         }\n     | |_________^ help: consider rewriting the `if` chain with `match`: `match alt_length.cmp(&ref_length) {...}`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain\n     = note: `#[warn(clippy::comparison_chain)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::comparison_chain)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider rewriting the `if` chain with `match`","rendered":null,"spans":[{"byte_end":90924,"byte_start":89190,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1699,"line_start":1665,"suggested_replacement":"match alt_length.cmp(&ref_length) {...}","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":37,"highlight_start":9,"text":"        if alt_length > ref_length {"},{"highlight_end":52,"highlight_start":1,"text":"            let red_region_start_ref_left_aligned ="},{"highlight_end":98,"highlight_start":1,"text":"                q_seq_ref.len() as i64 - correctly_aligned_nclt_in_right_ref - alt_length as i64;"},{"highlight_end":123,"highlight_start":1,"text":"            let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region"},{"highlight_end":83,"highlight_start":1,"text":"            for i in red_region_start_ref_left_aligned + 1..red_region_start_ref {"},{"highlight_end":56,"highlight_start":1,"text":"                if (i as usize) < r_seq_ref_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_ref_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":47,"highlight_start":1,"text":"            if is_complete_insertion == true {"},{"highlight_end":74,"highlight_start":1,"text":"                red_region_start_ref = red_region_start_ref_left_aligned;"},{"highlight_end":80,"highlight_start":1,"text":"                red_region_stop_ref = red_region_start_ref + ref_length as i64;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":44,"highlight_start":1,"text":"        } else if ref_length > alt_length {"},{"highlight_end":52,"highlight_start":1,"text":"            let red_region_start_alt_left_aligned ="},{"highlight_end":98,"highlight_start":1,"text":"                q_seq_alt.len() as i64 - correctly_aligned_nclt_in_right_alt - ref_length as i64;"},{"highlight_end":123,"highlight_start":1,"text":"            let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region"},{"highlight_end":83,"highlight_start":1,"text":"            for i in red_region_start_alt_left_aligned + 1..red_region_start_alt {"},{"highlight_end":56,"highlight_start":1,"text":"                if (i as usize) < r_seq_alt_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_alt_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":47,"highlight_start":1,"text":"            if is_complete_insertion == true {"},{"highlight_end":74,"highlight_start":1,"text":"                red_region_start_alt = red_region_start_alt_left_aligned;"},{"highlight_end":80,"highlight_start":1,"text":"                red_region_stop_alt = red_region_start_alt + alt_length as i64;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":10,"highlight_start":1,"text":"        }"}]}]}],"code":{"code":"clippy::comparison_chain","explanation":null},"level":"warning","message":"`if` chain can be rewritten with `match`","spans":[{"byte_end":90924,"byte_start":89190,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1699,"line_start":1665,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":9,"text":"        if alt_length > ref_length {"},{"highlight_end":52,"highlight_start":1,"text":"            let red_region_start_ref_left_aligned ="},{"highlight_end":98,"highlight_start":1,"text":"                q_seq_ref.len() as i64 - correctly_aligned_nclt_in_right_ref - alt_length as i64;"},{"highlight_end":123,"highlight_start":1,"text":"            let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region"},{"highlight_end":83,"highlight_start":1,"text":"            for i in red_region_start_ref_left_aligned + 1..red_region_start_ref {"},{"highlight_end":56,"highlight_start":1,"text":"                if (i as usize) < r_seq_ref_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_ref_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":47,"highlight_start":1,"text":"            if is_complete_insertion == true {"},{"highlight_end":74,"highlight_start":1,"text":"                red_region_start_ref = red_region_start_ref_left_aligned;"},{"highlight_end":80,"highlight_start":1,"text":"                red_region_stop_ref = red_region_start_ref + ref_length as i64;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":44,"highlight_start":1,"text":"        } else if ref_length > alt_length {"},{"highlight_end":52,"highlight_start":1,"text":"            let red_region_start_alt_left_aligned ="},{"highlight_end":98,"highlight_start":1,"text":"                q_seq_alt.len() as i64 - correctly_aligned_nclt_in_right_alt - ref_length as i64;"},{"highlight_end":123,"highlight_start":1,"text":"            let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region"},{"highlight_end":83,"highlight_start":1,"text":"            for i in red_region_start_alt_left_aligned + 1..red_region_start_alt {"},{"highlight_end":56,"highlight_start":1,"text":"                if (i as usize) < r_seq_alt_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_alt_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":47,"highlight_start":1,"text":"            if is_complete_insertion == true {"},{"highlight_end":74,"highlight_start":1,"text":"                red_region_start_alt = red_region_start_alt_left_aligned;"},{"highlight_end":80,"highlight_start":1,"text":"                red_region_stop_alt = red_region_start_alt + alt_length as i64;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":10,"highlight_start":1,"text":"        }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1678:16\n     |\n1678 |             if is_complete_insertion == true {\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `is_complete_insertion`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":89874,"byte_start":89845,"column_end":45,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1678,"line_start":1678,"suggested_replacement":"is_complete_insertion","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":45,"highlight_start":16,"text":"            if is_complete_insertion == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":89874,"byte_start":89845,"column_end":45,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1678,"line_start":1678,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":16,"text":"            if is_complete_insertion == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1695:16\n     |\n1695 |             if is_complete_insertion == true {\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `is_complete_insertion`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":90744,"byte_start":90715,"column_end":45,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1695,"line_start":1695,"suggested_replacement":"is_complete_insertion","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":45,"highlight_start":16,"text":"            if is_complete_insertion == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":90744,"byte_start":90715,"column_end":45,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1695,"line_start":1695,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":16,"text":"            if is_complete_insertion == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n    --> src/realign.rs:1741:26\n     |\n1741 |     if alignment_side == \"left\".to_string()\n     |                          ^^^^^^^^^^^^^^^^^^ help: try: `*\"left\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":92549,"byte_start":92531,"column_end":44,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1741,"line_start":1741,"suggested_replacement":"*\"left\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":44,"highlight_start":26,"text":"    if alignment_side == \"left\".to_string()"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":92549,"byte_start":92531,"column_end":44,"column_start":26,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1741,"line_start":1741,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":26,"text":"    if alignment_side == \"left\".to_string()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: `if` chain can be rewritten with `match`\n    --> src/realign.rs:1763:9\n     |\n1763 | /         if alt_length > ref_length {\n1764 | |             let red_region_start_ref_left_aligned =\n1765 | |                 q_seq_alt.len() as i64 - correctly_aligned_nclt_in_right_alt - alt_length as i64;\n1766 | |             let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region\n...    |\n1797 | |         }\n     | |_________^ help: consider rewriting the `if` chain with `match`: `match alt_length.cmp(&ref_length) {...}`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider rewriting the `if` chain with `match`","rendered":null,"spans":[{"byte_end":95678,"byte_start":93944,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1797,"line_start":1763,"suggested_replacement":"match alt_length.cmp(&ref_length) {...}","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":37,"highlight_start":9,"text":"        if alt_length > ref_length {"},{"highlight_end":52,"highlight_start":1,"text":"            let red_region_start_ref_left_aligned ="},{"highlight_end":98,"highlight_start":1,"text":"                q_seq_alt.len() as i64 - correctly_aligned_nclt_in_right_alt - alt_length as i64;"},{"highlight_end":123,"highlight_start":1,"text":"            let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region"},{"highlight_end":83,"highlight_start":1,"text":"            for i in red_region_start_ref_left_aligned + 1..red_region_start_ref {"},{"highlight_end":56,"highlight_start":1,"text":"                if (i as usize) < r_seq_ref_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_ref_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":47,"highlight_start":1,"text":"            if is_complete_insertion == true {"},{"highlight_end":74,"highlight_start":1,"text":"                red_region_start_ref = red_region_start_ref_left_aligned;"},{"highlight_end":80,"highlight_start":1,"text":"                red_region_stop_ref = red_region_start_ref + ref_length as i64;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":44,"highlight_start":1,"text":"        } else if ref_length > alt_length {"},{"highlight_end":52,"highlight_start":1,"text":"            let red_region_start_alt_left_aligned ="},{"highlight_end":98,"highlight_start":1,"text":"                q_seq_ref.len() as i64 - correctly_aligned_nclt_in_right_ref - ref_length as i64;"},{"highlight_end":123,"highlight_start":1,"text":"            let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region"},{"highlight_end":83,"highlight_start":1,"text":"            for i in red_region_start_alt_left_aligned + 1..red_region_start_alt {"},{"highlight_end":56,"highlight_start":1,"text":"                if (i as usize) < r_seq_alt_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_alt_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":47,"highlight_start":1,"text":"            if is_complete_insertion == true {"},{"highlight_end":74,"highlight_start":1,"text":"                red_region_start_alt = red_region_start_alt_left_aligned;"},{"highlight_end":80,"highlight_start":1,"text":"                red_region_stop_alt = red_region_start_alt + alt_length as i64;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":10,"highlight_start":1,"text":"        }"}]}]}],"code":{"code":"clippy::comparison_chain","explanation":null},"level":"warning","message":"`if` chain can be rewritten with `match`","spans":[{"byte_end":95678,"byte_start":93944,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1797,"line_start":1763,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":9,"text":"        if alt_length > ref_length {"},{"highlight_end":52,"highlight_start":1,"text":"            let red_region_start_ref_left_aligned ="},{"highlight_end":98,"highlight_start":1,"text":"                q_seq_alt.len() as i64 - correctly_aligned_nclt_in_right_alt - alt_length as i64;"},{"highlight_end":123,"highlight_start":1,"text":"            let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region"},{"highlight_end":83,"highlight_start":1,"text":"            for i in red_region_start_ref_left_aligned + 1..red_region_start_ref {"},{"highlight_end":56,"highlight_start":1,"text":"                if (i as usize) < r_seq_ref_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_ref_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":47,"highlight_start":1,"text":"            if is_complete_insertion == true {"},{"highlight_end":74,"highlight_start":1,"text":"                red_region_start_ref = red_region_start_ref_left_aligned;"},{"highlight_end":80,"highlight_start":1,"text":"                red_region_stop_ref = red_region_start_ref + ref_length as i64;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":44,"highlight_start":1,"text":"        } else if ref_length > alt_length {"},{"highlight_end":52,"highlight_start":1,"text":"            let red_region_start_alt_left_aligned ="},{"highlight_end":98,"highlight_start":1,"text":"                q_seq_ref.len() as i64 - correctly_aligned_nclt_in_right_ref - ref_length as i64;"},{"highlight_end":123,"highlight_start":1,"text":"            let mut is_complete_insertion = true; // Check if there the ref alignment has a gap arounbd the variant region"},{"highlight_end":83,"highlight_start":1,"text":"            for i in red_region_start_alt_left_aligned + 1..red_region_start_alt {"},{"highlight_end":56,"highlight_start":1,"text":"                if (i as usize) < r_seq_alt_vec.len() {"},{"highlight_end":58,"highlight_start":1,"text":"                    if r_seq_alt_vec[i as usize] != '-' {"},{"highlight_end":55,"highlight_start":1,"text":"                        is_complete_insertion = false;"},{"highlight_end":31,"highlight_start":1,"text":"                        break;"},{"highlight_end":22,"highlight_start":1,"text":"                    }"},{"highlight_end":18,"highlight_start":1,"text":"                }"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":47,"highlight_start":1,"text":"            if is_complete_insertion == true {"},{"highlight_end":74,"highlight_start":1,"text":"                red_region_start_alt = red_region_start_alt_left_aligned;"},{"highlight_end":80,"highlight_start":1,"text":"                red_region_stop_alt = red_region_start_alt + alt_length as i64;"},{"highlight_end":14,"highlight_start":1,"text":"            }"},{"highlight_end":10,"highlight_start":1,"text":"        }"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1776:16\n     |\n1776 |             if is_complete_insertion == true {\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `is_complete_insertion`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":94628,"byte_start":94599,"column_end":45,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1776,"line_start":1776,"suggested_replacement":"is_complete_insertion","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":45,"highlight_start":16,"text":"            if is_complete_insertion == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":94628,"byte_start":94599,"column_end":45,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1776,"line_start":1776,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":16,"text":"            if is_complete_insertion == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/realign.rs:1793:16\n     |\n1793 |             if is_complete_insertion == true {\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `is_complete_insertion`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":95498,"byte_start":95469,"column_end":45,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1793,"line_start":1793,"suggested_replacement":"is_complete_insertion","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":45,"highlight_start":16,"text":"            if is_complete_insertion == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":95498,"byte_start":95469,"column_end":45,"column_start":16,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1793,"line_start":1793,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":45,"highlight_start":16,"text":"            if is_complete_insertion == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n    --> src/realign.rs:1798:33\n     |\n1798 |     } else if alignment_side == \"right\".to_string()\n     |                                 ^^^^^^^^^^^^^^^^^^^ help: try: `*\"right\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":95730,"byte_start":95711,"column_end":52,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1798,"line_start":1798,"suggested_replacement":"*\"right\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":52,"highlight_start":33,"text":"    } else if alignment_side == \"right\".to_string()"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":95730,"byte_start":95711,"column_end":52,"column_start":33,"expansion":null,"file_name":"src/realign.rs","is_primary":true,"label":null,"line_end":1798,"line_start":1798,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":52,"highlight_start":33,"text":"    } else if alignment_side == \"right\".to_string()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: returning the result of a `let` binding from a block\n  --> src/stats_functions.rs:28:13\n   |\n20 | /             let p_value = fishers_exact(&[\n21 | |                 alternate_forward_count,\n22 | |                 alternate_reverse_count,\n23 | |                 reference_forward_count,\n...  |\n26 | |             .unwrap()\n27 | |             .two_tail_pvalue;\n   | |_____________________________- unnecessary `let` binding\n28 |               p_value\n   |               ^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n   = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n   |\n20 ~             \n21 ~             fishers_exact(&[\n22 +                 alternate_forward_count,\n23 +                 alternate_reverse_count,\n24 +                 reference_forward_count,\n25 +                 reference_reverse_count,\n26 +             ])\n27 +             .unwrap()\n28 +             .two_tail_pvalue\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::let_and_return)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"return the expression directly","rendered":null,"spans":[{"byte_end":1383,"byte_start":1122,"column_end":30,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":27,"line_start":20,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":13,"text":"            let p_value = fishers_exact(&["},{"highlight_end":41,"highlight_start":1,"text":"                alternate_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                alternate_reverse_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_reverse_count,"},{"highlight_end":15,"highlight_start":1,"text":"            ])"},{"highlight_end":22,"highlight_start":1,"text":"            .unwrap()"},{"highlight_end":30,"highlight_start":1,"text":"            .two_tail_pvalue;"}]},{"byte_end":1403,"byte_start":1396,"column_end":20,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":28,"line_start":28,"suggested_replacement":"fishers_exact(&[\n                alternate_forward_count,\n                alternate_reverse_count,\n                reference_forward_count,\n                reference_reverse_count,\n            ])\n            .unwrap()\n            .two_tail_pvalue","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":20,"highlight_start":13,"text":"            p_value"}]}]}],"code":{"code":"clippy::let_and_return","explanation":null},"level":"warning","message":"returning the result of a `let` binding from a block","spans":[{"byte_end":1383,"byte_start":1122,"column_end":30,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":false,"label":"unnecessary `let` binding","line_end":27,"line_start":20,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":13,"text":"            let p_value = fishers_exact(&["},{"highlight_end":41,"highlight_start":1,"text":"                alternate_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                alternate_reverse_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_reverse_count,"},{"highlight_end":15,"highlight_start":1,"text":"            ])"},{"highlight_end":22,"highlight_start":1,"text":"            .unwrap()"},{"highlight_end":30,"highlight_start":1,"text":"            .two_tail_pvalue;"}]},{"byte_end":1403,"byte_start":1396,"column_end":20,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":28,"line_start":28,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":13,"text":"            p_value"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: returning the result of a `let` binding from a block\n  --> src/stats_functions.rs:58:13\n   |\n50 | /             let p_value = fishers_exact(&[\n51 | |                 alternate_forward_count,\n52 | |                 alternate_reverse_count,\n53 | |                 reference_forward_count,\n...  |\n56 | |             .unwrap()\n57 | |             .two_tail_pvalue;\n   | |_____________________________- unnecessary `let` binding\n58 |               p_value\n   |               ^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n   |\n50 ~             \n51 ~             fishers_exact(&[\n52 +                 alternate_forward_count,\n53 +                 alternate_reverse_count,\n54 +                 reference_forward_count,\n55 +                 reference_reverse_count,\n56 +             ])\n57 +             .unwrap()\n58 +             .two_tail_pvalue\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"return the expression directly","rendered":null,"spans":[{"byte_end":2412,"byte_start":2151,"column_end":30,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":57,"line_start":50,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":43,"highlight_start":13,"text":"            let p_value = fishers_exact(&["},{"highlight_end":41,"highlight_start":1,"text":"                alternate_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                alternate_reverse_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_reverse_count,"},{"highlight_end":15,"highlight_start":1,"text":"            ])"},{"highlight_end":22,"highlight_start":1,"text":"            .unwrap()"},{"highlight_end":30,"highlight_start":1,"text":"            .two_tail_pvalue;"}]},{"byte_end":2432,"byte_start":2425,"column_end":20,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":58,"line_start":58,"suggested_replacement":"fishers_exact(&[\n                alternate_forward_count,\n                alternate_reverse_count,\n                reference_forward_count,\n                reference_reverse_count,\n            ])\n            .unwrap()\n            .two_tail_pvalue","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":20,"highlight_start":13,"text":"            p_value"}]}]}],"code":{"code":"clippy::let_and_return","explanation":null},"level":"warning","message":"returning the result of a `let` binding from a block","spans":[{"byte_end":2412,"byte_start":2151,"column_end":30,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":false,"label":"unnecessary `let` binding","line_end":57,"line_start":50,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":13,"text":"            let p_value = fishers_exact(&["},{"highlight_end":41,"highlight_start":1,"text":"                alternate_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                alternate_reverse_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_forward_count,"},{"highlight_end":41,"highlight_start":1,"text":"                reference_reverse_count,"},{"highlight_end":15,"highlight_start":1,"text":"            ])"},{"highlight_end":22,"highlight_start":1,"text":"            .unwrap()"},{"highlight_end":30,"highlight_start":1,"text":"            .two_tail_pvalue;"}]},{"byte_end":2432,"byte_start":2425,"column_end":20,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":58,"line_start":58,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":13,"text":"            p_value"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/stats_functions.rs:194:12\n    |\n194 |         if is_repeat == false {\n    |            ^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!is_repeat`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":7870,"byte_start":7852,"column_end":30,"column_start":12,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":194,"line_start":194,"suggested_replacement":"!is_repeat","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":30,"highlight_start":12,"text":"        if is_repeat == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":7870,"byte_start":7852,"column_end":30,"column_start":12,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":194,"line_start":194,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":12,"text":"        if is_repeat == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/stats_functions.rs:208:16\n    |\n208 |             if is_repeat == false {\n    |                ^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!is_repeat`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":8390,"byte_start":8372,"column_end":34,"column_start":16,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":208,"line_start":208,"suggested_replacement":"!is_repeat","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":34,"highlight_start":16,"text":"            if is_repeat == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":8390,"byte_start":8372,"column_end":34,"column_start":16,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":208,"line_start":208,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":16,"text":"            if is_repeat == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/stats_functions.rs:266:26\n    |\n266 |     let u_y = weight_y - (group2.len() as f64 * (group2.len() as f64 + 1.0) / 2.0) as f64;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(group2.len() as f64 * (group2.len() as f64 + 1.0) / 2.0)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::unnecessary_cast)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":10522,"byte_start":10458,"column_end":90,"column_start":26,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":266,"line_start":266,"suggested_replacement":"(group2.len() as f64 * (group2.len() as f64 + 1.0) / 2.0)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":90,"highlight_start":26,"text":"    let u_y = weight_y - (group2.len() as f64 * (group2.len() as f64 + 1.0) / 2.0) as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":10522,"byte_start":10458,"column_end":90,"column_start":26,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":266,"line_start":266,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":90,"highlight_start":26,"text":"    let u_y = weight_y - (group2.len() as f64 * (group2.len() as f64 + 1.0) / 2.0) as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`f64` -> `f64`)\n   --> src/stats_functions.rs:270:26\n    |\n270 |     let u_x = weight_x - (group1.len() as f64 * (group1.len() as f64 + 1.0) / 2.0) as f64;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(group1.len() as f64 * (group1.len() as f64 + 1.0) / 2.0)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":10726,"byte_start":10662,"column_end":90,"column_start":26,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":270,"line_start":270,"suggested_replacement":"(group1.len() as f64 * (group1.len() as f64 + 1.0) / 2.0)","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":90,"highlight_start":26,"text":"    let u_x = weight_x - (group1.len() as f64 * (group1.len() as f64 + 1.0) / 2.0) as f64;"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`f64` -> `f64`)","spans":[{"byte_end":10726,"byte_start":10662,"column_end":90,"column_start":26,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":270,"line_start":270,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":90,"highlight_start":26,"text":"    let u_x = weight_x - (group1.len() as f64 * (group1.len() as f64 + 1.0) / 2.0) as f64;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/stats_functions.rs:286:64\n    |\n286 |     if group1.len() < threshold && group2.len() < threshold && repeat_present == false {\n    |                                                                ^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!repeat_present`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":11290,"byte_start":11267,"column_end":87,"column_start":64,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":286,"line_start":286,"suggested_replacement":"!repeat_present","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":87,"highlight_start":64,"text":"    if group1.len() < threshold && group2.len() < threshold && repeat_present == false {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":11290,"byte_start":11267,"column_end":87,"column_start":64,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":286,"line_start":286,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":87,"highlight_start":64,"text":"    if group1.len() < threshold && group2.len() < threshold && repeat_present == false {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is only used to index `rank_frequencies`\n   --> src/stats_functions.rs:317:18\n    |\n317 |         for i in 0..rank_frequencies.len() {\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n317 -         for i in 0..rank_frequencies.len() {\n317 +         for <item> in &rank_frequencies {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":12588,"byte_start":12587,"column_end":14,"column_start":13,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":317,"line_start":317,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":14,"highlight_start":13,"text":"        for i in 0..rank_frequencies.len() {"}]},{"byte_end":12617,"byte_start":12592,"column_end":43,"column_start":18,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":317,"line_start":317,"suggested_replacement":"&rank_frequencies","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":43,"highlight_start":18,"text":"        for i in 0..rank_frequencies.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is only used to index `rank_frequencies`","spans":[{"byte_end":12617,"byte_start":12592,"column_end":43,"column_start":18,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":317,"line_start":317,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":18,"text":"        for i in 0..rank_frequencies.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/stats_functions.rs:330:12\n    |\n330 |         if correct == true {\n    |            ^^^^^^^^^^^^^^^ help: try simplifying it as shown: `correct`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":13169,"byte_start":13154,"column_end":27,"column_start":12,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":330,"line_start":330,"suggested_replacement":"correct","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":27,"highlight_start":12,"text":"        if correct == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":13169,"byte_start":13154,"column_end":27,"column_start":12,"expansion":null,"file_name":"src/stats_functions.rs","is_primary":true,"label":null,"line_end":330,"line_start":330,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":12,"text":"        if correct == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/indel.rs:107:35\n    |\n107 | ...                   + &\"-\".to_string())\n    |                         ^^^^^^^^^^^^^^^^ help: use: `\"-\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":4906,"byte_start":4890,"column_end":51,"column_start":35,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":107,"line_start":107,"suggested_replacement":"\"-\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":35,"text":"                                + &\"-\".to_string())"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":4906,"byte_start":4890,"column_end":51,"column_start":35,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":107,"line_start":107,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":35,"text":"                                + &\"-\".to_string())"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/indel.rs:112:35\n    |\n112 | ...                   + &\"-\".to_string())\n    |                         ^^^^^^^^^^^^^^^^ help: use: `\"-\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":5166,"byte_start":5150,"column_end":51,"column_start":35,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":112,"line_start":112,"suggested_replacement":"\"-\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":35,"text":"                                + &\"-\".to_string())"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":5166,"byte_start":5150,"column_end":51,"column_start":35,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":112,"line_start":112,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":35,"text":"                                + &\"-\".to_string())"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/indel.rs:116:77\n    |\n116 | ...                   &(item[\"cigar\"].as_str().unwrap().to_string() + &\"-\".to_string())\n    |                                                                       ^^^^^^^^^^^^^^^^ help: use: `\"-\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":5383,"byte_start":5367,"column_end":93,"column_start":77,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":116,"line_start":116,"suggested_replacement":"\"-\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":93,"highlight_start":77,"text":"                            &(item[\"cigar\"].as_str().unwrap().to_string() + &\"-\".to_string())"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":5383,"byte_start":5367,"column_end":93,"column_start":77,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":116,"line_start":116,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":93,"highlight_start":77,"text":"                            &(item[\"cigar\"].as_str().unwrap().to_string() + &\"-\".to_string())"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/indel.rs:120:78\n    |\n120 | ...                   &(item[\"flag\"].as_usize().unwrap().to_string() + &\"-\".to_string())\n    |                                                                        ^^^^^^^^^^^^^^^^ help: use: `\"-\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":5600,"byte_start":5584,"column_end":94,"column_start":78,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":120,"line_start":120,"suggested_replacement":"\"-\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":94,"highlight_start":78,"text":"                            &(item[\"flag\"].as_usize().unwrap().to_string() + &\"-\".to_string())"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":5600,"byte_start":5584,"column_end":94,"column_start":78,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":120,"line_start":120,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":94,"highlight_start":78,"text":"                            &(item[\"flag\"].as_usize().unwrap().to_string() + &\"-\".to_string())"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/indel.rs:146:81\n    |\n146 | ...                   &(item[\"refallele\"].as_str().unwrap().to_string() + &\"-\".to_string())\n    |                                                                           ^^^^^^^^^^^^^^^^ help: use: `\"-\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":7270,"byte_start":7254,"column_end":97,"column_start":81,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":146,"line_start":146,"suggested_replacement":"\"-\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":97,"highlight_start":81,"text":"                            &(item[\"refallele\"].as_str().unwrap().to_string() + &\"-\".to_string())"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":7270,"byte_start":7254,"column_end":97,"column_start":81,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":146,"line_start":146,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":97,"highlight_start":81,"text":"                            &(item[\"refallele\"].as_str().unwrap().to_string() + &\"-\".to_string())"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/indel.rs:150:81\n    |\n150 | ...                   &(item[\"altallele\"].as_str().unwrap().to_string() + &\"-\".to_string())\n    |                                                                           ^^^^^^^^^^^^^^^^ help: use: `\"-\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":7486,"byte_start":7470,"column_end":97,"column_start":81,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":150,"line_start":150,"suggested_replacement":"\"-\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":97,"highlight_start":81,"text":"                            &(item[\"altallele\"].as_str().unwrap().to_string() + &\"-\".to_string())"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":7486,"byte_start":7470,"column_end":97,"column_start":81,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":150,"line_start":150,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":97,"highlight_start":81,"text":"                            &(item[\"altallele\"].as_str().unwrap().to_string() + &\"-\".to_string())"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/indel.rs:154:78\n    |\n154 | ...                   &(item[\"refseq\"].as_str().unwrap().to_string() + &\"-\".to_string())\n    |                                                                        ^^^^^^^^^^^^^^^^ help: use: `\"-\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":7696,"byte_start":7680,"column_end":94,"column_start":78,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":154,"line_start":154,"suggested_replacement":"\"-\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":94,"highlight_start":78,"text":"                            &(item[\"refseq\"].as_str().unwrap().to_string() + &\"-\".to_string())"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":7696,"byte_start":7680,"column_end":94,"column_start":78,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":154,"line_start":154,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":94,"highlight_start":78,"text":"                            &(item[\"refseq\"].as_str().unwrap().to_string() + &\"-\".to_string())"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/indel.rs:158:78\n    |\n158 | ...                   &(item[\"altseq\"].as_str().unwrap().to_string() + &\"-\".to_string())\n    |                                                                        ^^^^^^^^^^^^^^^^ help: use: `\"-\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":7906,"byte_start":7890,"column_end":94,"column_start":78,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":158,"line_start":158,"suggested_replacement":"\"-\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":94,"highlight_start":78,"text":"                            &(item[\"altseq\"].as_str().unwrap().to_string() + &\"-\".to_string())"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":7906,"byte_start":7890,"column_end":94,"column_start":78,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":158,"line_start":158,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":94,"highlight_start":78,"text":"                            &(item[\"altseq\"].as_str().unwrap().to_string() + &\"-\".to_string())"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/indel.rs:163:35\n    |\n163 | ...                   + &\"-\".to_string())\n    |                         ^^^^^^^^^^^^^^^^ help: use: `\"-\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":8160,"byte_start":8144,"column_end":51,"column_start":35,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":163,"line_start":163,"suggested_replacement":"\"-\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":35,"text":"                                + &\"-\".to_string())"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":8160,"byte_start":8144,"column_end":51,"column_start":35,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":163,"line_start":163,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":35,"text":"                                + &\"-\".to_string())"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/indel.rs:168:35\n    |\n168 | ...                   + &\"-\".to_string())\n    |                         ^^^^^^^^^^^^^^^^ help: use: `\"-\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":8416,"byte_start":8400,"column_end":51,"column_start":35,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":168,"line_start":168,"suggested_replacement":"\"-\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":35,"text":"                                + &\"-\".to_string())"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":8416,"byte_start":8400,"column_end":51,"column_start":35,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":168,"line_start":168,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":35,"text":"                                + &\"-\".to_string())"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/indel.rs:173:35\n    |\n173 | ...                   + &\"-\".to_string())\n    |                         ^^^^^^^^^^^^^^^^ help: use: `\"-\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":8676,"byte_start":8660,"column_end":51,"column_start":35,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":173,"line_start":173,"suggested_replacement":"\"-\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":51,"highlight_start":35,"text":"                                + &\"-\".to_string())"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":8676,"byte_start":8660,"column_end":51,"column_start":35,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":173,"line_start":173,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":35,"text":"                                + &\"-\".to_string())"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/indel.rs:212:51\n    |\n212 |                         alt_allele_names.push_str(&\"-\".to_string());\n    |                                                   ^^^^^^^^^^^^^^^^ help: use: `\"-\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":11455,"byte_start":11439,"column_end":67,"column_start":51,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":212,"line_start":212,"suggested_replacement":"\"-\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":67,"highlight_start":51,"text":"                        alt_allele_names.push_str(&\"-\".to_string());"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":11455,"byte_start":11439,"column_end":67,"column_start":51,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":212,"line_start":212,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":67,"highlight_start":51,"text":"                        alt_allele_names.push_str(&\"-\".to_string());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/indel.rs:275:48\n    |\n275 |                         indel_lengths.push_str(&\"-\".to_string());\n    |                                                ^^^^^^^^^^^^^^^^ help: use: `\"-\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":15394,"byte_start":15378,"column_end":64,"column_start":48,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":275,"line_start":275,"suggested_replacement":"\"-\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":64,"highlight_start":48,"text":"                        indel_lengths.push_str(&\"-\".to_string());"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":15394,"byte_start":15378,"column_end":64,"column_start":48,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":275,"line_start":275,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":64,"highlight_start":48,"text":"                        indel_lengths.push_str(&\"-\".to_string());"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the variable `i` is used as a loop counter\n   --> src/indel.rs:314:25\n    |\n314 |                         for read in sequences_list {\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `for (i, read) in (0_i64..).zip(sequences_list.into_iter())`\n    |\n    = note: `i` is of type `i64`, making it ineligible for `Iterator::enumerate`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_counter_loop\n    = note: `#[warn(clippy::explicit_counter_loop)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"`i` is of type `i64`, making it ineligible for `Iterator::enumerate`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_counter_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::explicit_counter_loop)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using","rendered":null,"spans":[{"byte_end":18003,"byte_start":17977,"column_end":51,"column_start":25,"expansion":{"def_site_span":{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/indel.rs","is_primary":false,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},"macro_decl_name":"desugaring of `for` loop","span":{"byte_end":49165,"byte_start":17977,"column_end":26,"column_start":25,"expansion":null,"file_name":"src/indel.rs","is_primary":false,"label":null,"line_end":771,"line_start":314,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":53,"highlight_start":25,"text":"                        for read in sequences_list {"},{"highlight_end":170,"highlight_start":1,"text":"                            // The first two sequences are reference and alternate allele and therefore skipped. Also checking there are no blank lines in the input file"},{"highlight_end":34,"highlight_start":1,"text":"                            let ("},{"highlight_end":46,"highlight_start":1,"text":"                                within_indel,"},{"highlight_end":57,"highlight_start":1,"text":"                                correct_start_positions,"},{"highlight_end":55,"highlight_start":1,"text":"                                correct_end_positions,"},{"highlight_end":49,"highlight_start":1,"text":"                                alignment_sides,"},{"highlight_end":51,"highlight_start":1,"text":"                                spliced_sequences,"},{"highlight_end":73,"highlight_start":1,"text":"                            ) = realign::check_read_within_indel_region("},{"highlight_end":98,"highlight_start":1,"text":"                                // Checks if the read contains the indel region (or a part of it)"},{"highlight_end":94,"highlight_start":1,"text":"                                start_positions_list[i as usize].parse::<i64>().unwrap() - 1,"},{"highlight_end":78,"highlight_start":1,"text":"                                cigar_sequences_list[i as usize].to_string(),"},{"highlight_end":57,"highlight_start":1,"text":"                                &variant_positions_list,"},{"highlight_end":53,"highlight_start":1,"text":"                                &indel_lengths_list,"},{"highlight_end":50,"highlight_start":1,"text":"                                &refalleles_list,"},{"highlight_end":50,"highlight_start":1,"text":"                                &altalleles_list,"},{"highlight_end":44,"highlight_start":1,"text":"                                strictness,"},{"highlight_end":50,"highlight_start":1,"text":"                                read.to_string(),"},{"highlight_end":31,"highlight_start":1,"text":"                            );"},{"highlight_end":97,"highlight_start":1,"text":"                            //println!(\"correct_start_positions:{:?}\", correct_start_positions);"},{"highlight_end":93,"highlight_start":1,"text":"                            //println!(\"correct_end_positions:{:?}\", correct_end_positions);"},{"highlight_end":40,"highlight_start":1,"text":"                            //println!("},{"highlight_end":55,"highlight_start":1,"text":"                            //    \"cigar_sequence:{}\","},{"highlight_end":80,"highlight_start":1,"text":"                            //    &cigar_sequences_list[i as usize].to_string()"},{"highlight_end":33,"highlight_start":1,"text":"                            //);"},{"highlight_end":73,"highlight_start":1,"text":"                            //println!(\"within_indel:{}\", within_indel);"},{"highlight_end":51,"highlight_start":1,"text":"                            if within_indel == 1 {"},{"highlight_end":88,"highlight_start":1,"text":"                                // Checking if the read is in forward or reverse strand"},{"highlight_end":126,"highlight_start":1,"text":"                                let mut sequence_strand: String = \"F\".to_string(); // Initializing sequence strand to forward"},{"highlight_end":96,"highlight_start":1,"text":"                                if sequence_flags_list[i as usize].parse::<i64>().unwrap() & 16"},{"highlight_end":42,"highlight_start":1,"text":"                                    == 16"},{"highlight_end":34,"highlight_start":1,"text":"                                {"},{"highlight_end":71,"highlight_start":1,"text":"                                    sequence_strand = \"R\".to_string();"},{"highlight_end":34,"highlight_start":1,"text":"                                }"},{"highlight_end":84,"highlight_start":1,"text":"                                //let mut read_ambiguous = check_if_read_ambiguous("},{"highlight_end":173,"highlight_start":1,"text":"                                //    // Function that checks if the start/end of a read is in a region such that it cannot be distinguished as supporting ref or alt allele"},{"highlight_end":62,"highlight_start":1,"text":"                                //    correct_start_position,"},{"highlight_end":60,"highlight_start":1,"text":"                                //    correct_end_position,"},{"highlight_end":51,"highlight_start":1,"text":"                                //    left_offset,"},{"highlight_end":52,"highlight_start":1,"text":"                                //    right_offset,"},{"highlight_end":51,"highlight_start":1,"text":"                                //    variant_pos,"},{"highlight_end":55,"highlight_start":1,"text":"                                //    refallele.len(),"},{"highlight_end":56,"highlight_start":1,"text":"                                //    &ref_nucleotides,"},{"highlight_end":56,"highlight_start":1,"text":"                                //    &alt_nucleotides,"},{"highlight_end":56,"highlight_start":1,"text":"                                //    optimized_allele,"},{"highlight_end":37,"highlight_start":1,"text":"                                //);"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":81,"highlight_start":1,"text":"                                //println!(\"read_ambiguous:{}\", read_ambiguous);"},{"highlight_end":79,"highlight_start":1,"text":"                                //println!(\"ref_insertion:{}\", ref_insertion);"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":88,"highlight_start":1,"text":"                                let mut alt_comparisons = Vec::<ReadComparison>::new();"},{"highlight_end":88,"highlight_start":1,"text":"                                let mut ref_comparisons = Vec::<ReadComparison>::new();"},{"highlight_end":74,"highlight_start":1,"text":"                                let mut indel_nones = Vec::<bool>::new();"},{"highlight_end":84,"highlight_start":1,"text":"                                let mut ref_polyclonal_read_status_global: i64 = 0;"},{"highlight_end":84,"highlight_start":1,"text":"                                let mut alt_polyclonal_read_status_global: i64 = 1;"},{"highlight_end":90,"highlight_start":1,"text":"                                let mut ref_polyclonal_read_statuses = Vec::<i64>::new();"},{"highlight_end":90,"highlight_start":1,"text":"                                let mut alt_polyclonal_read_statuses = Vec::<i64>::new();"},{"highlight_end":83,"highlight_start":1,"text":"                                for indel_idx in 0..variant_positions_list.len() {"},{"highlight_end":90,"highlight_start":1,"text":"                                    let spliced_sequence = &spliced_sequences[indel_idx];"},{"highlight_end":86,"highlight_start":1,"text":"                                    let reference_sequence = refseqs_list[indel_idx];"},{"highlight_end":86,"highlight_start":1,"text":"                                    let alternate_sequence = altseqs_list[indel_idx];"},{"highlight_end":92,"highlight_start":1,"text":"                                    let (q_seq_ref, align_ref, r_seq_ref, ref_comparison) ="},{"highlight_end":69,"highlight_start":1,"text":"                                        realign::align_single_reads("},{"highlight_end":63,"highlight_start":1,"text":"                                            &spliced_sequence,"},{"highlight_end":76,"highlight_start":1,"text":"                                            reference_sequence.to_string(),"},{"highlight_end":43,"highlight_start":1,"text":"                                        );"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":92,"highlight_start":1,"text":"                                    let (q_seq_alt, align_alt, r_seq_alt, alt_comparison) ="},{"highlight_end":69,"highlight_start":1,"text":"                                        realign::align_single_reads("},{"highlight_end":63,"highlight_start":1,"text":"                                            &spliced_sequence,"},{"highlight_end":76,"highlight_start":1,"text":"                                            alternate_sequence.to_string(),"},{"highlight_end":43,"highlight_start":1,"text":"                                        );"},{"highlight_end":74,"highlight_start":1,"text":"                                    alt_comparisons.push(ReadComparison {"},{"highlight_end":68,"highlight_start":1,"text":"                                        comparison: alt_comparison,"},{"highlight_end":58,"highlight_start":1,"text":"                                        index: indel_idx,"},{"highlight_end":40,"highlight_start":1,"text":"                                    });"},{"highlight_end":74,"highlight_start":1,"text":"                                    ref_comparisons.push(ReadComparison {"},{"highlight_end":68,"highlight_start":1,"text":"                                        comparison: ref_comparison,"},{"highlight_end":58,"highlight_start":1,"text":"                                        index: indel_idx,"},{"highlight_end":40,"highlight_start":1,"text":"                                    });"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":75,"highlight_start":1,"text":"                                    //println!(\"indel_idx:{}\", indel_idx);"},{"highlight_end":93,"highlight_start":1,"text":"                                    //println!(\"alt allele:{}\", altalleles_list[indel_idx]);"},{"highlight_end":85,"highlight_start":1,"text":"                                    //println!(\"ref_comparison:{}\", ref_comparison);"},{"highlight_end":85,"highlight_start":1,"text":"                                    //println!(\"alt_comparison:{}\", alt_comparison);"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":98,"highlight_start":1,"text":"                                    let (ref_polyclonal_read_status, alt_polyclonal_read_status);"},{"highlight_end":57,"highlight_start":1,"text":"                                    if strictness == 0 {"},{"highlight_end":72,"highlight_start":1,"text":"                                        ref_polyclonal_read_status = 0;"},{"highlight_end":72,"highlight_start":1,"text":"                                        alt_polyclonal_read_status = 0;"},{"highlight_end":45,"highlight_start":1,"text":"                                    } else {"},{"highlight_end":46,"highlight_start":1,"text":"                                        let ("},{"highlight_end":77,"highlight_start":1,"text":"                                            ref_polyclonal_read_status_temp,"},{"highlight_end":77,"highlight_start":1,"text":"                                            alt_polyclonal_read_status_temp,"},{"highlight_end":82,"highlight_start":1,"text":"                                        ) = check_polyclonal_with_read_alignment("},{"highlight_end":73,"highlight_start":1,"text":"                                            &alignment_sides[indel_idx],"},{"highlight_end":56,"highlight_start":1,"text":"                                            &q_seq_alt,"},{"highlight_end":56,"highlight_start":1,"text":"                                            &q_seq_ref,"},{"highlight_end":56,"highlight_start":1,"text":"                                            &r_seq_alt,"},{"highlight_end":56,"highlight_start":1,"text":"                                            &r_seq_ref,"},{"highlight_end":56,"highlight_start":1,"text":"                                            &align_alt,"},{"highlight_end":56,"highlight_start":1,"text":"                                            &align_ref,"},{"highlight_end":80,"highlight_start":1,"text":"                                            correct_start_positions[indel_idx],"},{"highlight_end":78,"highlight_start":1,"text":"                                            correct_end_positions[indel_idx],"},{"highlight_end":79,"highlight_start":1,"text":"                                            variant_positions_list[indel_idx],"},{"highlight_end":78,"highlight_start":1,"text":"                                            refalleles_list[indel_idx].len(),"},{"highlight_end":78,"highlight_start":1,"text":"                                            altalleles_list[indel_idx].len(),"},{"highlight_end":75,"highlight_start":1,"text":"                                            indel_lengths_list[indel_idx],"},{"highlight_end":74,"highlight_start":1,"text":"                                            variant_positions_list.len(),"},{"highlight_end":43,"highlight_start":1,"text":"                                        );"},{"highlight_end":69,"highlight_start":1,"text":"                                        ref_polyclonal_read_status ="},{"highlight_end":77,"highlight_start":1,"text":"                                            ref_polyclonal_read_status_temp;"},{"highlight_end":69,"highlight_start":1,"text":"                                        alt_polyclonal_read_status ="},{"highlight_end":77,"highlight_start":1,"text":"                                            alt_polyclonal_read_status_temp;"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":73,"highlight_start":1,"text":"                                    if ref_polyclonal_read_status == 1 {"},{"highlight_end":79,"highlight_start":1,"text":"                                        ref_polyclonal_read_status_global = 1;"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":73,"highlight_start":1,"text":"                                    if alt_polyclonal_read_status == 0 {"},{"highlight_end":79,"highlight_start":1,"text":"                                        alt_polyclonal_read_status_global = 0;"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":70,"highlight_start":1,"text":"                                    let mut indel_none: bool = false;"},{"highlight_end":71,"highlight_start":1,"text":"                                    if ref_polyclonal_read_status == 1"},{"highlight_end":75,"highlight_start":1,"text":"                                        && alt_polyclonal_read_status == 1"},{"highlight_end":38,"highlight_start":1,"text":"                                    {"},{"highlight_end":59,"highlight_start":1,"text":"                                        indel_none = true;"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":77,"highlight_start":1,"text":"                                    //println!(\"indel_none:{}\", indel_none);"},{"highlight_end":66,"highlight_start":1,"text":"                                    indel_nones.push(indel_none);"},{"highlight_end":48,"highlight_start":1,"text":"                                    //println!("},{"highlight_end":75,"highlight_start":1,"text":"                                    //    \"ref_polyclonal_read_status:{}\","},{"highlight_end":69,"highlight_start":1,"text":"                                    //    ref_polyclonal_read_status"},{"highlight_end":41,"highlight_start":1,"text":"                                    //);"},{"highlight_end":48,"highlight_start":1,"text":"                                    //println!("},{"highlight_end":75,"highlight_start":1,"text":"                                    //    \"alt_polyclonal_read_status:{}\","},{"highlight_end":69,"highlight_start":1,"text":"                                    //    alt_polyclonal_read_status"},{"highlight_end":41,"highlight_start":1,"text":"                                    //);"},{"highlight_end":99,"highlight_start":1,"text":"                                    ref_polyclonal_read_statuses.push(ref_polyclonal_read_status);"},{"highlight_end":99,"highlight_start":1,"text":"                                    alt_polyclonal_read_statuses.push(alt_polyclonal_read_status);"},{"highlight_end":34,"highlight_start":1,"text":"                                }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":109,"highlight_start":1,"text":"                                // Sorting in ascending order so as to check if the read is ambiguous or not"},{"highlight_end":80,"highlight_start":1,"text":"                                alt_comparisons.as_mut_slice().sort_by(|a, b| {"},{"highlight_end":51,"highlight_start":1,"text":"                                    (a.comparison)"},{"highlight_end":68,"highlight_start":1,"text":"                                        .partial_cmp(&b.comparison)"},{"highlight_end":68,"highlight_start":1,"text":"                                        .unwrap_or(Ordering::Equal)"},{"highlight_end":36,"highlight_start":1,"text":"                                });"},{"highlight_end":80,"highlight_start":1,"text":"                                ref_comparisons.as_mut_slice().sort_by(|a, b| {"},{"highlight_end":51,"highlight_start":1,"text":"                                    (a.comparison)"},{"highlight_end":68,"highlight_start":1,"text":"                                        .partial_cmp(&b.comparison)"},{"highlight_end":68,"highlight_start":1,"text":"                                        .unwrap_or(Ordering::Equal)"},{"highlight_end":36,"highlight_start":1,"text":"                                });"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":55,"highlight_start":1,"text":"                                let mut max_index = 0;"},{"highlight_end":68,"highlight_start":1,"text":"                                let mut refalt = \"ref\".to_string();"},{"highlight_end":70,"highlight_start":1,"text":"                                let mut max_alignment_ref: f64 = 0.0;"},{"highlight_end":66,"highlight_start":1,"text":"                                let mut max_index_ref: usize = 0;"},{"highlight_end":80,"highlight_start":1,"text":"                                for alignment_idx in 0..ref_comparisons.len() {"},{"highlight_end":101,"highlight_start":1,"text":"                                    if ref_comparisons[alignment_idx].comparison > max_alignment_ref"},{"highlight_end":38,"highlight_start":1,"text":"                                    {"},{"highlight_end":60,"highlight_start":1,"text":"                                        max_alignment_ref ="},{"highlight_end":87,"highlight_start":1,"text":"                                            ref_comparisons[alignment_idx].comparison;"},{"highlight_end":94,"highlight_start":1,"text":"                                        max_index_ref = ref_comparisons[alignment_idx].index;"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":34,"highlight_start":1,"text":"                                }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":60,"highlight_start":1,"text":"                                let mut read_ambiguous = 0;"},{"highlight_end":87,"highlight_start":1,"text":"                                let mut equal_alignment_indices = Vec::<usize>::new();"},{"highlight_end":70,"highlight_start":1,"text":"                                let mut max_alignment_alt: f64 = 0.0;"},{"highlight_end":66,"highlight_start":1,"text":"                                let mut max_index_alt: usize = 0;"},{"highlight_end":80,"highlight_start":1,"text":"                                for alignment_idx in 0..alt_comparisons.len() {"},{"highlight_end":83,"highlight_start":1,"text":"                                    //println!(\"max_index_alt:{}\", max_index_alt);"},{"highlight_end":48,"highlight_start":1,"text":"                                    //println!("},{"highlight_end":75,"highlight_start":1,"text":"                                    //    \"indel_nones[alignment_idx]:{}\","},{"highlight_end":69,"highlight_start":1,"text":"                                    //    indel_nones[alignment_idx]"},{"highlight_end":41,"highlight_start":1,"text":"                                    //);"},{"highlight_end":83,"highlight_start":1,"text":"                                    //println!(\"alignment_idx:{}\", alignment_idx);"},{"highlight_end":48,"highlight_start":1,"text":"                                    //println!("},{"highlight_end":82,"highlight_start":1,"text":"                                    //    \"ref_polyclonal_read_status_global:{}\","},{"highlight_end":76,"highlight_start":1,"text":"                                    //    ref_polyclonal_read_status_global"},{"highlight_end":41,"highlight_start":1,"text":"                                    //);"},{"highlight_end":48,"highlight_start":1,"text":"                                    //println!("},{"highlight_end":82,"highlight_start":1,"text":"                                    //    \"alt_polyclonal_read_status_global:{}\","},{"highlight_end":76,"highlight_start":1,"text":"                                    //    alt_polyclonal_read_status_global"},{"highlight_end":41,"highlight_start":1,"text":"                                    //);"},{"highlight_end":101,"highlight_start":1,"text":"                                    if alt_comparisons[alignment_idx].comparison > max_alignment_alt"},{"highlight_end":93,"highlight_start":1,"text":"                                        && indel_nones[alt_comparisons[alignment_idx].index]"},{"highlight_end":53,"highlight_start":1,"text":"                                            == false"},{"highlight_end":72,"highlight_start":1,"text":"                                        && alt_polyclonal_read_statuses"},{"highlight_end":83,"highlight_start":1,"text":"                                            [alt_comparisons[alignment_idx].index]"},{"highlight_end":49,"highlight_start":1,"text":"                                            != 1"},{"highlight_end":38,"highlight_start":1,"text":"                                    {"},{"highlight_end":60,"highlight_start":1,"text":"                                        max_alignment_alt ="},{"highlight_end":87,"highlight_start":1,"text":"                                            alt_comparisons[alignment_idx].comparison;"},{"highlight_end":94,"highlight_start":1,"text":"                                        max_index_alt = alt_comparisons[alignment_idx].index;"},{"highlight_end":85,"highlight_start":1,"text":"                                    } else if ref_polyclonal_read_status_global != 1"},{"highlight_end":82,"highlight_start":1,"text":"                                        || alt_polyclonal_read_status_global != 1"},{"highlight_end":122,"highlight_start":1,"text":"                                    // If the read is going to be classified as none, no need to check if it is ambiguous"},{"highlight_end":38,"highlight_start":1,"text":"                                    {"},{"highlight_end":64,"highlight_start":1,"text":"                                        if alignment_idx == 0 {"},{"highlight_end":49,"highlight_start":1,"text":"                                        } else {"},{"highlight_end":97,"highlight_start":1,"text":"                                            //println!(\"alt_comparisons:{:?}\", alt_comparisons);"},{"highlight_end":88,"highlight_start":1,"text":"                                            for sub_alignment_idx in 0..alignment_idx {"},{"highlight_end":86,"highlight_start":1,"text":"                                                let alt_comparison1 = alt_comparisons"},{"highlight_end":60,"highlight_start":1,"text":"                                                    .iter()"},{"highlight_end":93,"highlight_start":1,"text":"                                                    .find(|x| x.index == sub_alignment_idx);"},{"highlight_end":86,"highlight_start":1,"text":"                                                let alt_comparison2 = alt_comparisons"},{"highlight_end":60,"highlight_start":1,"text":"                                                    .iter()"},{"highlight_end":89,"highlight_start":1,"text":"                                                    .find(|x| x.index == alignment_idx);"},{"highlight_end":87,"highlight_start":1,"text":"                                                if alt_comparison1.unwrap().comparison"},{"highlight_end":91,"highlight_start":1,"text":"                                                    == alt_comparison2.unwrap().comparison"},{"highlight_end":50,"highlight_start":1,"text":"                                                {"},{"highlight_end":101,"highlight_start":1,"text":"                                                    equal_alignment_indices.push(sub_alignment_idx);"},{"highlight_end":97,"highlight_start":1,"text":"                                                    equal_alignment_indices.push(alignment_idx);"},{"highlight_end":64,"highlight_start":1,"text":"                                                    //println!("},{"highlight_end":82,"highlight_start":1,"text":"                                                    //    \"sub_alignment_idx:{}\","},{"highlight_end":76,"highlight_start":1,"text":"                                                    //    sub_alignment_idx"},{"highlight_end":57,"highlight_start":1,"text":"                                                    //);"},{"highlight_end":99,"highlight_start":1,"text":"                                                    //println!(\"alignment_idx:{}\", alignment_idx);"},{"highlight_end":72,"highlight_start":1,"text":"                                                    read_ambiguous = 1;"},{"highlight_end":72,"highlight_start":1,"text":"                                                    max_alignment_alt ="},{"highlight_end":93,"highlight_start":1,"text":"                                                        alt_comparison1.unwrap().comparison;"},{"highlight_end":68,"highlight_start":1,"text":"                                                    max_index_alt ="},{"highlight_end":94,"highlight_start":1,"text":"                                                        alt_comparisons[alignment_idx].index;"},{"highlight_end":50,"highlight_start":1,"text":"                                                }"},{"highlight_end":46,"highlight_start":1,"text":"                                            }"},{"highlight_end":42,"highlight_start":1,"text":"                                        }"},{"highlight_end":75,"highlight_start":1,"text":"                                    } else if alt_polyclonal_read_statuses"},{"highlight_end":79,"highlight_start":1,"text":"                                        [alt_comparisons[alignment_idx].index]"},{"highlight_end":45,"highlight_start":1,"text":"                                        == 1"},{"highlight_end":72,"highlight_start":1,"text":"                                        && ref_polyclonal_read_statuses"},{"highlight_end":83,"highlight_start":1,"text":"                                            [ref_comparisons[alignment_idx].index]"},{"highlight_end":49,"highlight_start":1,"text":"                                            == 0"},{"highlight_end":250,"highlight_start":1,"text":"                                    // This logic is kind of side stepping the smith-watermann alignment and classifying on the basis of nucleotide-by-nucleotide comparison (not sure if this will work in all cases or any other possible side effects)"},{"highlight_end":38,"highlight_start":1,"text":"                                    {"},{"highlight_end":60,"highlight_start":1,"text":"                                        max_alignment_ref ="},{"highlight_end":87,"highlight_start":1,"text":"                                            ref_comparisons[alignment_idx].comparison;"},{"highlight_end":94,"highlight_start":1,"text":"                                        max_index_ref = ref_comparisons[alignment_idx].index;"},{"highlight_end":88,"highlight_start":1,"text":"                                    } else if alt_comparisons[alignment_idx].comparison"},{"highlight_end":60,"highlight_start":1,"text":"                                        > max_alignment_alt"},{"highlight_end":80,"highlight_start":1,"text":"                                    // Should this logic be placed at the top ?"},{"highlight_end":38,"highlight_start":1,"text":"                                    {"},{"highlight_end":60,"highlight_start":1,"text":"                                        max_alignment_alt ="},{"highlight_end":87,"highlight_start":1,"text":"                                            alt_comparisons[alignment_idx].comparison;"},{"highlight_end":94,"highlight_start":1,"text":"                                        max_index_alt = alt_comparisons[alignment_idx].index;"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":34,"highlight_start":1,"text":"                                }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":87,"highlight_start":1,"text":"                                //println!(\"max_alignment_alt:{}\", max_alignment_alt);"},{"highlight_end":87,"highlight_start":1,"text":"                                //println!(\"max_alignment_ref:{}\", max_alignment_ref);"},{"highlight_end":170,"highlight_start":1,"text":"                                let mut ref_is_ambiguous = false; // Flag which is true/false when ref allele is one of the reads that is ambiguous for a particular read"},{"highlight_end":75,"highlight_start":1,"text":"                                if max_alignment_alt > max_alignment_ref {"},{"highlight_end":73,"highlight_start":1,"text":"                                    //max_alignment = max_alignment_alt;"},{"highlight_end":63,"highlight_start":1,"text":"                                    max_index = max_index_alt;"},{"highlight_end":64,"highlight_start":1,"text":"                                    refalt = \"alt\".to_string();"},{"highlight_end":82,"highlight_start":1,"text":"                                } else if max_alignment_alt < max_alignment_ref {"},{"highlight_end":73,"highlight_start":1,"text":"                                    //max_alignment = max_alignment_ref;"},{"highlight_end":63,"highlight_start":1,"text":"                                    max_index = max_index_ref;"},{"highlight_end":64,"highlight_start":1,"text":"                                    refalt = \"ref\".to_string();"},{"highlight_end":83,"highlight_start":1,"text":"                                } else if max_alignment_alt == max_alignment_ref {"},{"highlight_end":73,"highlight_start":1,"text":"                                    //max_alignment = max_alignment_ref;"},{"highlight_end":48,"highlight_start":1,"text":"                                    //println!("},{"highlight_end":102,"highlight_start":1,"text":"                                    //    \"Ambiguous case between one of the alt alleles and the ref\""},{"highlight_end":41,"highlight_start":1,"text":"                                    //);"},{"highlight_end":56,"highlight_start":1,"text":"                                    read_ambiguous = 1;"},{"highlight_end":103,"highlight_start":1,"text":"                                    //if equal_alignment_indices.iter().any(|&i| i == max_index_alt) {"},{"highlight_end":47,"highlight_start":1,"text":"                                    //} else {"},{"highlight_end":87,"highlight_start":1,"text":"                                    //    equal_alignment_indices.push(max_index_alt);"},{"highlight_end":67,"highlight_start":1,"text":"                                    //    ref_is_ambiguous = true;"},{"highlight_end":40,"highlight_start":1,"text":"                                    //}"},{"highlight_end":81,"highlight_start":1,"text":"                                    equal_alignment_indices.push(max_index_alt);"},{"highlight_end":61,"highlight_start":1,"text":"                                    ref_is_ambiguous = true;"},{"highlight_end":34,"highlight_start":1,"text":"                                }"},{"highlight_end":64,"highlight_start":1,"text":"                                equal_alignment_indices.sort();"},{"highlight_end":65,"highlight_start":1,"text":"                                equal_alignment_indices.dedup();"},{"highlight_end":101,"highlight_start":1,"text":"                                //println!(\"equal_alignment_indices:{:?}\", equal_alignment_indices);"},{"highlight_end":112,"highlight_start":1,"text":"                                // Check if the read does not support any of the reference or alternate alleles"},{"highlight_end":76,"highlight_start":1,"text":"                                if ((ref_polyclonal_read_status_global == 1"},{"highlight_end":79,"highlight_start":1,"text":"                                    && alt_polyclonal_read_status_global == 1)"},{"highlight_end":79,"highlight_start":1,"text":"                                    || (ref_polyclonal_read_status_global == 1"},{"highlight_end":82,"highlight_start":1,"text":"                                        && alt_polyclonal_read_status_global == 0"},{"highlight_end":291,"highlight_start":1,"text":"                                        && refalt == \"ref\".to_string())) // The 2nd condition is experimental and was observed in case of deletion in repeat region. Somehow alt_polyclonal_read_status_global was 0 so it got classifed into ref allele although it does not support ref allele. "},{"highlight_end":55,"highlight_start":1,"text":"                                    && strictness == 1"},{"highlight_end":34,"highlight_start":1,"text":"                                {"},{"highlight_end":60,"highlight_start":1,"text":"                                    // Setting read to none"},{"highlight_end":90,"highlight_start":1,"text":"                                    //if !all_alleles.contains_key(&\"none\".to_string()) {"},{"highlight_end":94,"highlight_start":1,"text":"                                    //    all_alleles.insert(\"none\".to_string(), Vec::new());"},{"highlight_end":40,"highlight_start":1,"text":"                                    //}"},{"highlight_end":50,"highlight_start":1,"text":"                                    //all_alleles"},{"highlight_end":72,"highlight_start":1,"text":"                                    //    .get_mut(&\"none\".to_string())"},{"highlight_end":52,"highlight_start":1,"text":"                                    //    .unwrap()"},{"highlight_end":61,"highlight_start":1,"text":"                                    //    .push(i as usize);"},{"highlight_end":84,"highlight_start":1,"text":"                                    //if all_alleles[\"none\"] == other_json!(null) {"},{"highlight_end":86,"highlight_start":1,"text":"                                    //    all_alleles[\"none\"] = other_json!(vec![i]);"},{"highlight_end":47,"highlight_start":1,"text":"                                    //} else {"},{"highlight_end":62,"highlight_start":1,"text":"                                    //    all_alleles[\"none\"]"},{"highlight_end":62,"highlight_start":1,"text":"                                    //        .as_array_mut()"},{"highlight_end":56,"highlight_start":1,"text":"                                    //        .unwrap()"},{"highlight_end":69,"highlight_start":1,"text":"                                    //        .push(other_json!(i));"},{"highlight_end":40,"highlight_start":1,"text":"                                    //}"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":245,"highlight_start":1,"text":"                                    let mut none_groups_for_each_read = Vec::<String>::new(); // When a read is assigned to none group, the first entry in the vector is \"none\", followed by the group with which it has maximum sequence similarity"},{"highlight_end":88,"highlight_start":1,"text":"                                    none_groups_for_each_read.push(\"none\".to_string());"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":69,"highlight_start":1,"text":"                                    if refalt == \"ref\".to_string() {"},{"highlight_end":90,"highlight_start":1,"text":"                                        none_groups_for_each_read.push(\"ref\".to_string())"},{"highlight_end":76,"highlight_start":1,"text":"                                    } else if refalt == \"alt\".to_string() {"},{"highlight_end":62,"highlight_start":1,"text":"                                        let alt_allele_name ="},{"highlight_end":90,"highlight_start":1,"text":"                                            alt_allele_names_list[max_index].to_string();"},{"highlight_end":89,"highlight_start":1,"text":"                                        none_groups_for_each_read.push(alt_allele_name);"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":67,"highlight_start":1,"text":"                                    //all_alleles[i.to_string()] ="},{"highlight_end":82,"highlight_start":1,"text":"                                    //    other_json!(none_groups_for_each_read);"},{"highlight_end":76,"highlight_start":1,"text":"                                    //all_alleles.push(ReadClassification {"},{"highlight_end":67,"highlight_start":1,"text":"                                    //    read_number: i as usize,"},{"highlight_end":81,"highlight_start":1,"text":"                                    //    categories: none_groups_for_each_read,"},{"highlight_end":42,"highlight_start":1,"text":"                                    //});"},{"highlight_end":82,"highlight_start":1,"text":"                                    //output_string += &json::stringify(object! {"},{"highlight_end":67,"highlight_start":1,"text":"                                    //    read_number: i as usize,"},{"highlight_end":81,"highlight_start":1,"text":"                                    //    categories: none_groups_for_each_read,"},{"highlight_end":42,"highlight_start":1,"text":"                                    //});"},{"highlight_end":98,"highlight_start":1,"text":"                                    output_string += &serde_json::to_string(&ReadClassification {"},{"highlight_end":65,"highlight_start":1,"text":"                                        read_number: i as usize,"},{"highlight_end":79,"highlight_start":1,"text":"                                        categories: none_groups_for_each_read,"},{"highlight_end":39,"highlight_start":1,"text":"                                    })"},{"highlight_end":47,"highlight_start":1,"text":"                                    .unwrap();"},{"highlight_end":71,"highlight_start":1,"text":"                                    output_string += &\",\".to_string();"},{"highlight_end":64,"highlight_start":1,"text":"                                } else if read_ambiguous == 1 {"},{"highlight_end":65,"highlight_start":1,"text":"                                    // Setting read to ambiguous"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":89,"highlight_start":1,"text":"                                    //if !all_alleles.contains_key(&\"amb\".to_string()) {"},{"highlight_end":93,"highlight_start":1,"text":"                                    //    all_alleles.insert(\"amb\".to_string(), Vec::new());"},{"highlight_end":40,"highlight_start":1,"text":"                                    //}"},{"highlight_end":50,"highlight_start":1,"text":"                                    //all_alleles"},{"highlight_end":71,"highlight_start":1,"text":"                                    //    .get_mut(&\"amb\".to_string())"},{"highlight_end":52,"highlight_start":1,"text":"                                    //    .unwrap()"},{"highlight_end":61,"highlight_start":1,"text":"                                    //    .push(i as usize);"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":83,"highlight_start":1,"text":"                                    //if all_alleles[\"amb\"] == other_json!(null) {"},{"highlight_end":85,"highlight_start":1,"text":"                                    //    all_alleles[\"amb\"] = other_json!(vec![i]);"},{"highlight_end":47,"highlight_start":1,"text":"                                    //} else {"},{"highlight_end":61,"highlight_start":1,"text":"                                    //    all_alleles[\"amb\"]"},{"highlight_end":62,"highlight_start":1,"text":"                                    //        .as_array_mut()"},{"highlight_end":56,"highlight_start":1,"text":"                                    //        .unwrap()"},{"highlight_end":69,"highlight_start":1,"text":"                                    //        .push(other_json!(i));"},{"highlight_end":40,"highlight_start":1,"text":"                                    //}"},{"highlight_end":278,"highlight_start":1,"text":"                                    let mut ambiguous_groups_for_each_read = Vec::<String>::new(); // When a read is asigned to ambiguous group, the first entry in the vector is \"amb\". Subsequent entries are for each group with which the read has equal sequence similarity with"},{"highlight_end":92,"highlight_start":1,"text":"                                    ambiguous_groups_for_each_read.push(\"amb\".to_string());"},{"highlight_end":95,"highlight_start":1,"text":"                                    for eq_alignment_idx in 0..equal_alignment_indices.len() {"},{"highlight_end":52,"highlight_start":1,"text":"                                        //println!("},{"highlight_end":69,"highlight_start":1,"text":"                                        //    \"eq_alignment_idx:{}\","},{"highlight_end":88,"highlight_start":1,"text":"                                        //    equal_alignment_indices[eq_alignment_idx]"},{"highlight_end":45,"highlight_start":1,"text":"                                        //);"},{"highlight_end":77,"highlight_start":1,"text":"                                        ambiguous_groups_for_each_read.push("},{"highlight_end":66,"highlight_start":1,"text":"                                            alt_allele_names_list"},{"highlight_end":92,"highlight_start":1,"text":"                                                [equal_alignment_indices[eq_alignment_idx]]"},{"highlight_end":62,"highlight_start":1,"text":"                                                .to_string(),"},{"highlight_end":43,"highlight_start":1,"text":"                                        );"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":66,"highlight_start":1,"text":"                                    if ref_is_ambiguous == true {"},{"highlight_end":96,"highlight_start":1,"text":"                                        ambiguous_groups_for_each_read.push(\"ref\".to_string());"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":76,"highlight_start":1,"text":"                                    //all_alleles.push(ReadClassification {"},{"highlight_end":67,"highlight_start":1,"text":"                                    //    read_number: i as usize,"},{"highlight_end":86,"highlight_start":1,"text":"                                    //    categories: ambiguous_groups_for_each_read,"},{"highlight_end":42,"highlight_start":1,"text":"                                    //});"},{"highlight_end":82,"highlight_start":1,"text":"                                    //output_string += &json::stringify(object! {"},{"highlight_end":67,"highlight_start":1,"text":"                                    //    read_number: i as usize,"},{"highlight_end":86,"highlight_start":1,"text":"                                    //    categories: ambiguous_groups_for_each_read,"},{"highlight_end":42,"highlight_start":1,"text":"                                    //});"},{"highlight_end":48,"highlight_start":1,"text":"                                    //println!("},{"highlight_end":81,"highlight_start":1,"text":"                                    //    \"ambiguous_groups_for_each_read:{:?}\","},{"highlight_end":73,"highlight_start":1,"text":"                                    //    ambiguous_groups_for_each_read"},{"highlight_end":41,"highlight_start":1,"text":"                                    //);"},{"highlight_end":98,"highlight_start":1,"text":"                                    output_string += &serde_json::to_string(&ReadClassification {"},{"highlight_end":65,"highlight_start":1,"text":"                                        read_number: i as usize,"},{"highlight_end":84,"highlight_start":1,"text":"                                        categories: ambiguous_groups_for_each_read,"},{"highlight_end":39,"highlight_start":1,"text":"                                    })"},{"highlight_end":47,"highlight_start":1,"text":"                                    .unwrap();"},{"highlight_end":71,"highlight_start":1,"text":"                                    output_string += &\",\".to_string();"},{"highlight_end":72,"highlight_start":1,"text":"                                } else if refalt == \"ref\".to_string() {"},{"highlight_end":76,"highlight_start":1,"text":"                                    //all_alleles.push(ReadClassification {"},{"highlight_end":67,"highlight_start":1,"text":"                                    //    read_number: i as usize,"},{"highlight_end":79,"highlight_start":1,"text":"                                    //    categories: vec![\"ref\".to_string()],"},{"highlight_end":42,"highlight_start":1,"text":"                                    //});"},{"highlight_end":82,"highlight_start":1,"text":"                                    //output_string += &json::stringify(object! {"},{"highlight_end":67,"highlight_start":1,"text":"                                    //    read_number: i as usize,"},{"highlight_end":79,"highlight_start":1,"text":"                                    //    categories: vec![\"ref\".to_string()],"},{"highlight_end":42,"highlight_start":1,"text":"                                    //});"},{"highlight_end":98,"highlight_start":1,"text":"                                    output_string += &serde_json::to_string(&ReadClassification {"},{"highlight_end":65,"highlight_start":1,"text":"                                        read_number: i as usize,"},{"highlight_end":77,"highlight_start":1,"text":"                                        categories: vec![\"ref\".to_string()],"},{"highlight_end":39,"highlight_start":1,"text":"                                    })"},{"highlight_end":47,"highlight_start":1,"text":"                                    .unwrap();"},{"highlight_end":71,"highlight_start":1,"text":"                                    output_string += &\",\".to_string();"},{"highlight_end":166,"highlight_start":1,"text":"                                    if variant_positions_list.len() == 1 // Forward/reverse for reference/alternate allele is only counted for single allele variants"},{"highlight_end":70,"highlight_start":1,"text":"                                && sequence_strand == \"R\".to_string()"},{"highlight_end":38,"highlight_start":1,"text":"                                    {"},{"highlight_end":70,"highlight_start":1,"text":"                                        reference_reverse_count += 1;"},{"highlight_end":173,"highlight_start":1,"text":"                                    } else if variant_positions_list.len() == 1 // Forward/reverse for reference/alternate allele is only counted for single allele variants"},{"highlight_end":70,"highlight_start":1,"text":"                                && sequence_strand == \"F\".to_string()"},{"highlight_end":38,"highlight_start":1,"text":"                                    {"},{"highlight_end":70,"highlight_start":1,"text":"                                        reference_forward_count += 1;"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":72,"highlight_start":1,"text":"                                } else if refalt == \"alt\".to_string() {"},{"highlight_end":59,"highlight_start":1,"text":"                                    // Setting read to alt"},{"highlight_end":99,"highlight_start":1,"text":"                                    // Determine which alt allele read needs to be classified into"},{"highlight_end":58,"highlight_start":1,"text":"                                    let alt_allele_name ="},{"highlight_end":86,"highlight_start":1,"text":"                                        alt_allele_names_list[max_index].to_string();"},{"highlight_end":86,"highlight_start":1,"text":"                                    //if !all_alleles.contains_key(alt_allele_name) {"},{"highlight_end":103,"highlight_start":1,"text":"                                    //    all_alleles.insert(alt_allele_name.to_string(), Vec::new());"},{"highlight_end":40,"highlight_start":1,"text":"                                    //}"},{"highlight_end":50,"highlight_start":1,"text":"                                    //all_alleles"},{"highlight_end":68,"highlight_start":1,"text":"                                    //    .get_mut(alt_allele_name)"},{"highlight_end":52,"highlight_start":1,"text":"                                    //    .unwrap()"},{"highlight_end":61,"highlight_start":1,"text":"                                    //    .push(i as usize);"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":93,"highlight_start":1,"text":"                                    //if all_alleles[alt_allele_name] == other_json!(null) {"},{"highlight_end":95,"highlight_start":1,"text":"                                    //    all_alleles[alt_allele_name] = other_json!(vec![i]);"},{"highlight_end":47,"highlight_start":1,"text":"                                    //} else {"},{"highlight_end":71,"highlight_start":1,"text":"                                    //    all_alleles[alt_allele_name]"},{"highlight_end":62,"highlight_start":1,"text":"                                    //        .as_array_mut()"},{"highlight_end":56,"highlight_start":1,"text":"                                    //        .unwrap()"},{"highlight_end":69,"highlight_start":1,"text":"                                    //        .push(other_json!(i));"},{"highlight_end":40,"highlight_start":1,"text":"                                    //}"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":67,"highlight_start":1,"text":"                                    //all_alleles[i.to_string()] ="},{"highlight_end":90,"highlight_start":1,"text":"                                    //    other_json!(vec![alt_allele_name.to_string()]);"},{"highlight_end":76,"highlight_start":1,"text":"                                    //all_alleles.push(ReadClassification {"},{"highlight_end":67,"highlight_start":1,"text":"                                    //    read_number: i as usize,"},{"highlight_end":77,"highlight_start":1,"text":"                                    //    categories: vec![alt_allele_name],"},{"highlight_end":42,"highlight_start":1,"text":"                                    //});"},{"highlight_end":98,"highlight_start":1,"text":"                                    output_string += &serde_json::to_string(&ReadClassification {"},{"highlight_end":65,"highlight_start":1,"text":"                                        read_number: i as usize,"},{"highlight_end":75,"highlight_start":1,"text":"                                        categories: vec![alt_allele_name],"},{"highlight_end":39,"highlight_start":1,"text":"                                    })"},{"highlight_end":47,"highlight_start":1,"text":"                                    .unwrap();"},{"highlight_end":82,"highlight_start":1,"text":"                                    //output_string += &json::stringify(object! {"},{"highlight_end":67,"highlight_start":1,"text":"                                    //    read_number: i as usize,"},{"highlight_end":77,"highlight_start":1,"text":"                                    //    categories: vec![alt_allele_name],"},{"highlight_end":42,"highlight_start":1,"text":"                                    //});"},{"highlight_end":71,"highlight_start":1,"text":"                                    output_string += &\",\".to_string();"},{"highlight_end":166,"highlight_start":1,"text":"                                    if variant_positions_list.len() == 1 // Forward/reverse for reference/alternate allele is only counted for single allele variants"},{"highlight_end":70,"highlight_start":1,"text":"                                && sequence_strand == \"R\".to_string()"},{"highlight_end":38,"highlight_start":1,"text":"                                    {"},{"highlight_end":70,"highlight_start":1,"text":"                                        alternate_reverse_count += 1;"},{"highlight_end":173,"highlight_start":1,"text":"                                    } else if variant_positions_list.len() == 1 // Forward/reverse for reference/alternate allele is only counted for single allele variants"},{"highlight_end":70,"highlight_start":1,"text":"                                && sequence_strand == \"F\".to_string()"},{"highlight_end":38,"highlight_start":1,"text":"                                    {"},{"highlight_end":70,"highlight_start":1,"text":"                                        alternate_forward_count += 1;"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":41,"highlight_start":1,"text":"                                } else {"},{"highlight_end":57,"highlight_start":1,"text":"                                    // Should not happen"},{"highlight_end":85,"highlight_start":1,"text":"                                    println!(\"Unaccounted scenario, please check!\");"},{"highlight_end":34,"highlight_start":1,"text":"                                }"},{"highlight_end":30,"highlight_start":1,"text":"                            }"},{"highlight_end":36,"highlight_start":1,"text":"                            i += 1;"},{"highlight_end":26,"highlight_start":1,"text":"                        }"}]}},"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":314,"line_start":314,"suggested_replacement":"for (i, read) in (0_i64..).zip(sequences_list.into_iter())","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":51,"highlight_start":25,"text":"                        for read in sequences_list {"}]}]}],"code":{"code":"clippy::explicit_counter_loop","explanation":null},"level":"warning","message":"the variable `i` is used as a loop counter","spans":[{"byte_end":18003,"byte_start":17977,"column_end":51,"column_start":25,"expansion":{"def_site_span":{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/indel.rs","is_primary":false,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},"macro_decl_name":"desugaring of `for` loop","span":{"byte_end":49165,"byte_start":17977,"column_end":26,"column_start":25,"expansion":null,"file_name":"src/indel.rs","is_primary":false,"label":null,"line_end":771,"line_start":314,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":53,"highlight_start":25,"text":"                        for read in sequences_list {"},{"highlight_end":170,"highlight_start":1,"text":"                            // The first two sequences are reference and alternate allele and therefore skipped. Also checking there are no blank lines in the input file"},{"highlight_end":34,"highlight_start":1,"text":"                            let ("},{"highlight_end":46,"highlight_start":1,"text":"                                within_indel,"},{"highlight_end":57,"highlight_start":1,"text":"                                correct_start_positions,"},{"highlight_end":55,"highlight_start":1,"text":"                                correct_end_positions,"},{"highlight_end":49,"highlight_start":1,"text":"                                alignment_sides,"},{"highlight_end":51,"highlight_start":1,"text":"                                spliced_sequences,"},{"highlight_end":73,"highlight_start":1,"text":"                            ) = realign::check_read_within_indel_region("},{"highlight_end":98,"highlight_start":1,"text":"                                // Checks if the read contains the indel region (or a part of it)"},{"highlight_end":94,"highlight_start":1,"text":"                                start_positions_list[i as usize].parse::<i64>().unwrap() - 1,"},{"highlight_end":78,"highlight_start":1,"text":"                                cigar_sequences_list[i as usize].to_string(),"},{"highlight_end":57,"highlight_start":1,"text":"                                &variant_positions_list,"},{"highlight_end":53,"highlight_start":1,"text":"                                &indel_lengths_list,"},{"highlight_end":50,"highlight_start":1,"text":"                                &refalleles_list,"},{"highlight_end":50,"highlight_start":1,"text":"                                &altalleles_list,"},{"highlight_end":44,"highlight_start":1,"text":"                                strictness,"},{"highlight_end":50,"highlight_start":1,"text":"                                read.to_string(),"},{"highlight_end":31,"highlight_start":1,"text":"                            );"},{"highlight_end":97,"highlight_start":1,"text":"                            //println!(\"correct_start_positions:{:?}\", correct_start_positions);"},{"highlight_end":93,"highlight_start":1,"text":"                            //println!(\"correct_end_positions:{:?}\", correct_end_positions);"},{"highlight_end":40,"highlight_start":1,"text":"                            //println!("},{"highlight_end":55,"highlight_start":1,"text":"                            //    \"cigar_sequence:{}\","},{"highlight_end":80,"highlight_start":1,"text":"                            //    &cigar_sequences_list[i as usize].to_string()"},{"highlight_end":33,"highlight_start":1,"text":"                            //);"},{"highlight_end":73,"highlight_start":1,"text":"                            //println!(\"within_indel:{}\", within_indel);"},{"highlight_end":51,"highlight_start":1,"text":"                            if within_indel == 1 {"},{"highlight_end":88,"highlight_start":1,"text":"                                // Checking if the read is in forward or reverse strand"},{"highlight_end":126,"highlight_start":1,"text":"                                let mut sequence_strand: String = \"F\".to_string(); // Initializing sequence strand to forward"},{"highlight_end":96,"highlight_start":1,"text":"                                if sequence_flags_list[i as usize].parse::<i64>().unwrap() & 16"},{"highlight_end":42,"highlight_start":1,"text":"                                    == 16"},{"highlight_end":34,"highlight_start":1,"text":"                                {"},{"highlight_end":71,"highlight_start":1,"text":"                                    sequence_strand = \"R\".to_string();"},{"highlight_end":34,"highlight_start":1,"text":"                                }"},{"highlight_end":84,"highlight_start":1,"text":"                                //let mut read_ambiguous = check_if_read_ambiguous("},{"highlight_end":173,"highlight_start":1,"text":"                                //    // Function that checks if the start/end of a read is in a region such that it cannot be distinguished as supporting ref or alt allele"},{"highlight_end":62,"highlight_start":1,"text":"                                //    correct_start_position,"},{"highlight_end":60,"highlight_start":1,"text":"                                //    correct_end_position,"},{"highlight_end":51,"highlight_start":1,"text":"                                //    left_offset,"},{"highlight_end":52,"highlight_start":1,"text":"                                //    right_offset,"},{"highlight_end":51,"highlight_start":1,"text":"                                //    variant_pos,"},{"highlight_end":55,"highlight_start":1,"text":"                                //    refallele.len(),"},{"highlight_end":56,"highlight_start":1,"text":"                                //    &ref_nucleotides,"},{"highlight_end":56,"highlight_start":1,"text":"                                //    &alt_nucleotides,"},{"highlight_end":56,"highlight_start":1,"text":"                                //    optimized_allele,"},{"highlight_end":37,"highlight_start":1,"text":"                                //);"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":81,"highlight_start":1,"text":"                                //println!(\"read_ambiguous:{}\", read_ambiguous);"},{"highlight_end":79,"highlight_start":1,"text":"                                //println!(\"ref_insertion:{}\", ref_insertion);"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":88,"highlight_start":1,"text":"                                let mut alt_comparisons = Vec::<ReadComparison>::new();"},{"highlight_end":88,"highlight_start":1,"text":"                                let mut ref_comparisons = Vec::<ReadComparison>::new();"},{"highlight_end":74,"highlight_start":1,"text":"                                let mut indel_nones = Vec::<bool>::new();"},{"highlight_end":84,"highlight_start":1,"text":"                                let mut ref_polyclonal_read_status_global: i64 = 0;"},{"highlight_end":84,"highlight_start":1,"text":"                                let mut alt_polyclonal_read_status_global: i64 = 1;"},{"highlight_end":90,"highlight_start":1,"text":"                                let mut ref_polyclonal_read_statuses = Vec::<i64>::new();"},{"highlight_end":90,"highlight_start":1,"text":"                                let mut alt_polyclonal_read_statuses = Vec::<i64>::new();"},{"highlight_end":83,"highlight_start":1,"text":"                                for indel_idx in 0..variant_positions_list.len() {"},{"highlight_end":90,"highlight_start":1,"text":"                                    let spliced_sequence = &spliced_sequences[indel_idx];"},{"highlight_end":86,"highlight_start":1,"text":"                                    let reference_sequence = refseqs_list[indel_idx];"},{"highlight_end":86,"highlight_start":1,"text":"                                    let alternate_sequence = altseqs_list[indel_idx];"},{"highlight_end":92,"highlight_start":1,"text":"                                    let (q_seq_ref, align_ref, r_seq_ref, ref_comparison) ="},{"highlight_end":69,"highlight_start":1,"text":"                                        realign::align_single_reads("},{"highlight_end":63,"highlight_start":1,"text":"                                            &spliced_sequence,"},{"highlight_end":76,"highlight_start":1,"text":"                                            reference_sequence.to_string(),"},{"highlight_end":43,"highlight_start":1,"text":"                                        );"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":92,"highlight_start":1,"text":"                                    let (q_seq_alt, align_alt, r_seq_alt, alt_comparison) ="},{"highlight_end":69,"highlight_start":1,"text":"                                        realign::align_single_reads("},{"highlight_end":63,"highlight_start":1,"text":"                                            &spliced_sequence,"},{"highlight_end":76,"highlight_start":1,"text":"                                            alternate_sequence.to_string(),"},{"highlight_end":43,"highlight_start":1,"text":"                                        );"},{"highlight_end":74,"highlight_start":1,"text":"                                    alt_comparisons.push(ReadComparison {"},{"highlight_end":68,"highlight_start":1,"text":"                                        comparison: alt_comparison,"},{"highlight_end":58,"highlight_start":1,"text":"                                        index: indel_idx,"},{"highlight_end":40,"highlight_start":1,"text":"                                    });"},{"highlight_end":74,"highlight_start":1,"text":"                                    ref_comparisons.push(ReadComparison {"},{"highlight_end":68,"highlight_start":1,"text":"                                        comparison: ref_comparison,"},{"highlight_end":58,"highlight_start":1,"text":"                                        index: indel_idx,"},{"highlight_end":40,"highlight_start":1,"text":"                                    });"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":75,"highlight_start":1,"text":"                                    //println!(\"indel_idx:{}\", indel_idx);"},{"highlight_end":93,"highlight_start":1,"text":"                                    //println!(\"alt allele:{}\", altalleles_list[indel_idx]);"},{"highlight_end":85,"highlight_start":1,"text":"                                    //println!(\"ref_comparison:{}\", ref_comparison);"},{"highlight_end":85,"highlight_start":1,"text":"                                    //println!(\"alt_comparison:{}\", alt_comparison);"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":98,"highlight_start":1,"text":"                                    let (ref_polyclonal_read_status, alt_polyclonal_read_status);"},{"highlight_end":57,"highlight_start":1,"text":"                                    if strictness == 0 {"},{"highlight_end":72,"highlight_start":1,"text":"                                        ref_polyclonal_read_status = 0;"},{"highlight_end":72,"highlight_start":1,"text":"                                        alt_polyclonal_read_status = 0;"},{"highlight_end":45,"highlight_start":1,"text":"                                    } else {"},{"highlight_end":46,"highlight_start":1,"text":"                                        let ("},{"highlight_end":77,"highlight_start":1,"text":"                                            ref_polyclonal_read_status_temp,"},{"highlight_end":77,"highlight_start":1,"text":"                                            alt_polyclonal_read_status_temp,"},{"highlight_end":82,"highlight_start":1,"text":"                                        ) = check_polyclonal_with_read_alignment("},{"highlight_end":73,"highlight_start":1,"text":"                                            &alignment_sides[indel_idx],"},{"highlight_end":56,"highlight_start":1,"text":"                                            &q_seq_alt,"},{"highlight_end":56,"highlight_start":1,"text":"                                            &q_seq_ref,"},{"highlight_end":56,"highlight_start":1,"text":"                                            &r_seq_alt,"},{"highlight_end":56,"highlight_start":1,"text":"                                            &r_seq_ref,"},{"highlight_end":56,"highlight_start":1,"text":"                                            &align_alt,"},{"highlight_end":56,"highlight_start":1,"text":"                                            &align_ref,"},{"highlight_end":80,"highlight_start":1,"text":"                                            correct_start_positions[indel_idx],"},{"highlight_end":78,"highlight_start":1,"text":"                                            correct_end_positions[indel_idx],"},{"highlight_end":79,"highlight_start":1,"text":"                                            variant_positions_list[indel_idx],"},{"highlight_end":78,"highlight_start":1,"text":"                                            refalleles_list[indel_idx].len(),"},{"highlight_end":78,"highlight_start":1,"text":"                                            altalleles_list[indel_idx].len(),"},{"highlight_end":75,"highlight_start":1,"text":"                                            indel_lengths_list[indel_idx],"},{"highlight_end":74,"highlight_start":1,"text":"                                            variant_positions_list.len(),"},{"highlight_end":43,"highlight_start":1,"text":"                                        );"},{"highlight_end":69,"highlight_start":1,"text":"                                        ref_polyclonal_read_status ="},{"highlight_end":77,"highlight_start":1,"text":"                                            ref_polyclonal_read_status_temp;"},{"highlight_end":69,"highlight_start":1,"text":"                                        alt_polyclonal_read_status ="},{"highlight_end":77,"highlight_start":1,"text":"                                            alt_polyclonal_read_status_temp;"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":73,"highlight_start":1,"text":"                                    if ref_polyclonal_read_status == 1 {"},{"highlight_end":79,"highlight_start":1,"text":"                                        ref_polyclonal_read_status_global = 1;"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":73,"highlight_start":1,"text":"                                    if alt_polyclonal_read_status == 0 {"},{"highlight_end":79,"highlight_start":1,"text":"                                        alt_polyclonal_read_status_global = 0;"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":70,"highlight_start":1,"text":"                                    let mut indel_none: bool = false;"},{"highlight_end":71,"highlight_start":1,"text":"                                    if ref_polyclonal_read_status == 1"},{"highlight_end":75,"highlight_start":1,"text":"                                        && alt_polyclonal_read_status == 1"},{"highlight_end":38,"highlight_start":1,"text":"                                    {"},{"highlight_end":59,"highlight_start":1,"text":"                                        indel_none = true;"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":77,"highlight_start":1,"text":"                                    //println!(\"indel_none:{}\", indel_none);"},{"highlight_end":66,"highlight_start":1,"text":"                                    indel_nones.push(indel_none);"},{"highlight_end":48,"highlight_start":1,"text":"                                    //println!("},{"highlight_end":75,"highlight_start":1,"text":"                                    //    \"ref_polyclonal_read_status:{}\","},{"highlight_end":69,"highlight_start":1,"text":"                                    //    ref_polyclonal_read_status"},{"highlight_end":41,"highlight_start":1,"text":"                                    //);"},{"highlight_end":48,"highlight_start":1,"text":"                                    //println!("},{"highlight_end":75,"highlight_start":1,"text":"                                    //    \"alt_polyclonal_read_status:{}\","},{"highlight_end":69,"highlight_start":1,"text":"                                    //    alt_polyclonal_read_status"},{"highlight_end":41,"highlight_start":1,"text":"                                    //);"},{"highlight_end":99,"highlight_start":1,"text":"                                    ref_polyclonal_read_statuses.push(ref_polyclonal_read_status);"},{"highlight_end":99,"highlight_start":1,"text":"                                    alt_polyclonal_read_statuses.push(alt_polyclonal_read_status);"},{"highlight_end":34,"highlight_start":1,"text":"                                }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":109,"highlight_start":1,"text":"                                // Sorting in ascending order so as to check if the read is ambiguous or not"},{"highlight_end":80,"highlight_start":1,"text":"                                alt_comparisons.as_mut_slice().sort_by(|a, b| {"},{"highlight_end":51,"highlight_start":1,"text":"                                    (a.comparison)"},{"highlight_end":68,"highlight_start":1,"text":"                                        .partial_cmp(&b.comparison)"},{"highlight_end":68,"highlight_start":1,"text":"                                        .unwrap_or(Ordering::Equal)"},{"highlight_end":36,"highlight_start":1,"text":"                                });"},{"highlight_end":80,"highlight_start":1,"text":"                                ref_comparisons.as_mut_slice().sort_by(|a, b| {"},{"highlight_end":51,"highlight_start":1,"text":"                                    (a.comparison)"},{"highlight_end":68,"highlight_start":1,"text":"                                        .partial_cmp(&b.comparison)"},{"highlight_end":68,"highlight_start":1,"text":"                                        .unwrap_or(Ordering::Equal)"},{"highlight_end":36,"highlight_start":1,"text":"                                });"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":55,"highlight_start":1,"text":"                                let mut max_index = 0;"},{"highlight_end":68,"highlight_start":1,"text":"                                let mut refalt = \"ref\".to_string();"},{"highlight_end":70,"highlight_start":1,"text":"                                let mut max_alignment_ref: f64 = 0.0;"},{"highlight_end":66,"highlight_start":1,"text":"                                let mut max_index_ref: usize = 0;"},{"highlight_end":80,"highlight_start":1,"text":"                                for alignment_idx in 0..ref_comparisons.len() {"},{"highlight_end":101,"highlight_start":1,"text":"                                    if ref_comparisons[alignment_idx].comparison > max_alignment_ref"},{"highlight_end":38,"highlight_start":1,"text":"                                    {"},{"highlight_end":60,"highlight_start":1,"text":"                                        max_alignment_ref ="},{"highlight_end":87,"highlight_start":1,"text":"                                            ref_comparisons[alignment_idx].comparison;"},{"highlight_end":94,"highlight_start":1,"text":"                                        max_index_ref = ref_comparisons[alignment_idx].index;"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":34,"highlight_start":1,"text":"                                }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":60,"highlight_start":1,"text":"                                let mut read_ambiguous = 0;"},{"highlight_end":87,"highlight_start":1,"text":"                                let mut equal_alignment_indices = Vec::<usize>::new();"},{"highlight_end":70,"highlight_start":1,"text":"                                let mut max_alignment_alt: f64 = 0.0;"},{"highlight_end":66,"highlight_start":1,"text":"                                let mut max_index_alt: usize = 0;"},{"highlight_end":80,"highlight_start":1,"text":"                                for alignment_idx in 0..alt_comparisons.len() {"},{"highlight_end":83,"highlight_start":1,"text":"                                    //println!(\"max_index_alt:{}\", max_index_alt);"},{"highlight_end":48,"highlight_start":1,"text":"                                    //println!("},{"highlight_end":75,"highlight_start":1,"text":"                                    //    \"indel_nones[alignment_idx]:{}\","},{"highlight_end":69,"highlight_start":1,"text":"                                    //    indel_nones[alignment_idx]"},{"highlight_end":41,"highlight_start":1,"text":"                                    //);"},{"highlight_end":83,"highlight_start":1,"text":"                                    //println!(\"alignment_idx:{}\", alignment_idx);"},{"highlight_end":48,"highlight_start":1,"text":"                                    //println!("},{"highlight_end":82,"highlight_start":1,"text":"                                    //    \"ref_polyclonal_read_status_global:{}\","},{"highlight_end":76,"highlight_start":1,"text":"                                    //    ref_polyclonal_read_status_global"},{"highlight_end":41,"highlight_start":1,"text":"                                    //);"},{"highlight_end":48,"highlight_start":1,"text":"                                    //println!("},{"highlight_end":82,"highlight_start":1,"text":"                                    //    \"alt_polyclonal_read_status_global:{}\","},{"highlight_end":76,"highlight_start":1,"text":"                                    //    alt_polyclonal_read_status_global"},{"highlight_end":41,"highlight_start":1,"text":"                                    //);"},{"highlight_end":101,"highlight_start":1,"text":"                                    if alt_comparisons[alignment_idx].comparison > max_alignment_alt"},{"highlight_end":93,"highlight_start":1,"text":"                                        && indel_nones[alt_comparisons[alignment_idx].index]"},{"highlight_end":53,"highlight_start":1,"text":"                                            == false"},{"highlight_end":72,"highlight_start":1,"text":"                                        && alt_polyclonal_read_statuses"},{"highlight_end":83,"highlight_start":1,"text":"                                            [alt_comparisons[alignment_idx].index]"},{"highlight_end":49,"highlight_start":1,"text":"                                            != 1"},{"highlight_end":38,"highlight_start":1,"text":"                                    {"},{"highlight_end":60,"highlight_start":1,"text":"                                        max_alignment_alt ="},{"highlight_end":87,"highlight_start":1,"text":"                                            alt_comparisons[alignment_idx].comparison;"},{"highlight_end":94,"highlight_start":1,"text":"                                        max_index_alt = alt_comparisons[alignment_idx].index;"},{"highlight_end":85,"highlight_start":1,"text":"                                    } else if ref_polyclonal_read_status_global != 1"},{"highlight_end":82,"highlight_start":1,"text":"                                        || alt_polyclonal_read_status_global != 1"},{"highlight_end":122,"highlight_start":1,"text":"                                    // If the read is going to be classified as none, no need to check if it is ambiguous"},{"highlight_end":38,"highlight_start":1,"text":"                                    {"},{"highlight_end":64,"highlight_start":1,"text":"                                        if alignment_idx == 0 {"},{"highlight_end":49,"highlight_start":1,"text":"                                        } else {"},{"highlight_end":97,"highlight_start":1,"text":"                                            //println!(\"alt_comparisons:{:?}\", alt_comparisons);"},{"highlight_end":88,"highlight_start":1,"text":"                                            for sub_alignment_idx in 0..alignment_idx {"},{"highlight_end":86,"highlight_start":1,"text":"                                                let alt_comparison1 = alt_comparisons"},{"highlight_end":60,"highlight_start":1,"text":"                                                    .iter()"},{"highlight_end":93,"highlight_start":1,"text":"                                                    .find(|x| x.index == sub_alignment_idx);"},{"highlight_end":86,"highlight_start":1,"text":"                                                let alt_comparison2 = alt_comparisons"},{"highlight_end":60,"highlight_start":1,"text":"                                                    .iter()"},{"highlight_end":89,"highlight_start":1,"text":"                                                    .find(|x| x.index == alignment_idx);"},{"highlight_end":87,"highlight_start":1,"text":"                                                if alt_comparison1.unwrap().comparison"},{"highlight_end":91,"highlight_start":1,"text":"                                                    == alt_comparison2.unwrap().comparison"},{"highlight_end":50,"highlight_start":1,"text":"                                                {"},{"highlight_end":101,"highlight_start":1,"text":"                                                    equal_alignment_indices.push(sub_alignment_idx);"},{"highlight_end":97,"highlight_start":1,"text":"                                                    equal_alignment_indices.push(alignment_idx);"},{"highlight_end":64,"highlight_start":1,"text":"                                                    //println!("},{"highlight_end":82,"highlight_start":1,"text":"                                                    //    \"sub_alignment_idx:{}\","},{"highlight_end":76,"highlight_start":1,"text":"                                                    //    sub_alignment_idx"},{"highlight_end":57,"highlight_start":1,"text":"                                                    //);"},{"highlight_end":99,"highlight_start":1,"text":"                                                    //println!(\"alignment_idx:{}\", alignment_idx);"},{"highlight_end":72,"highlight_start":1,"text":"                                                    read_ambiguous = 1;"},{"highlight_end":72,"highlight_start":1,"text":"                                                    max_alignment_alt ="},{"highlight_end":93,"highlight_start":1,"text":"                                                        alt_comparison1.unwrap().comparison;"},{"highlight_end":68,"highlight_start":1,"text":"                                                    max_index_alt ="},{"highlight_end":94,"highlight_start":1,"text":"                                                        alt_comparisons[alignment_idx].index;"},{"highlight_end":50,"highlight_start":1,"text":"                                                }"},{"highlight_end":46,"highlight_start":1,"text":"                                            }"},{"highlight_end":42,"highlight_start":1,"text":"                                        }"},{"highlight_end":75,"highlight_start":1,"text":"                                    } else if alt_polyclonal_read_statuses"},{"highlight_end":79,"highlight_start":1,"text":"                                        [alt_comparisons[alignment_idx].index]"},{"highlight_end":45,"highlight_start":1,"text":"                                        == 1"},{"highlight_end":72,"highlight_start":1,"text":"                                        && ref_polyclonal_read_statuses"},{"highlight_end":83,"highlight_start":1,"text":"                                            [ref_comparisons[alignment_idx].index]"},{"highlight_end":49,"highlight_start":1,"text":"                                            == 0"},{"highlight_end":250,"highlight_start":1,"text":"                                    // This logic is kind of side stepping the smith-watermann alignment and classifying on the basis of nucleotide-by-nucleotide comparison (not sure if this will work in all cases or any other possible side effects)"},{"highlight_end":38,"highlight_start":1,"text":"                                    {"},{"highlight_end":60,"highlight_start":1,"text":"                                        max_alignment_ref ="},{"highlight_end":87,"highlight_start":1,"text":"                                            ref_comparisons[alignment_idx].comparison;"},{"highlight_end":94,"highlight_start":1,"text":"                                        max_index_ref = ref_comparisons[alignment_idx].index;"},{"highlight_end":88,"highlight_start":1,"text":"                                    } else if alt_comparisons[alignment_idx].comparison"},{"highlight_end":60,"highlight_start":1,"text":"                                        > max_alignment_alt"},{"highlight_end":80,"highlight_start":1,"text":"                                    // Should this logic be placed at the top ?"},{"highlight_end":38,"highlight_start":1,"text":"                                    {"},{"highlight_end":60,"highlight_start":1,"text":"                                        max_alignment_alt ="},{"highlight_end":87,"highlight_start":1,"text":"                                            alt_comparisons[alignment_idx].comparison;"},{"highlight_end":94,"highlight_start":1,"text":"                                        max_index_alt = alt_comparisons[alignment_idx].index;"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":34,"highlight_start":1,"text":"                                }"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":87,"highlight_start":1,"text":"                                //println!(\"max_alignment_alt:{}\", max_alignment_alt);"},{"highlight_end":87,"highlight_start":1,"text":"                                //println!(\"max_alignment_ref:{}\", max_alignment_ref);"},{"highlight_end":170,"highlight_start":1,"text":"                                let mut ref_is_ambiguous = false; // Flag which is true/false when ref allele is one of the reads that is ambiguous for a particular read"},{"highlight_end":75,"highlight_start":1,"text":"                                if max_alignment_alt > max_alignment_ref {"},{"highlight_end":73,"highlight_start":1,"text":"                                    //max_alignment = max_alignment_alt;"},{"highlight_end":63,"highlight_start":1,"text":"                                    max_index = max_index_alt;"},{"highlight_end":64,"highlight_start":1,"text":"                                    refalt = \"alt\".to_string();"},{"highlight_end":82,"highlight_start":1,"text":"                                } else if max_alignment_alt < max_alignment_ref {"},{"highlight_end":73,"highlight_start":1,"text":"                                    //max_alignment = max_alignment_ref;"},{"highlight_end":63,"highlight_start":1,"text":"                                    max_index = max_index_ref;"},{"highlight_end":64,"highlight_start":1,"text":"                                    refalt = \"ref\".to_string();"},{"highlight_end":83,"highlight_start":1,"text":"                                } else if max_alignment_alt == max_alignment_ref {"},{"highlight_end":73,"highlight_start":1,"text":"                                    //max_alignment = max_alignment_ref;"},{"highlight_end":48,"highlight_start":1,"text":"                                    //println!("},{"highlight_end":102,"highlight_start":1,"text":"                                    //    \"Ambiguous case between one of the alt alleles and the ref\""},{"highlight_end":41,"highlight_start":1,"text":"                                    //);"},{"highlight_end":56,"highlight_start":1,"text":"                                    read_ambiguous = 1;"},{"highlight_end":103,"highlight_start":1,"text":"                                    //if equal_alignment_indices.iter().any(|&i| i == max_index_alt) {"},{"highlight_end":47,"highlight_start":1,"text":"                                    //} else {"},{"highlight_end":87,"highlight_start":1,"text":"                                    //    equal_alignment_indices.push(max_index_alt);"},{"highlight_end":67,"highlight_start":1,"text":"                                    //    ref_is_ambiguous = true;"},{"highlight_end":40,"highlight_start":1,"text":"                                    //}"},{"highlight_end":81,"highlight_start":1,"text":"                                    equal_alignment_indices.push(max_index_alt);"},{"highlight_end":61,"highlight_start":1,"text":"                                    ref_is_ambiguous = true;"},{"highlight_end":34,"highlight_start":1,"text":"                                }"},{"highlight_end":64,"highlight_start":1,"text":"                                equal_alignment_indices.sort();"},{"highlight_end":65,"highlight_start":1,"text":"                                equal_alignment_indices.dedup();"},{"highlight_end":101,"highlight_start":1,"text":"                                //println!(\"equal_alignment_indices:{:?}\", equal_alignment_indices);"},{"highlight_end":112,"highlight_start":1,"text":"                                // Check if the read does not support any of the reference or alternate alleles"},{"highlight_end":76,"highlight_start":1,"text":"                                if ((ref_polyclonal_read_status_global == 1"},{"highlight_end":79,"highlight_start":1,"text":"                                    && alt_polyclonal_read_status_global == 1)"},{"highlight_end":79,"highlight_start":1,"text":"                                    || (ref_polyclonal_read_status_global == 1"},{"highlight_end":82,"highlight_start":1,"text":"                                        && alt_polyclonal_read_status_global == 0"},{"highlight_end":291,"highlight_start":1,"text":"                                        && refalt == \"ref\".to_string())) // The 2nd condition is experimental and was observed in case of deletion in repeat region. Somehow alt_polyclonal_read_status_global was 0 so it got classifed into ref allele although it does not support ref allele. "},{"highlight_end":55,"highlight_start":1,"text":"                                    && strictness == 1"},{"highlight_end":34,"highlight_start":1,"text":"                                {"},{"highlight_end":60,"highlight_start":1,"text":"                                    // Setting read to none"},{"highlight_end":90,"highlight_start":1,"text":"                                    //if !all_alleles.contains_key(&\"none\".to_string()) {"},{"highlight_end":94,"highlight_start":1,"text":"                                    //    all_alleles.insert(\"none\".to_string(), Vec::new());"},{"highlight_end":40,"highlight_start":1,"text":"                                    //}"},{"highlight_end":50,"highlight_start":1,"text":"                                    //all_alleles"},{"highlight_end":72,"highlight_start":1,"text":"                                    //    .get_mut(&\"none\".to_string())"},{"highlight_end":52,"highlight_start":1,"text":"                                    //    .unwrap()"},{"highlight_end":61,"highlight_start":1,"text":"                                    //    .push(i as usize);"},{"highlight_end":84,"highlight_start":1,"text":"                                    //if all_alleles[\"none\"] == other_json!(null) {"},{"highlight_end":86,"highlight_start":1,"text":"                                    //    all_alleles[\"none\"] = other_json!(vec![i]);"},{"highlight_end":47,"highlight_start":1,"text":"                                    //} else {"},{"highlight_end":62,"highlight_start":1,"text":"                                    //    all_alleles[\"none\"]"},{"highlight_end":62,"highlight_start":1,"text":"                                    //        .as_array_mut()"},{"highlight_end":56,"highlight_start":1,"text":"                                    //        .unwrap()"},{"highlight_end":69,"highlight_start":1,"text":"                                    //        .push(other_json!(i));"},{"highlight_end":40,"highlight_start":1,"text":"                                    //}"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":245,"highlight_start":1,"text":"                                    let mut none_groups_for_each_read = Vec::<String>::new(); // When a read is assigned to none group, the first entry in the vector is \"none\", followed by the group with which it has maximum sequence similarity"},{"highlight_end":88,"highlight_start":1,"text":"                                    none_groups_for_each_read.push(\"none\".to_string());"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":69,"highlight_start":1,"text":"                                    if refalt == \"ref\".to_string() {"},{"highlight_end":90,"highlight_start":1,"text":"                                        none_groups_for_each_read.push(\"ref\".to_string())"},{"highlight_end":76,"highlight_start":1,"text":"                                    } else if refalt == \"alt\".to_string() {"},{"highlight_end":62,"highlight_start":1,"text":"                                        let alt_allele_name ="},{"highlight_end":90,"highlight_start":1,"text":"                                            alt_allele_names_list[max_index].to_string();"},{"highlight_end":89,"highlight_start":1,"text":"                                        none_groups_for_each_read.push(alt_allele_name);"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":67,"highlight_start":1,"text":"                                    //all_alleles[i.to_string()] ="},{"highlight_end":82,"highlight_start":1,"text":"                                    //    other_json!(none_groups_for_each_read);"},{"highlight_end":76,"highlight_start":1,"text":"                                    //all_alleles.push(ReadClassification {"},{"highlight_end":67,"highlight_start":1,"text":"                                    //    read_number: i as usize,"},{"highlight_end":81,"highlight_start":1,"text":"                                    //    categories: none_groups_for_each_read,"},{"highlight_end":42,"highlight_start":1,"text":"                                    //});"},{"highlight_end":82,"highlight_start":1,"text":"                                    //output_string += &json::stringify(object! {"},{"highlight_end":67,"highlight_start":1,"text":"                                    //    read_number: i as usize,"},{"highlight_end":81,"highlight_start":1,"text":"                                    //    categories: none_groups_for_each_read,"},{"highlight_end":42,"highlight_start":1,"text":"                                    //});"},{"highlight_end":98,"highlight_start":1,"text":"                                    output_string += &serde_json::to_string(&ReadClassification {"},{"highlight_end":65,"highlight_start":1,"text":"                                        read_number: i as usize,"},{"highlight_end":79,"highlight_start":1,"text":"                                        categories: none_groups_for_each_read,"},{"highlight_end":39,"highlight_start":1,"text":"                                    })"},{"highlight_end":47,"highlight_start":1,"text":"                                    .unwrap();"},{"highlight_end":71,"highlight_start":1,"text":"                                    output_string += &\",\".to_string();"},{"highlight_end":64,"highlight_start":1,"text":"                                } else if read_ambiguous == 1 {"},{"highlight_end":65,"highlight_start":1,"text":"                                    // Setting read to ambiguous"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":89,"highlight_start":1,"text":"                                    //if !all_alleles.contains_key(&\"amb\".to_string()) {"},{"highlight_end":93,"highlight_start":1,"text":"                                    //    all_alleles.insert(\"amb\".to_string(), Vec::new());"},{"highlight_end":40,"highlight_start":1,"text":"                                    //}"},{"highlight_end":50,"highlight_start":1,"text":"                                    //all_alleles"},{"highlight_end":71,"highlight_start":1,"text":"                                    //    .get_mut(&\"amb\".to_string())"},{"highlight_end":52,"highlight_start":1,"text":"                                    //    .unwrap()"},{"highlight_end":61,"highlight_start":1,"text":"                                    //    .push(i as usize);"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":83,"highlight_start":1,"text":"                                    //if all_alleles[\"amb\"] == other_json!(null) {"},{"highlight_end":85,"highlight_start":1,"text":"                                    //    all_alleles[\"amb\"] = other_json!(vec![i]);"},{"highlight_end":47,"highlight_start":1,"text":"                                    //} else {"},{"highlight_end":61,"highlight_start":1,"text":"                                    //    all_alleles[\"amb\"]"},{"highlight_end":62,"highlight_start":1,"text":"                                    //        .as_array_mut()"},{"highlight_end":56,"highlight_start":1,"text":"                                    //        .unwrap()"},{"highlight_end":69,"highlight_start":1,"text":"                                    //        .push(other_json!(i));"},{"highlight_end":40,"highlight_start":1,"text":"                                    //}"},{"highlight_end":278,"highlight_start":1,"text":"                                    let mut ambiguous_groups_for_each_read = Vec::<String>::new(); // When a read is asigned to ambiguous group, the first entry in the vector is \"amb\". Subsequent entries are for each group with which the read has equal sequence similarity with"},{"highlight_end":92,"highlight_start":1,"text":"                                    ambiguous_groups_for_each_read.push(\"amb\".to_string());"},{"highlight_end":95,"highlight_start":1,"text":"                                    for eq_alignment_idx in 0..equal_alignment_indices.len() {"},{"highlight_end":52,"highlight_start":1,"text":"                                        //println!("},{"highlight_end":69,"highlight_start":1,"text":"                                        //    \"eq_alignment_idx:{}\","},{"highlight_end":88,"highlight_start":1,"text":"                                        //    equal_alignment_indices[eq_alignment_idx]"},{"highlight_end":45,"highlight_start":1,"text":"                                        //);"},{"highlight_end":77,"highlight_start":1,"text":"                                        ambiguous_groups_for_each_read.push("},{"highlight_end":66,"highlight_start":1,"text":"                                            alt_allele_names_list"},{"highlight_end":92,"highlight_start":1,"text":"                                                [equal_alignment_indices[eq_alignment_idx]]"},{"highlight_end":62,"highlight_start":1,"text":"                                                .to_string(),"},{"highlight_end":43,"highlight_start":1,"text":"                                        );"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":66,"highlight_start":1,"text":"                                    if ref_is_ambiguous == true {"},{"highlight_end":96,"highlight_start":1,"text":"                                        ambiguous_groups_for_each_read.push(\"ref\".to_string());"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":76,"highlight_start":1,"text":"                                    //all_alleles.push(ReadClassification {"},{"highlight_end":67,"highlight_start":1,"text":"                                    //    read_number: i as usize,"},{"highlight_end":86,"highlight_start":1,"text":"                                    //    categories: ambiguous_groups_for_each_read,"},{"highlight_end":42,"highlight_start":1,"text":"                                    //});"},{"highlight_end":82,"highlight_start":1,"text":"                                    //output_string += &json::stringify(object! {"},{"highlight_end":67,"highlight_start":1,"text":"                                    //    read_number: i as usize,"},{"highlight_end":86,"highlight_start":1,"text":"                                    //    categories: ambiguous_groups_for_each_read,"},{"highlight_end":42,"highlight_start":1,"text":"                                    //});"},{"highlight_end":48,"highlight_start":1,"text":"                                    //println!("},{"highlight_end":81,"highlight_start":1,"text":"                                    //    \"ambiguous_groups_for_each_read:{:?}\","},{"highlight_end":73,"highlight_start":1,"text":"                                    //    ambiguous_groups_for_each_read"},{"highlight_end":41,"highlight_start":1,"text":"                                    //);"},{"highlight_end":98,"highlight_start":1,"text":"                                    output_string += &serde_json::to_string(&ReadClassification {"},{"highlight_end":65,"highlight_start":1,"text":"                                        read_number: i as usize,"},{"highlight_end":84,"highlight_start":1,"text":"                                        categories: ambiguous_groups_for_each_read,"},{"highlight_end":39,"highlight_start":1,"text":"                                    })"},{"highlight_end":47,"highlight_start":1,"text":"                                    .unwrap();"},{"highlight_end":71,"highlight_start":1,"text":"                                    output_string += &\",\".to_string();"},{"highlight_end":72,"highlight_start":1,"text":"                                } else if refalt == \"ref\".to_string() {"},{"highlight_end":76,"highlight_start":1,"text":"                                    //all_alleles.push(ReadClassification {"},{"highlight_end":67,"highlight_start":1,"text":"                                    //    read_number: i as usize,"},{"highlight_end":79,"highlight_start":1,"text":"                                    //    categories: vec![\"ref\".to_string()],"},{"highlight_end":42,"highlight_start":1,"text":"                                    //});"},{"highlight_end":82,"highlight_start":1,"text":"                                    //output_string += &json::stringify(object! {"},{"highlight_end":67,"highlight_start":1,"text":"                                    //    read_number: i as usize,"},{"highlight_end":79,"highlight_start":1,"text":"                                    //    categories: vec![\"ref\".to_string()],"},{"highlight_end":42,"highlight_start":1,"text":"                                    //});"},{"highlight_end":98,"highlight_start":1,"text":"                                    output_string += &serde_json::to_string(&ReadClassification {"},{"highlight_end":65,"highlight_start":1,"text":"                                        read_number: i as usize,"},{"highlight_end":77,"highlight_start":1,"text":"                                        categories: vec![\"ref\".to_string()],"},{"highlight_end":39,"highlight_start":1,"text":"                                    })"},{"highlight_end":47,"highlight_start":1,"text":"                                    .unwrap();"},{"highlight_end":71,"highlight_start":1,"text":"                                    output_string += &\",\".to_string();"},{"highlight_end":166,"highlight_start":1,"text":"                                    if variant_positions_list.len() == 1 // Forward/reverse for reference/alternate allele is only counted for single allele variants"},{"highlight_end":70,"highlight_start":1,"text":"                                && sequence_strand == \"R\".to_string()"},{"highlight_end":38,"highlight_start":1,"text":"                                    {"},{"highlight_end":70,"highlight_start":1,"text":"                                        reference_reverse_count += 1;"},{"highlight_end":173,"highlight_start":1,"text":"                                    } else if variant_positions_list.len() == 1 // Forward/reverse for reference/alternate allele is only counted for single allele variants"},{"highlight_end":70,"highlight_start":1,"text":"                                && sequence_strand == \"F\".to_string()"},{"highlight_end":38,"highlight_start":1,"text":"                                    {"},{"highlight_end":70,"highlight_start":1,"text":"                                        reference_forward_count += 1;"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":72,"highlight_start":1,"text":"                                } else if refalt == \"alt\".to_string() {"},{"highlight_end":59,"highlight_start":1,"text":"                                    // Setting read to alt"},{"highlight_end":99,"highlight_start":1,"text":"                                    // Determine which alt allele read needs to be classified into"},{"highlight_end":58,"highlight_start":1,"text":"                                    let alt_allele_name ="},{"highlight_end":86,"highlight_start":1,"text":"                                        alt_allele_names_list[max_index].to_string();"},{"highlight_end":86,"highlight_start":1,"text":"                                    //if !all_alleles.contains_key(alt_allele_name) {"},{"highlight_end":103,"highlight_start":1,"text":"                                    //    all_alleles.insert(alt_allele_name.to_string(), Vec::new());"},{"highlight_end":40,"highlight_start":1,"text":"                                    //}"},{"highlight_end":50,"highlight_start":1,"text":"                                    //all_alleles"},{"highlight_end":68,"highlight_start":1,"text":"                                    //    .get_mut(alt_allele_name)"},{"highlight_end":52,"highlight_start":1,"text":"                                    //    .unwrap()"},{"highlight_end":61,"highlight_start":1,"text":"                                    //    .push(i as usize);"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":93,"highlight_start":1,"text":"                                    //if all_alleles[alt_allele_name] == other_json!(null) {"},{"highlight_end":95,"highlight_start":1,"text":"                                    //    all_alleles[alt_allele_name] = other_json!(vec![i]);"},{"highlight_end":47,"highlight_start":1,"text":"                                    //} else {"},{"highlight_end":71,"highlight_start":1,"text":"                                    //    all_alleles[alt_allele_name]"},{"highlight_end":62,"highlight_start":1,"text":"                                    //        .as_array_mut()"},{"highlight_end":56,"highlight_start":1,"text":"                                    //        .unwrap()"},{"highlight_end":69,"highlight_start":1,"text":"                                    //        .push(other_json!(i));"},{"highlight_end":40,"highlight_start":1,"text":"                                    //}"},{"highlight_end":1,"highlight_start":1,"text":""},{"highlight_end":67,"highlight_start":1,"text":"                                    //all_alleles[i.to_string()] ="},{"highlight_end":90,"highlight_start":1,"text":"                                    //    other_json!(vec![alt_allele_name.to_string()]);"},{"highlight_end":76,"highlight_start":1,"text":"                                    //all_alleles.push(ReadClassification {"},{"highlight_end":67,"highlight_start":1,"text":"                                    //    read_number: i as usize,"},{"highlight_end":77,"highlight_start":1,"text":"                                    //    categories: vec![alt_allele_name],"},{"highlight_end":42,"highlight_start":1,"text":"                                    //});"},{"highlight_end":98,"highlight_start":1,"text":"                                    output_string += &serde_json::to_string(&ReadClassification {"},{"highlight_end":65,"highlight_start":1,"text":"                                        read_number: i as usize,"},{"highlight_end":75,"highlight_start":1,"text":"                                        categories: vec![alt_allele_name],"},{"highlight_end":39,"highlight_start":1,"text":"                                    })"},{"highlight_end":47,"highlight_start":1,"text":"                                    .unwrap();"},{"highlight_end":82,"highlight_start":1,"text":"                                    //output_string += &json::stringify(object! {"},{"highlight_end":67,"highlight_start":1,"text":"                                    //    read_number: i as usize,"},{"highlight_end":77,"highlight_start":1,"text":"                                    //    categories: vec![alt_allele_name],"},{"highlight_end":42,"highlight_start":1,"text":"                                    //});"},{"highlight_end":71,"highlight_start":1,"text":"                                    output_string += &\",\".to_string();"},{"highlight_end":166,"highlight_start":1,"text":"                                    if variant_positions_list.len() == 1 // Forward/reverse for reference/alternate allele is only counted for single allele variants"},{"highlight_end":70,"highlight_start":1,"text":"                                && sequence_strand == \"R\".to_string()"},{"highlight_end":38,"highlight_start":1,"text":"                                    {"},{"highlight_end":70,"highlight_start":1,"text":"                                        alternate_reverse_count += 1;"},{"highlight_end":173,"highlight_start":1,"text":"                                    } else if variant_positions_list.len() == 1 // Forward/reverse for reference/alternate allele is only counted for single allele variants"},{"highlight_end":70,"highlight_start":1,"text":"                                && sequence_strand == \"F\".to_string()"},{"highlight_end":38,"highlight_start":1,"text":"                                    {"},{"highlight_end":70,"highlight_start":1,"text":"                                        alternate_forward_count += 1;"},{"highlight_end":38,"highlight_start":1,"text":"                                    }"},{"highlight_end":41,"highlight_start":1,"text":"                                } else {"},{"highlight_end":57,"highlight_start":1,"text":"                                    // Should not happen"},{"highlight_end":85,"highlight_start":1,"text":"                                    println!(\"Unaccounted scenario, please check!\");"},{"highlight_end":34,"highlight_start":1,"text":"                                }"},{"highlight_end":30,"highlight_start":1,"text":"                            }"},{"highlight_end":36,"highlight_start":1,"text":"                            i += 1;"},{"highlight_end":26,"highlight_start":1,"text":"                        }"}]}},"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":314,"line_start":314,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":25,"text":"                        for read in sequences_list {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/indel.rs:377:45\n    |\n377 | ...                   &spliced_sequence,\n    |                       ^^^^^^^^^^^^^^^^^ help: change this to: `spliced_sequence`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":22279,"byte_start":22262,"column_end":62,"column_start":45,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":377,"line_start":377,"suggested_replacement":"spliced_sequence","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":45,"text":"                                            &spliced_sequence,"}]}]}],"code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","message":"this expression creates a reference which is immediately dereferenced by the compiler","spans":[{"byte_end":22279,"byte_start":22262,"column_end":62,"column_start":45,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":377,"line_start":377,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":45,"text":"                                            &spliced_sequence,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/indel.rs:383:45\n    |\n383 | ...                   &spliced_sequence,\n    |                       ^^^^^^^^^^^^^^^^^ help: change this to: `spliced_sequence`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":22623,"byte_start":22606,"column_end":62,"column_start":45,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":383,"line_start":383,"suggested_replacement":"spliced_sequence","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":45,"text":"                                            &spliced_sequence,"}]}]}],"code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","message":"this expression creates a reference which is immediately dereferenced by the compiler","spans":[{"byte_end":22623,"byte_start":22606,"column_end":62,"column_start":45,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":383,"line_start":383,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":45,"text":"                                            &spliced_sequence,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `alignment_idx` is only used to index `ref_comparisons`\n   --> src/indel.rs:471:54\n    |\n471 | ...                   for alignment_idx in 0..ref_comparisons.len() {\n    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n471 -                                 for alignment_idx in 0..ref_comparisons.len() {\n471 +                                 for <item> in &ref_comparisons {\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":28111,"byte_start":28098,"column_end":50,"column_start":37,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":471,"line_start":471,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":50,"highlight_start":37,"text":"                                for alignment_idx in 0..ref_comparisons.len() {"}]},{"byte_end":28139,"byte_start":28115,"column_end":78,"column_start":54,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":471,"line_start":471,"suggested_replacement":"&ref_comparisons","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":78,"highlight_start":54,"text":"                                for alignment_idx in 0..ref_comparisons.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `alignment_idx` is only used to index `ref_comparisons`","spans":[{"byte_end":28139,"byte_start":28115,"column_end":78,"column_start":54,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":471,"line_start":471,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":78,"highlight_start":54,"text":"                                for alignment_idx in 0..ref_comparisons.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n   --> src/indel.rs:500:44\n    |\n500 |   ...                   && indel_nones[alt_comparisons[alignment_idx].index]\n    |  __________________________^\n501 | | ...                       == false\n    | |__________________________________^ help: try simplifying it as shown: `!indel_nones[alt_comparisons[alignment_idx].index]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":30097,"byte_start":29995,"column_end":53,"column_start":44,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":501,"line_start":500,"suggested_replacement":"!indel_nones[alt_comparisons[alignment_idx].index]","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":93,"highlight_start":44,"text":"                                        && indel_nones[alt_comparisons[alignment_idx].index]"},{"highlight_end":53,"highlight_start":1,"text":"                                            == false"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":30097,"byte_start":29995,"column_end":53,"column_start":44,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":501,"line_start":500,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":93,"highlight_start":44,"text":"                                        && indel_nones[alt_comparisons[alignment_idx].index]"},{"highlight_end":53,"highlight_start":1,"text":"                                            == false"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n   --> src/indel.rs:595:54\n    |\n595 | ...   && refalt == \"ref\".to_string())) // The 2nd condition is experimental and was observed in case of deletion in repeat region. Somehow alt_pol...\n    |                    ^^^^^^^^^^^^^^^^^ help: try: `*\"ref\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":37085,"byte_start":37068,"column_end":71,"column_start":54,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":595,"line_start":595,"suggested_replacement":"*\"ref\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":71,"highlight_start":54,"text":"                                        && refalt == \"ref\".to_string())) // The 2nd condition is experimental and was observed in case of deletion in repeat region. Somehow alt_polyclonal_read_status_global was 0 so it got classifed into ref allele although it does not support ref allele. "}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":37085,"byte_start":37068,"column_end":71,"column_start":54,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":595,"line_start":595,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":71,"highlight_start":54,"text":"                                        && refalt == \"ref\".to_string())) // The 2nd condition is experimental and was observed in case of deletion in repeat region. Somehow alt_polyclonal_read_status_global was 0 so it got classifed into ref allele although it does not support ref allele. "}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n   --> src/indel.rs:618:50\n    |\n618 | ...                   if refalt == \"ref\".to_string() {\n    |                                    ^^^^^^^^^^^^^^^^^ help: try: `*\"ref\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":38821,"byte_start":38804,"column_end":67,"column_start":50,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":618,"line_start":618,"suggested_replacement":"*\"ref\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":67,"highlight_start":50,"text":"                                    if refalt == \"ref\".to_string() {"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":38821,"byte_start":38804,"column_end":67,"column_start":50,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":618,"line_start":618,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":67,"highlight_start":50,"text":"                                    if refalt == \"ref\".to_string() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n   --> src/indel.rs:620:57\n    |\n620 | ...                   } else if refalt == \"alt\".to_string() {\n    |                                           ^^^^^^^^^^^^^^^^^ help: try: `*\"alt\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":38987,"byte_start":38970,"column_end":74,"column_start":57,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":620,"line_start":620,"suggested_replacement":"*\"alt\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":74,"highlight_start":57,"text":"                                    } else if refalt == \"alt\".to_string() {"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":38987,"byte_start":38970,"column_end":74,"column_start":57,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":620,"line_start":620,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":74,"highlight_start":57,"text":"                                    } else if refalt == \"alt\".to_string() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/indel.rs:640:54\n    |\n640 | ...                   output_string += &\",\".to_string();\n    |                                        ^^^^^^^^^^^^^^^^ help: use: `\",\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":40353,"byte_start":40337,"column_end":70,"column_start":54,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":640,"line_start":640,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":54,"text":"                                    output_string += &\",\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":40353,"byte_start":40337,"column_end":70,"column_start":54,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":640,"line_start":640,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":54,"text":"                                    output_string += &\",\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n   --> src/indel.rs:673:40\n    |\n673 | ...                   if ref_is_ambiguous == true {\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `ref_is_ambiguous`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":42605,"byte_start":42581,"column_end":64,"column_start":40,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":673,"line_start":673,"suggested_replacement":"ref_is_ambiguous","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":64,"highlight_start":40,"text":"                                    if ref_is_ambiguous == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":42605,"byte_start":42581,"column_end":64,"column_start":40,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":673,"line_start":673,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":64,"highlight_start":40,"text":"                                    if ref_is_ambiguous == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/indel.rs:693:54\n    |\n693 | ...                   output_string += &\",\".to_string();\n    |                                        ^^^^^^^^^^^^^^^^ help: use: `\",\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":43935,"byte_start":43919,"column_end":70,"column_start":54,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":693,"line_start":693,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":54,"text":"                                    output_string += &\",\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":43935,"byte_start":43919,"column_end":70,"column_start":54,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":693,"line_start":693,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":54,"text":"                                    output_string += &\",\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n   --> src/indel.rs:694:53\n    |\n694 | ...                   } else if refalt == \"ref\".to_string() {\n    |                                           ^^^^^^^^^^^^^^^^^ help: try: `*\"ref\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":44006,"byte_start":43989,"column_end":70,"column_start":53,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":694,"line_start":694,"suggested_replacement":"*\"ref\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":53,"text":"                                } else if refalt == \"ref\".to_string() {"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":44006,"byte_start":43989,"column_end":70,"column_start":53,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":694,"line_start":694,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":53,"text":"                                } else if refalt == \"ref\".to_string() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/indel.rs:708:54\n    |\n708 | ...                   output_string += &\",\".to_string();\n    |                                        ^^^^^^^^^^^^^^^^ help: use: `\",\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":44938,"byte_start":44922,"column_end":70,"column_start":54,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":708,"line_start":708,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":54,"text":"                                    output_string += &\",\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":44938,"byte_start":44922,"column_end":70,"column_start":54,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":708,"line_start":708,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":54,"text":"                                    output_string += &\",\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n   --> src/indel.rs:710:55\n    |\n710 | ...                   && sequence_strand == \"R\".to_string()\n    |                                             ^^^^^^^^^^^^^^^ help: try: `*\"R\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":45175,"byte_start":45160,"column_end":70,"column_start":55,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":710,"line_start":710,"suggested_replacement":"*\"R\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":55,"text":"                                && sequence_strand == \"R\".to_string()"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":45175,"byte_start":45160,"column_end":70,"column_start":55,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":710,"line_start":710,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":55,"text":"                                && sequence_strand == \"R\".to_string()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n   --> src/indel.rs:714:55\n    |\n714 | ...                   && sequence_strand == \"F\".to_string()\n    |                                             ^^^^^^^^^^^^^^^ help: try: `*\"F\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":45526,"byte_start":45511,"column_end":70,"column_start":55,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":714,"line_start":714,"suggested_replacement":"*\"F\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":55,"text":"                                && sequence_strand == \"F\".to_string()"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":45526,"byte_start":45511,"column_end":70,"column_start":55,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":714,"line_start":714,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":55,"text":"                                && sequence_strand == \"F\".to_string()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n   --> src/indel.rs:718:53\n    |\n718 | ...                   } else if refalt == \"alt\".to_string() {\n    |                                           ^^^^^^^^^^^^^^^^^ help: try: `*\"alt\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":45742,"byte_start":45725,"column_end":70,"column_start":53,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":718,"line_start":718,"suggested_replacement":"*\"alt\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":53,"text":"                                } else if refalt == \"alt\".to_string() {"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":45742,"byte_start":45725,"column_end":70,"column_start":53,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":718,"line_start":718,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":53,"text":"                                } else if refalt == \"alt\".to_string() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n   --> src/indel.rs:755:54\n    |\n755 | ...                   output_string += &\",\".to_string();\n    |                                        ^^^^^^^^^^^^^^^^ help: use: `\",\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":48122,"byte_start":48106,"column_end":70,"column_start":54,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":755,"line_start":755,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":54,"text":"                                    output_string += &\",\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":48122,"byte_start":48106,"column_end":70,"column_start":54,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":755,"line_start":755,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":54,"text":"                                    output_string += &\",\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n   --> src/indel.rs:757:55\n    |\n757 | ...                   && sequence_strand == \"R\".to_string()\n    |                                             ^^^^^^^^^^^^^^^ help: try: `*\"R\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":48359,"byte_start":48344,"column_end":70,"column_start":55,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":757,"line_start":757,"suggested_replacement":"*\"R\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":55,"text":"                                && sequence_strand == \"R\".to_string()"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":48359,"byte_start":48344,"column_end":70,"column_start":55,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":757,"line_start":757,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":55,"text":"                                && sequence_strand == \"R\".to_string()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n   --> src/indel.rs:761:55\n    |\n761 | ...                   && sequence_strand == \"F\".to_string()\n    |                                             ^^^^^^^^^^^^^^^ help: try: `*\"F\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":48710,"byte_start":48695,"column_end":70,"column_start":55,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":761,"line_start":761,"suggested_replacement":"*\"F\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":55,"text":"                                && sequence_strand == \"F\".to_string()"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":48710,"byte_start":48695,"column_end":70,"column_start":55,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":761,"line_start":761,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":55,"text":"                                && sequence_strand == \"F\".to_string()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/indel.rs:925:53\n    |\n925 | ...                   &spliced_sequence,\n    |                       ^^^^^^^^^^^^^^^^^ help: change this to: `spliced_sequence`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":60885,"byte_start":60868,"column_end":70,"column_start":53,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":925,"line_start":925,"suggested_replacement":"spliced_sequence","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":53,"text":"                                                    &spliced_sequence,"}]}]}],"code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","message":"this expression creates a reference which is immediately dereferenced by the compiler","spans":[{"byte_end":60885,"byte_start":60868,"column_end":70,"column_start":53,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":925,"line_start":925,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":53,"text":"                                                    &spliced_sequence,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/indel.rs:934:53\n    |\n934 | ...                   &spliced_sequence,\n    |                       ^^^^^^^^^^^^^^^^^ help: change this to: `spliced_sequence`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":61483,"byte_start":61466,"column_end":70,"column_start":53,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":934,"line_start":934,"suggested_replacement":"spliced_sequence","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":53,"text":"                                                    &spliced_sequence,"}]}]}],"code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","message":"this expression creates a reference which is immediately dereferenced by the compiler","spans":[{"byte_end":61483,"byte_start":61466,"column_end":70,"column_start":53,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":934,"line_start":934,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":53,"text":"                                                    &spliced_sequence,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `alignment_idx` is only used to index `ref_comparisons`\n    --> src/indel.rs:1012:66\n     |\n1012 | ...                   for alignment_idx in 0..ref_comparisons.len() {\n     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n     |\n1012 -                                             for alignment_idx in 0..ref_comparisons.len() {\n1012 +                                             for <item> in &ref_comparisons {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":67193,"byte_start":67180,"column_end":62,"column_start":49,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1012,"line_start":1012,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":62,"highlight_start":49,"text":"                                            for alignment_idx in 0..ref_comparisons.len() {"}]},{"byte_end":67221,"byte_start":67197,"column_end":90,"column_start":66,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1012,"line_start":1012,"suggested_replacement":"&ref_comparisons","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":90,"highlight_start":66,"text":"                                            for alignment_idx in 0..ref_comparisons.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `alignment_idx` is only used to index `ref_comparisons`","spans":[{"byte_end":67221,"byte_start":67197,"column_end":90,"column_start":66,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1012,"line_start":1012,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":90,"highlight_start":66,"text":"                                            for alignment_idx in 0..ref_comparisons.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against false can be replaced by a negation\n    --> src/indel.rs:1030:56\n     |\n1030 |   ...                   && indel_nones\n     |  __________________________^\n1031 | | ...                       [alt_comparisons[alignment_idx].index]\n1032 | | ...                       == false\n     | |__________________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\nhelp: try simplifying it as shown\n     |\n1030 ~                                                     && !indel_nones\n1031 +                                                         [alt_comparisons[alignment_idx].index]\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":68683,"byte_start":68512,"column_end":65,"column_start":56,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1032,"line_start":1030,"suggested_replacement":"!indel_nones\n                                                        [alt_comparisons[alignment_idx].index]","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":67,"highlight_start":56,"text":"                                                    && indel_nones"},{"highlight_end":95,"highlight_start":1,"text":"                                                        [alt_comparisons[alignment_idx].index]"},{"highlight_end":65,"highlight_start":1,"text":"                                                        == false"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against false can be replaced by a negation","spans":[{"byte_end":68683,"byte_start":68512,"column_end":65,"column_start":56,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1032,"line_start":1030,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":67,"highlight_start":56,"text":"                                                    && indel_nones"},{"highlight_end":95,"highlight_start":1,"text":"                                                        [alt_comparisons[alignment_idx].index]"},{"highlight_end":65,"highlight_start":1,"text":"                                                        == false"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n    --> src/indel.rs:1131:66\n     |\n1131 | ...                   && refalt == \"ref\".to_string()))\n     |                                    ^^^^^^^^^^^^^^^^^ help: try: `*\"ref\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":76928,"byte_start":76911,"column_end":83,"column_start":66,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1131,"line_start":1131,"suggested_replacement":"*\"ref\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":83,"highlight_start":66,"text":"                                                    && refalt == \"ref\".to_string()))"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":76928,"byte_start":76911,"column_end":83,"column_start":66,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1131,"line_start":1131,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":83,"highlight_start":66,"text":"                                                    && refalt == \"ref\".to_string()))"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n    --> src/indel.rs:1150:62\n     |\n1150 | ...                   if refalt == \"ref\".to_string() {\n     |                                    ^^^^^^^^^^^^^^^^^ help: try: `*\"ref\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":78327,"byte_start":78310,"column_end":79,"column_start":62,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1150,"line_start":1150,"suggested_replacement":"*\"ref\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":79,"highlight_start":62,"text":"                                                if refalt == \"ref\".to_string() {"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":78327,"byte_start":78310,"column_end":79,"column_start":62,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1150,"line_start":1150,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":79,"highlight_start":62,"text":"                                                if refalt == \"ref\".to_string() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n    --> src/indel.rs:1153:69\n     |\n1153 | ...                   } else if refalt == \"alt\".to_string() {\n     |                                           ^^^^^^^^^^^^^^^^^ help: try: `*\"alt\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":78574,"byte_start":78557,"column_end":86,"column_start":69,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1153,"line_start":1153,"suggested_replacement":"*\"alt\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":86,"highlight_start":69,"text":"                                                } else if refalt == \"alt\".to_string() {"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":78574,"byte_start":78557,"column_end":86,"column_start":69,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1153,"line_start":1153,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":86,"highlight_start":69,"text":"                                                } else if refalt == \"alt\".to_string() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`usize` -> `usize`)\n    --> src/indel.rs:1167:70\n     |\n1167 | ...                   read_number: iter as usize,\n     |                                    ^^^^^^^^^^^^^ help: try: `iter`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":79712,"byte_start":79699,"column_end":83,"column_start":70,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1167,"line_start":1167,"suggested_replacement":"iter","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":83,"highlight_start":70,"text":"                                                        read_number: iter as usize,"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`usize` -> `usize`)","spans":[{"byte_end":79712,"byte_start":79699,"column_end":83,"column_start":70,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1167,"line_start":1167,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":83,"highlight_start":70,"text":"                                                        read_number: iter as usize,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n    --> src/indel.rs:1171:73\n     |\n1171 | ...                   output_string_thread += &\",\".to_string();\n     |                                               ^^^^^^^^^^^^^^^^ help: use: `\",\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":80015,"byte_start":79999,"column_end":89,"column_start":73,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1171,"line_start":1171,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":89,"highlight_start":73,"text":"                                                output_string_thread += &\",\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":80015,"byte_start":79999,"column_end":89,"column_start":73,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1171,"line_start":1171,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":89,"highlight_start":73,"text":"                                                output_string_thread += &\",\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/indel.rs:1199:52\n     |\n1199 | ...                   if ref_is_ambiguous == true {\n     |                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `ref_is_ambiguous`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":82213,"byte_start":82189,"column_end":76,"column_start":52,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1199,"line_start":1199,"suggested_replacement":"ref_is_ambiguous","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":76,"highlight_start":52,"text":"                                                if ref_is_ambiguous == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":82213,"byte_start":82189,"column_end":76,"column_start":52,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1199,"line_start":1199,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":76,"highlight_start":52,"text":"                                                if ref_is_ambiguous == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`usize` -> `usize`)\n    --> src/indel.rs:1211:70\n     |\n1211 | ...                   read_number: iter as usize,\n     |                                    ^^^^^^^^^^^^^ help: try: `iter`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":83191,"byte_start":83178,"column_end":83,"column_start":70,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1211,"line_start":1211,"suggested_replacement":"iter","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":83,"highlight_start":70,"text":"                                                        read_number: iter as usize,"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`usize` -> `usize`)","spans":[{"byte_end":83191,"byte_start":83178,"column_end":83,"column_start":70,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1211,"line_start":1211,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":83,"highlight_start":70,"text":"                                                        read_number: iter as usize,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n    --> src/indel.rs:1215:73\n     |\n1215 | ...                   output_string_thread += &\",\".to_string();\n     |                                               ^^^^^^^^^^^^^^^^ help: use: `\",\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":83499,"byte_start":83483,"column_end":89,"column_start":73,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1215,"line_start":1215,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":89,"highlight_start":73,"text":"                                                output_string_thread += &\",\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":83499,"byte_start":83483,"column_end":89,"column_start":73,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1215,"line_start":1215,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":89,"highlight_start":73,"text":"                                                output_string_thread += &\",\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n    --> src/indel.rs:1218:65\n     |\n1218 | ...                   } else if refalt == \"ref\".to_string() {\n     |                                           ^^^^^^^^^^^^^^^^^ help: try: `*\"ref\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":83755,"byte_start":83738,"column_end":82,"column_start":65,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1218,"line_start":1218,"suggested_replacement":"*\"ref\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":82,"highlight_start":65,"text":"                                            } else if refalt == \"ref\".to_string() {"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":83755,"byte_start":83738,"column_end":82,"column_start":65,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1218,"line_start":1218,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":82,"highlight_start":65,"text":"                                            } else if refalt == \"ref\".to_string() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`usize` -> `usize`)\n    --> src/indel.rs:1238:70\n     |\n1238 | ...                   read_number: iter as usize,\n     |                                    ^^^^^^^^^^^^^ help: try: `iter`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":85293,"byte_start":85280,"column_end":83,"column_start":70,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1238,"line_start":1238,"suggested_replacement":"iter","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":83,"highlight_start":70,"text":"                                                        read_number: iter as usize,"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`usize` -> `usize`)","spans":[{"byte_end":85293,"byte_start":85280,"column_end":83,"column_start":70,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1238,"line_start":1238,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":83,"highlight_start":70,"text":"                                                        read_number: iter as usize,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n    --> src/indel.rs:1242:73\n     |\n1242 | ...                   output_string_thread += &\",\".to_string();\n     |                                               ^^^^^^^^^^^^^^^^ help: use: `\",\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":85594,"byte_start":85578,"column_end":89,"column_start":73,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1242,"line_start":1242,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":89,"highlight_start":73,"text":"                                                output_string_thread += &\",\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":85594,"byte_start":85578,"column_end":89,"column_start":73,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1242,"line_start":1242,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":89,"highlight_start":73,"text":"                                                output_string_thread += &\",\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n    --> src/indel.rs:1244:55\n     |\n1244 | ...                   && sequence_strand == \"R\".to_string()\n     |                                             ^^^^^^^^^^^^^^^ help: try: `*\"R\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":85843,"byte_start":85828,"column_end":70,"column_start":55,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1244,"line_start":1244,"suggested_replacement":"*\"R\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":55,"text":"                                && sequence_strand == \"R\".to_string()"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":85843,"byte_start":85828,"column_end":70,"column_start":55,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1244,"line_start":1244,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":55,"text":"                                && sequence_strand == \"R\".to_string()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n    --> src/indel.rs:1248:55\n     |\n1248 | ...                   && sequence_strand == \"F\".to_string()\n     |                                             ^^^^^^^^^^^^^^^ help: try: `*\"F\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":86237,"byte_start":86222,"column_end":70,"column_start":55,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1248,"line_start":1248,"suggested_replacement":"*\"F\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":55,"text":"                                && sequence_strand == \"F\".to_string()"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":86237,"byte_start":86222,"column_end":70,"column_start":55,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1248,"line_start":1248,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":55,"text":"                                && sequence_strand == \"F\".to_string()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n    --> src/indel.rs:1252:65\n     |\n1252 | ...                   } else if refalt == \"alt\".to_string() {\n     |                                           ^^^^^^^^^^^^^^^^^ help: try: `*\"alt\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":86508,"byte_start":86491,"column_end":82,"column_start":65,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1252,"line_start":1252,"suggested_replacement":"*\"alt\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":82,"highlight_start":65,"text":"                                            } else if refalt == \"alt\".to_string() {"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":86508,"byte_start":86491,"column_end":82,"column_start":65,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1252,"line_start":1252,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":82,"highlight_start":65,"text":"                                            } else if refalt == \"alt\".to_string() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: casting to the same type is unnecessary (`usize` -> `usize`)\n    --> src/indel.rs:1278:70\n     |\n1278 | ...                   read_number: iter as usize,\n     |                                    ^^^^^^^^^^^^^ help: try: `iter`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":88458,"byte_start":88445,"column_end":83,"column_start":70,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1278,"line_start":1278,"suggested_replacement":"iter","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":83,"highlight_start":70,"text":"                                                        read_number: iter as usize,"}]}]}],"code":{"code":"clippy::unnecessary_cast","explanation":null},"level":"warning","message":"casting to the same type is unnecessary (`usize` -> `usize`)","spans":[{"byte_end":88458,"byte_start":88445,"column_end":83,"column_start":70,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1278,"line_start":1278,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":83,"highlight_start":70,"text":"                                                        read_number: iter as usize,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n    --> src/indel.rs:1282:73\n     |\n1282 | ...                   output_string_thread += &\",\".to_string();\n     |                                               ^^^^^^^^^^^^^^^^ help: use: `\",\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":88757,"byte_start":88741,"column_end":89,"column_start":73,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1282,"line_start":1282,"suggested_replacement":"\",\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":89,"highlight_start":73,"text":"                                                output_string_thread += &\",\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":88757,"byte_start":88741,"column_end":89,"column_start":73,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1282,"line_start":1282,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":89,"highlight_start":73,"text":"                                                output_string_thread += &\",\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n    --> src/indel.rs:1284:55\n     |\n1284 | ...                   && sequence_strand == \"R\".to_string()\n     |                                             ^^^^^^^^^^^^^^^ help: try: `*\"R\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":89006,"byte_start":88991,"column_end":70,"column_start":55,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1284,"line_start":1284,"suggested_replacement":"*\"R\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":55,"text":"                                && sequence_strand == \"R\".to_string()"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":89006,"byte_start":88991,"column_end":70,"column_start":55,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1284,"line_start":1284,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":55,"text":"                                && sequence_strand == \"R\".to_string()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this creates an owned instance just for comparison\n    --> src/indel.rs:1288:55\n     |\n1288 | ...                   && sequence_strand == \"F\".to_string()\n     |                                             ^^^^^^^^^^^^^^^ help: try: `*\"F\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cmp_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try","rendered":null,"spans":[{"byte_end":89400,"byte_start":89385,"column_end":70,"column_start":55,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1288,"line_start":1288,"suggested_replacement":"*\"F\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":70,"highlight_start":55,"text":"                                && sequence_strand == \"F\".to_string()"}]}]}],"code":{"code":"clippy::cmp_owned","explanation":null},"level":"warning","message":"this creates an owned instance just for comparison","spans":[{"byte_end":89400,"byte_start":89385,"column_end":70,"column_start":55,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1288,"line_start":1288,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":70,"highlight_start":55,"text":"                                && sequence_strand == \"F\".to_string()"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1359:24\n     |\n1359 |                     if output_string.len() == 0 {\n     |                        ^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `output_string.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":94215,"byte_start":94191,"column_end":48,"column_start":24,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1359,"line_start":1359,"suggested_replacement":"output_string.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":48,"highlight_start":24,"text":"                    if output_string.len() == 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":94215,"byte_start":94191,"column_end":48,"column_start":24,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1359,"line_start":1359,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":24,"text":"                    if output_string.len() == 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unnecessary use of `to_string`\n    --> src/indel.rs:1363:42\n     |\n1363 |                         output_string += &\"]\".to_string();\n     |                                          ^^^^^^^^^^^^^^^^ help: use: `\"]\"`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use","rendered":null,"spans":[{"byte_end":94450,"byte_start":94434,"column_end":58,"column_start":42,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1363,"line_start":1363,"suggested_replacement":"\"]\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":42,"text":"                        output_string += &\"]\".to_string();"}]}]}],"code":{"code":"clippy::unnecessary_to_owned","explanation":null},"level":"warning","message":"unnecessary use of `to_string`","spans":[{"byte_end":94450,"byte_start":94434,"column_end":58,"column_start":42,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1363,"line_start":1363,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":42,"text":"                        output_string += &\"]\".to_string();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this function has too many arguments (14/7)\n    --> src/indel.rs:1449:1\n     |\n1449 | / fn check_polyclonal_with_read_alignment(\n1450 | |     alignment_side: &String,\n1451 | |     q_seq_alt: &String,\n1452 | |     q_seq_ref: &String,\n...    |\n1463 | |     num_variants: usize,\n1464 | | ) -> (i64, i64) {\n     | |_______________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments","rendered":null,"spans":[]}],"code":{"code":"clippy::too_many_arguments","explanation":null},"level":"warning","message":"this function has too many arguments (14/7)","spans":[{"byte_end":98384,"byte_start":97973,"column_end":16,"column_start":1,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1464,"line_start":1449,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":1,"text":"fn check_polyclonal_with_read_alignment("},{"highlight_end":29,"highlight_start":1,"text":"    alignment_side: &String,"},{"highlight_end":24,"highlight_start":1,"text":"    q_seq_alt: &String,"},{"highlight_end":24,"highlight_start":1,"text":"    q_seq_ref: &String,"},{"highlight_end":24,"highlight_start":1,"text":"    r_seq_alt: &String,"},{"highlight_end":24,"highlight_start":1,"text":"    r_seq_ref: &String,"},{"highlight_end":24,"highlight_start":1,"text":"    align_alt: &String,"},{"highlight_end":24,"highlight_start":1,"text":"    align_ref: &String,"},{"highlight_end":33,"highlight_start":1,"text":"    correct_start_position: i64,"},{"highlight_end":31,"highlight_start":1,"text":"    correct_end_position: i64,"},{"highlight_end":22,"highlight_start":1,"text":"    variant_pos: i64,"},{"highlight_end":23,"highlight_start":1,"text":"    ref_length: usize,"},{"highlight_end":23,"highlight_start":1,"text":"    alt_length: usize,"},{"highlight_end":25,"highlight_start":1,"text":"    indel_length: usize,"},{"highlight_end":25,"highlight_start":1,"text":"    num_variants: usize,"},{"highlight_end":16,"highlight_start":1,"text":") -> (i64, i64) {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n    --> src/indel.rs:1455:16\n     |\n1455 |     align_alt: &String,\n     |                ^^^^^^^ help: change this to: `&str`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":98161,"byte_start":98154,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1455,"line_start":1455,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":23,"highlight_start":16,"text":"    align_alt: &String,"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":98161,"byte_start":98154,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1455,"line_start":1455,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":16,"text":"    align_alt: &String,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n    --> src/indel.rs:1456:16\n     |\n1456 |     align_ref: &String,\n     |                ^^^^^^^ help: change this to: `&str`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":98185,"byte_start":98178,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1456,"line_start":1456,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":23,"highlight_start":16,"text":"    align_ref: &String,"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":98185,"byte_start":98178,"column_end":23,"column_start":16,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1456,"line_start":1456,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":16,"text":"    align_ref: &String,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src/indel.rs:1477:9\n     |\n1477 |         &r_seq_alt,\n     |         ^^^^^^^^^^ help: change this to: `r_seq_alt`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":98775,"byte_start":98765,"column_end":19,"column_start":9,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1477,"line_start":1477,"suggested_replacement":"r_seq_alt","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":19,"highlight_start":9,"text":"        &r_seq_alt,"}]}]}],"code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","message":"this expression creates a reference which is immediately dereferenced by the compiler","spans":[{"byte_end":98775,"byte_start":98765,"column_end":19,"column_start":9,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1477,"line_start":1477,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":9,"text":"        &r_seq_alt,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src/indel.rs:1478:9\n     |\n1478 |         &r_seq_ref,\n     |         ^^^^^^^^^^ help: change this to: `r_seq_ref`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":98795,"byte_start":98785,"column_end":19,"column_start":9,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1478,"line_start":1478,"suggested_replacement":"r_seq_ref","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":19,"highlight_start":9,"text":"        &r_seq_ref,"}]}]}],"code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","message":"this expression creates a reference which is immediately dereferenced by the compiler","spans":[{"byte_end":98795,"byte_start":98785,"column_end":19,"column_start":9,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1478,"line_start":1478,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":9,"text":"        &r_seq_ref,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `k` is only used to index `right_sequence_vector`\n    --> src/indel.rs:1588:14\n     |\n1588 |     for k in 0..surrounding_region_length as usize {\n     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n     |\n1588 -     for k in 0..surrounding_region_length as usize {\n1588 +     for <item> in right_sequence_vector.iter().take(surrounding_region_length as usize) {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":104205,"byte_start":104204,"column_end":10,"column_start":9,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1588,"line_start":1588,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":10,"highlight_start":9,"text":"    for k in 0..surrounding_region_length as usize {"}]},{"byte_end":104246,"byte_start":104209,"column_end":51,"column_start":14,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1588,"line_start":1588,"suggested_replacement":"right_sequence_vector.iter().take(surrounding_region_length as usize)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":51,"highlight_start":14,"text":"    for k in 0..surrounding_region_length as usize {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `k` is only used to index `right_sequence_vector`","spans":[{"byte_end":104246,"byte_start":104209,"column_end":51,"column_start":14,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1588,"line_start":1588,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":14,"text":"    for k in 0..surrounding_region_length as usize {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1610:13\n     |\n1610 |         && (ref_nucleotides.len() > 0 || alt_nucleotides.len() > 0)\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!ref_nucleotides.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":105693,"byte_start":105668,"column_end":38,"column_start":13,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1610,"line_start":1610,"suggested_replacement":"!ref_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":38,"highlight_start":13,"text":"        && (ref_nucleotides.len() > 0 || alt_nucleotides.len() > 0)"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":105693,"byte_start":105668,"column_end":38,"column_start":13,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1610,"line_start":1610,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":13,"text":"        && (ref_nucleotides.len() > 0 || alt_nucleotides.len() > 0)"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1610:42\n     |\n1610 |         && (ref_nucleotides.len() > 0 || alt_nucleotides.len() > 0)\n     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!alt_nucleotides.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":105722,"byte_start":105697,"column_end":67,"column_start":42,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1610,"line_start":1610,"suggested_replacement":"!alt_nucleotides.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":67,"highlight_start":42,"text":"        && (ref_nucleotides.len() > 0 || alt_nucleotides.len() > 0)"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":105722,"byte_start":105697,"column_end":67,"column_start":42,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1610,"line_start":1610,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":67,"highlight_start":42,"text":"        && (ref_nucleotides.len() > 0 || alt_nucleotides.len() > 0)"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `j` is only used to index `ref_nucleotides`\n    --> src/indel.rs:1616:22\n     |\n1616 |             for j in 1..ref_nucleotides.len() {\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n     |\n1616 -             for j in 1..ref_nucleotides.len() {\n1616 +             for <item> in ref_nucleotides.iter().skip(1) {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":106021,"byte_start":106020,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1616,"line_start":1616,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":18,"highlight_start":17,"text":"            for j in 1..ref_nucleotides.len() {"}]},{"byte_end":106049,"byte_start":106025,"column_end":46,"column_start":22,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1616,"line_start":1616,"suggested_replacement":"ref_nucleotides.iter().skip(1)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":46,"highlight_start":22,"text":"            for j in 1..ref_nucleotides.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `j` is only used to index `ref_nucleotides`","spans":[{"byte_end":106049,"byte_start":106025,"column_end":46,"column_start":22,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1616,"line_start":1616,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":22,"text":"            for j in 1..ref_nucleotides.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `j` is only used to index `alt_nucleotides`\n    --> src/indel.rs:1621:22\n     |\n1621 |             for j in 1..alt_nucleotides.len() {\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n     |\n1621 -             for j in 1..alt_nucleotides.len() {\n1621 +             for <item> in alt_nucleotides.iter().skip(1) {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":106201,"byte_start":106200,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1621,"line_start":1621,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":18,"highlight_start":17,"text":"            for j in 1..alt_nucleotides.len() {"}]},{"byte_end":106229,"byte_start":106205,"column_end":46,"column_start":22,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1621,"line_start":1621,"suggested_replacement":"alt_nucleotides.iter().skip(1)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":46,"highlight_start":22,"text":"            for j in 1..alt_nucleotides.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `j` is only used to index `alt_nucleotides`","spans":[{"byte_end":106229,"byte_start":106205,"column_end":46,"column_start":22,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1621,"line_start":1621,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":22,"text":"            for j in 1..alt_nucleotides.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `j` is only used to index `ref_nucleotides`\n    --> src/indel.rs:1628:22\n     |\n1628 |             for j in 0..ref_nucleotides.len() {\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n     |\n1628 -             for j in 0..ref_nucleotides.len() {\n1628 +             for <item> in &ref_nucleotides {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":106445,"byte_start":106444,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1628,"line_start":1628,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":18,"highlight_start":17,"text":"            for j in 0..ref_nucleotides.len() {"}]},{"byte_end":106473,"byte_start":106449,"column_end":46,"column_start":22,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1628,"line_start":1628,"suggested_replacement":"&ref_nucleotides","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":46,"highlight_start":22,"text":"            for j in 0..ref_nucleotides.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `j` is only used to index `ref_nucleotides`","spans":[{"byte_end":106473,"byte_start":106449,"column_end":46,"column_start":22,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1628,"line_start":1628,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":22,"text":"            for j in 0..ref_nucleotides.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `j` is only used to index `alt_nucleotides`\n    --> src/indel.rs:1633:22\n     |\n1633 |             for j in 0..alt_nucleotides.len() {\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n     |\n1633 -             for j in 0..alt_nucleotides.len() {\n1633 +             for <item> in &alt_nucleotides {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":106625,"byte_start":106624,"column_end":18,"column_start":17,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1633,"line_start":1633,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":18,"highlight_start":17,"text":"            for j in 0..alt_nucleotides.len() {"}]},{"byte_end":106653,"byte_start":106629,"column_end":46,"column_start":22,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1633,"line_start":1633,"suggested_replacement":"&alt_nucleotides","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":46,"highlight_start":22,"text":"            for j in 0..alt_nucleotides.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `j` is only used to index `alt_nucleotides`","spans":[{"byte_end":106653,"byte_start":106629,"column_end":46,"column_start":22,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1633,"line_start":1633,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":22,"text":"            for j in 0..alt_nucleotides.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unneeded late initialization\n    --> src/indel.rs:1639:5\n     |\n1639 |     let left_nearby_seq;\n     |     ^^^^^^^^^^^^^^^^^^^^ created here\n...\n1683 |     left_nearby_seq = realign::reverse_string(&left_nearby_seq_reverse);\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ initialised here\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init\n     = note: `#[warn(clippy::needless_late_init)]` on by default\nhelp: move the declaration `left_nearby_seq` here\n     |\n1639 ~     \n1640 |     let mut left_nearby_seq_reverse = String::new();\n ...\n1682 |\n1683 ~     let left_nearby_seq = realign::reverse_string(&left_nearby_seq_reverse);\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(clippy::needless_late_init)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"move the declaration `left_nearby_seq` here","rendered":null,"spans":[{"byte_end":106866,"byte_start":106846,"column_end":25,"column_start":5,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1639,"line_start":1639,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":25,"highlight_start":5,"text":"    let left_nearby_seq;"}]},{"byte_end":108763,"byte_start":108748,"column_end":20,"column_start":5,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1683,"line_start":1683,"suggested_replacement":"let left_nearby_seq","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":20,"highlight_start":5,"text":"    left_nearby_seq = realign::reverse_string(&left_nearby_seq_reverse);"}]}]}],"code":{"code":"clippy::needless_late_init","explanation":null},"level":"warning","message":"unneeded late initialization","spans":[{"byte_end":106866,"byte_start":106846,"column_end":25,"column_start":5,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":"created here","line_end":1639,"line_start":1639,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":25,"highlight_start":5,"text":"    let left_nearby_seq;"}]},{"byte_end":108815,"byte_start":108748,"column_end":72,"column_start":5,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":"initialised here","line_end":1683,"line_start":1683,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":72,"highlight_start":5,"text":"    left_nearby_seq = realign::reverse_string(&left_nearby_seq_reverse);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1729:16\n     |\n1729 |             if repeating_sequence_left.len() == 0 && repeating_sequence_right.len() == 0 {\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `repeating_sequence_left.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":111268,"byte_start":111234,"column_end":50,"column_start":16,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1729,"line_start":1729,"suggested_replacement":"repeating_sequence_left.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":50,"highlight_start":16,"text":"            if repeating_sequence_left.len() == 0 && repeating_sequence_right.len() == 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":111268,"byte_start":111234,"column_end":50,"column_start":16,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1729,"line_start":1729,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":16,"text":"            if repeating_sequence_left.len() == 0 && repeating_sequence_right.len() == 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1729:54\n     |\n1729 |             if repeating_sequence_left.len() == 0 && repeating_sequence_right.len() == 0 {\n     |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `repeating_sequence_right.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":111307,"byte_start":111272,"column_end":89,"column_start":54,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1729,"line_start":1729,"suggested_replacement":"repeating_sequence_right.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":89,"highlight_start":54,"text":"            if repeating_sequence_left.len() == 0 && repeating_sequence_right.len() == 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":111307,"byte_start":111272,"column_end":89,"column_start":54,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1729,"line_start":1729,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":89,"highlight_start":54,"text":"            if repeating_sequence_left.len() == 0 && repeating_sequence_right.len() == 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1733:23\n     |\n1733 |             } else if repeating_sequence_left.len() > 0 && repeating_sequence_right.len() == 0 {\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!repeating_sequence_left.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":111529,"byte_start":111496,"column_end":56,"column_start":23,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1733,"line_start":1733,"suggested_replacement":"!repeating_sequence_left.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":56,"highlight_start":23,"text":"            } else if repeating_sequence_left.len() > 0 && repeating_sequence_right.len() == 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":111529,"byte_start":111496,"column_end":56,"column_start":23,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1733,"line_start":1733,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":23,"text":"            } else if repeating_sequence_left.len() > 0 && repeating_sequence_right.len() == 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1733:60\n     |\n1733 |             } else if repeating_sequence_left.len() > 0 && repeating_sequence_right.len() == 0 {\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `repeating_sequence_right.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":111568,"byte_start":111533,"column_end":95,"column_start":60,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1733,"line_start":1733,"suggested_replacement":"repeating_sequence_right.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":95,"highlight_start":60,"text":"            } else if repeating_sequence_left.len() > 0 && repeating_sequence_right.len() == 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":111568,"byte_start":111533,"column_end":95,"column_start":60,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1733,"line_start":1733,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":95,"highlight_start":60,"text":"            } else if repeating_sequence_left.len() > 0 && repeating_sequence_right.len() == 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1739:23\n     |\n1739 |             } else if repeating_sequence_left.len() == 0 && repeating_sequence_right.len() > 0 {\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `repeating_sequence_left.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":112029,"byte_start":111995,"column_end":57,"column_start":23,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1739,"line_start":1739,"suggested_replacement":"repeating_sequence_left.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":57,"highlight_start":23,"text":"            } else if repeating_sequence_left.len() == 0 && repeating_sequence_right.len() > 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":112029,"byte_start":111995,"column_end":57,"column_start":23,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1739,"line_start":1739,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":57,"highlight_start":23,"text":"            } else if repeating_sequence_left.len() == 0 && repeating_sequence_right.len() > 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1739:61\n     |\n1739 |             } else if repeating_sequence_left.len() == 0 && repeating_sequence_right.len() > 0 {\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!repeating_sequence_right.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":112067,"byte_start":112033,"column_end":95,"column_start":61,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1739,"line_start":1739,"suggested_replacement":"!repeating_sequence_right.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":95,"highlight_start":61,"text":"            } else if repeating_sequence_left.len() == 0 && repeating_sequence_right.len() > 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":112067,"byte_start":112033,"column_end":95,"column_start":61,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1739,"line_start":1739,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":95,"highlight_start":61,"text":"            } else if repeating_sequence_left.len() == 0 && repeating_sequence_right.len() > 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1743:23\n     |\n1743 |             } else if repeating_sequence_left.len() > 0 && repeating_sequence_right.len() > 0 {\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!repeating_sequence_left.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":112357,"byte_start":112324,"column_end":56,"column_start":23,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1743,"line_start":1743,"suggested_replacement":"!repeating_sequence_left.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":56,"highlight_start":23,"text":"            } else if repeating_sequence_left.len() > 0 && repeating_sequence_right.len() > 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":112357,"byte_start":112324,"column_end":56,"column_start":23,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1743,"line_start":1743,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":23,"text":"            } else if repeating_sequence_left.len() > 0 && repeating_sequence_right.len() > 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1743:60\n     |\n1743 |             } else if repeating_sequence_left.len() > 0 && repeating_sequence_right.len() > 0 {\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!repeating_sequence_right.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":112395,"byte_start":112361,"column_end":94,"column_start":60,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1743,"line_start":1743,"suggested_replacement":"!repeating_sequence_right.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":94,"highlight_start":60,"text":"            } else if repeating_sequence_left.len() > 0 && repeating_sequence_right.len() > 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":112395,"byte_start":112361,"column_end":94,"column_start":60,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1743,"line_start":1743,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":94,"highlight_start":60,"text":"            } else if repeating_sequence_left.len() > 0 && repeating_sequence_right.len() > 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1786:16\n     |\n1786 |             if repeating_sequence_left_temp.len() == 0 && repeating_sequence_right_temp.len() == 0 {\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `repeating_sequence_left_temp.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":114376,"byte_start":114337,"column_end":55,"column_start":16,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1786,"line_start":1786,"suggested_replacement":"repeating_sequence_left_temp.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":55,"highlight_start":16,"text":"            if repeating_sequence_left_temp.len() == 0 && repeating_sequence_right_temp.len() == 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":114376,"byte_start":114337,"column_end":55,"column_start":16,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1786,"line_start":1786,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":55,"highlight_start":16,"text":"            if repeating_sequence_left_temp.len() == 0 && repeating_sequence_right_temp.len() == 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1786:59\n     |\n1786 |             if repeating_sequence_left_temp.len() == 0 && repeating_sequence_right_temp.len() == 0 {\n     |                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `repeating_sequence_right_temp.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":114420,"byte_start":114380,"column_end":99,"column_start":59,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1786,"line_start":1786,"suggested_replacement":"repeating_sequence_right_temp.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":99,"highlight_start":59,"text":"            if repeating_sequence_left_temp.len() == 0 && repeating_sequence_right_temp.len() == 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":114420,"byte_start":114380,"column_end":99,"column_start":59,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1786,"line_start":1786,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":99,"highlight_start":59,"text":"            if repeating_sequence_left_temp.len() == 0 && repeating_sequence_right_temp.len() == 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1813:24\n     |\n1813 |                     if repeating_sequence_left.len() > 0 && ref_alt_same_base_start == 1 {\n     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!repeating_sequence_left.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":116082,"byte_start":116049,"column_end":57,"column_start":24,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1813,"line_start":1813,"suggested_replacement":"!repeating_sequence_left.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":57,"highlight_start":24,"text":"                    if repeating_sequence_left.len() > 0 && ref_alt_same_base_start == 1 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":116082,"byte_start":116049,"column_end":57,"column_start":24,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1813,"line_start":1813,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":57,"highlight_start":24,"text":"                    if repeating_sequence_left.len() > 0 && ref_alt_same_base_start == 1 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1832:31\n     |\n1832 |                     } else if repeating_sequence_left.len() > 0 && ref_alt_same_base_start == 0 {\n     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!repeating_sequence_left.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":117452,"byte_start":117419,"column_end":64,"column_start":31,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1832,"line_start":1832,"suggested_replacement":"!repeating_sequence_left.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":64,"highlight_start":31,"text":"                    } else if repeating_sequence_left.len() > 0 && ref_alt_same_base_start == 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":117452,"byte_start":117419,"column_end":64,"column_start":31,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1832,"line_start":1832,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":64,"highlight_start":31,"text":"                    } else if repeating_sequence_left.len() > 0 && ref_alt_same_base_start == 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1838:24\n     |\n1838 |                     if repeating_sequence_right.len() > 0 {\n     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!repeating_sequence_right.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":117994,"byte_start":117960,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1838,"line_start":1838,"suggested_replacement":"!repeating_sequence_right.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    if repeating_sequence_right.len() > 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":117994,"byte_start":117960,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1838,"line_start":1838,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":24,"text":"                    if repeating_sequence_right.len() > 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1867:24\n     |\n1867 |                     if repeating_sequence_left.len() > 0 && ref_alt_same_base_start == 1 {\n     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!repeating_sequence_left.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":119798,"byte_start":119765,"column_end":57,"column_start":24,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1867,"line_start":1867,"suggested_replacement":"!repeating_sequence_left.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":57,"highlight_start":24,"text":"                    if repeating_sequence_left.len() > 0 && ref_alt_same_base_start == 1 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":119798,"byte_start":119765,"column_end":57,"column_start":24,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1867,"line_start":1867,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":57,"highlight_start":24,"text":"                    if repeating_sequence_left.len() > 0 && ref_alt_same_base_start == 1 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1881:31\n     |\n1881 |                     } else if repeating_sequence_left.len() > 0 && ref_alt_same_base_start == 0 {\n     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!repeating_sequence_left.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":121046,"byte_start":121013,"column_end":64,"column_start":31,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1881,"line_start":1881,"suggested_replacement":"!repeating_sequence_left.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":64,"highlight_start":31,"text":"                    } else if repeating_sequence_left.len() > 0 && ref_alt_same_base_start == 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":121046,"byte_start":121013,"column_end":64,"column_start":31,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1881,"line_start":1881,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":64,"highlight_start":31,"text":"                    } else if repeating_sequence_left.len() > 0 && ref_alt_same_base_start == 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1887:24\n     |\n1887 |                     if repeating_sequence_right.len() > 0 {\n     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!repeating_sequence_right.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":121589,"byte_start":121555,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1887,"line_start":1887,"suggested_replacement":"!repeating_sequence_right.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":58,"highlight_start":24,"text":"                    if repeating_sequence_right.len() > 0 {"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":121589,"byte_start":121555,"column_end":58,"column_start":24,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1887,"line_start":1887,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":58,"highlight_start":24,"text":"                    if repeating_sequence_right.len() > 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1893:23\n     |\n1893 |             } else if repeating_sequence_left_temp.len() > 0\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!repeating_sequence_left_temp.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":121928,"byte_start":121890,"column_end":61,"column_start":23,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1893,"line_start":1893,"suggested_replacement":"!repeating_sequence_left_temp.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":23,"text":"            } else if repeating_sequence_left_temp.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":121928,"byte_start":121890,"column_end":61,"column_start":23,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1893,"line_start":1893,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":61,"highlight_start":23,"text":"            } else if repeating_sequence_left_temp.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1894:20\n     |\n1894 |                 && repeating_sequence_right_temp.len() == 0\n     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `repeating_sequence_right_temp.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":121988,"byte_start":121948,"column_end":60,"column_start":20,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1894,"line_start":1894,"suggested_replacement":"repeating_sequence_right_temp.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":60,"highlight_start":20,"text":"                && repeating_sequence_right_temp.len() == 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":121988,"byte_start":121948,"column_end":60,"column_start":20,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1894,"line_start":1894,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":60,"highlight_start":20,"text":"                && repeating_sequence_right_temp.len() == 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1899:23\n     |\n1899 |             } else if repeating_sequence_left_temp.len() == 0\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `repeating_sequence_left_temp.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":122299,"byte_start":122260,"column_end":62,"column_start":23,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1899,"line_start":1899,"suggested_replacement":"repeating_sequence_left_temp.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":62,"highlight_start":23,"text":"            } else if repeating_sequence_left_temp.len() == 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":122299,"byte_start":122260,"column_end":62,"column_start":23,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1899,"line_start":1899,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":23,"text":"            } else if repeating_sequence_left_temp.len() == 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1900:20\n     |\n1900 |                 && repeating_sequence_right_temp.len() > 0\n     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!repeating_sequence_right_temp.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":122358,"byte_start":122319,"column_end":59,"column_start":20,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1900,"line_start":1900,"suggested_replacement":"!repeating_sequence_right_temp.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":59,"highlight_start":20,"text":"                && repeating_sequence_right_temp.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":122358,"byte_start":122319,"column_end":59,"column_start":20,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1900,"line_start":1900,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":59,"highlight_start":20,"text":"                && repeating_sequence_right_temp.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1908:23\n     |\n1908 |             } else if repeating_sequence_left_temp.len() > 0\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!repeating_sequence_left_temp.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":122737,"byte_start":122699,"column_end":61,"column_start":23,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1908,"line_start":1908,"suggested_replacement":"!repeating_sequence_left_temp.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":61,"highlight_start":23,"text":"            } else if repeating_sequence_left_temp.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":122737,"byte_start":122699,"column_end":61,"column_start":23,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1908,"line_start":1908,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":61,"highlight_start":23,"text":"            } else if repeating_sequence_left_temp.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: length comparison to zero\n    --> src/indel.rs:1909:20\n     |\n1909 |                 && repeating_sequence_right_temp.len() > 0\n     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!repeating_sequence_right_temp.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"using `!is_empty` is clearer and more explicit","rendered":null,"spans":[{"byte_end":122796,"byte_start":122757,"column_end":59,"column_start":20,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1909,"line_start":1909,"suggested_replacement":"!repeating_sequence_right_temp.is_empty()","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":59,"highlight_start":20,"text":"                && repeating_sequence_right_temp.len() > 0"}]}]}],"code":{"code":"clippy::len_zero","explanation":null},"level":"warning","message":"length comparison to zero","spans":[{"byte_end":122796,"byte_start":122757,"column_end":59,"column_start":20,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1909,"line_start":1909,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":59,"highlight_start":20,"text":"                && repeating_sequence_right_temp.len() > 0"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n    --> src/indel.rs:1942:22\n     |\n1942 |     ref_nucleotides: &Vec<char>,\n     |                      ^^^^^^^^^^ help: change this to: `&[char]`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":123968,"byte_start":123958,"column_end":32,"column_start":22,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1942,"line_start":1942,"suggested_replacement":"&[char]","suggestion_applicability":"Unspecified","text":[{"highlight_end":32,"highlight_start":22,"text":"    ref_nucleotides: &Vec<char>,"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":123968,"byte_start":123958,"column_end":32,"column_start":22,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1942,"line_start":1942,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":22,"text":"    ref_nucleotides: &Vec<char>,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n    --> src/indel.rs:1943:22\n     |\n1943 |     alt_nucleotides: &Vec<char>,\n     |                      ^^^^^^^^^^ help: change this to: `&[char]`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":124001,"byte_start":123991,"column_end":32,"column_start":22,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1943,"line_start":1943,"suggested_replacement":"&[char]","suggestion_applicability":"Unspecified","text":[{"highlight_end":32,"highlight_start":22,"text":"    alt_nucleotides: &Vec<char>,"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","spans":[{"byte_end":124001,"byte_start":123991,"column_end":32,"column_start":22,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1943,"line_start":1943,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":22,"text":"    alt_nucleotides: &Vec<char>,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is used to index `ref_nucleotides`\n    --> src/indel.rs:1953:18\n     |\n1953 |         for i in 0..ref_nucleotides.len() {\n     |                  ^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator and enumerate()\n     |\n1953 -         for i in 0..ref_nucleotides.len() {\n1953 +         for (i, <item>) in ref_nucleotides.iter().enumerate() {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator and enumerate()","rendered":null,"spans":[{"byte_end":124546,"byte_start":124545,"column_end":14,"column_start":13,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1953,"line_start":1953,"suggested_replacement":"(i, <item>)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":14,"highlight_start":13,"text":"        for i in 0..ref_nucleotides.len() {"}]},{"byte_end":124574,"byte_start":124550,"column_end":42,"column_start":18,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1953,"line_start":1953,"suggested_replacement":"ref_nucleotides.iter().enumerate()","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":42,"highlight_start":18,"text":"        for i in 0..ref_nucleotides.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is used to index `ref_nucleotides`","spans":[{"byte_end":124574,"byte_start":124550,"column_end":42,"column_start":18,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1953,"line_start":1953,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":42,"highlight_start":18,"text":"        for i in 0..ref_nucleotides.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` has identical blocks\n    --> src/indel.rs:1954:55\n     |\n1954 |               if ref_alt_same_base_start == 0 && i == 0 {\n     |  _______________________________________________________^\n1955 | |                 indel_sequence.push(ref_nucleotides[i]);\n1956 | |             } else if i > 0 {\n     | |_____________^\n     |\nnote: same as this\n    --> src/indel.rs:1956:29\n     |\n1956 |               } else if i > 0 {\n     |  _____________________________^\n1957 | |                 indel_sequence.push(ref_nucleotides[i]);\n1958 | |             }\n     | |_____________^\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"same as this","rendered":null,"spans":[{"byte_end":124790,"byte_start":124718,"column_end":14,"column_start":29,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1958,"line_start":1956,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":29,"text":"            } else if i > 0 {"},{"highlight_end":57,"highlight_start":1,"text":"                indel_sequence.push(ref_nucleotides[i]);"},{"highlight_end":14,"highlight_start":1,"text":"            }"}]}]},{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else","rendered":null,"spans":[]}],"code":{"code":"clippy::if_same_then_else","explanation":null},"level":"warning","message":"this `if` has identical blocks","spans":[{"byte_end":124703,"byte_start":124631,"column_end":14,"column_start":55,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1956,"line_start":1954,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":55,"text":"            if ref_alt_same_base_start == 0 && i == 0 {"},{"highlight_end":57,"highlight_start":1,"text":"                indel_sequence.push(ref_nucleotides[i]);"},{"highlight_end":14,"highlight_start":1,"text":"            } else if i > 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `i` is used to index `alt_nucleotides`\n    --> src/indel.rs:1961:18\n     |\n1961 |         for i in 0..alt_nucleotides.len() {\n     |                  ^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator and enumerate()\n     |\n1961 -         for i in 0..alt_nucleotides.len() {\n1961 +         for (i, <item>) in alt_nucleotides.iter().enumerate() {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator and enumerate()","rendered":null,"spans":[{"byte_end":124827,"byte_start":124826,"column_end":14,"column_start":13,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1961,"line_start":1961,"suggested_replacement":"(i, <item>)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":14,"highlight_start":13,"text":"        for i in 0..alt_nucleotides.len() {"}]},{"byte_end":124855,"byte_start":124831,"column_end":42,"column_start":18,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1961,"line_start":1961,"suggested_replacement":"alt_nucleotides.iter().enumerate()","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":42,"highlight_start":18,"text":"        for i in 0..alt_nucleotides.len() {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `i` is used to index `alt_nucleotides`","spans":[{"byte_end":124855,"byte_start":124831,"column_end":42,"column_start":18,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1961,"line_start":1961,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":42,"highlight_start":18,"text":"        for i in 0..alt_nucleotides.len() {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: this `if` has identical blocks\n    --> src/indel.rs:1962:55\n     |\n1962 |               if ref_alt_same_base_start == 0 && i == 0 {\n     |  _______________________________________________________^\n1963 | |                 indel_sequence.push(alt_nucleotides[i]);\n1964 | |             } else if i > 0 {\n     | |_____________^\n     |\nnote: same as this\n    --> src/indel.rs:1964:29\n     |\n1964 |               } else if i > 0 {\n     |  _____________________________^\n1965 | |                 indel_sequence.push(alt_nucleotides[i]);\n1966 | |             }\n     | |_____________^\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"same as this","rendered":null,"spans":[{"byte_end":125071,"byte_start":124999,"column_end":14,"column_start":29,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1966,"line_start":1964,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":29,"text":"            } else if i > 0 {"},{"highlight_end":57,"highlight_start":1,"text":"                indel_sequence.push(alt_nucleotides[i]);"},{"highlight_end":14,"highlight_start":1,"text":"            }"}]}]},{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else","rendered":null,"spans":[]}],"code":{"code":"clippy::if_same_then_else","explanation":null},"level":"warning","message":"this `if` has identical blocks","spans":[{"byte_end":124984,"byte_start":124912,"column_end":14,"column_start":55,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1964,"line_start":1962,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":56,"highlight_start":55,"text":"            if ref_alt_same_base_start == 0 && i == 0 {"},{"highlight_end":57,"highlight_start":1,"text":"                indel_sequence.push(alt_nucleotides[i]);"},{"highlight_end":14,"highlight_start":1,"text":"            } else if i > 0 {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: the loop variable `j` is only used to index `indel_sequence`\n    --> src/indel.rs:1975:18\n     |\n1975 |         for j in 0..monomer_length {\n     |                  ^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n     |\n1975 -         for j in 0..monomer_length {\n1975 +         for <item> in indel_sequence.iter().take(monomer_length) {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using an iterator","rendered":null,"spans":[{"byte_end":125550,"byte_start":125549,"column_end":14,"column_start":13,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1975,"line_start":1975,"suggested_replacement":"<item>","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":14,"highlight_start":13,"text":"        for j in 0..monomer_length {"}]},{"byte_end":125571,"byte_start":125554,"column_end":35,"column_start":18,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1975,"line_start":1975,"suggested_replacement":"indel_sequence.iter().take(monomer_length)","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":35,"highlight_start":18,"text":"        for j in 0..monomer_length {"}]}]}],"code":{"code":"clippy::needless_range_loop","explanation":null},"level":"warning","message":"the loop variable `j` is only used to index `indel_sequence`","spans":[{"byte_end":125571,"byte_start":125554,"column_end":35,"column_start":18,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1975,"line_start":1975,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":18,"text":"        for j in 0..monomer_length {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: equality checks against true are unnecessary\n    --> src/indel.rs:1997:12\n     |\n1997 |         if is_indel_repeat == true {\n     |            ^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `is_indel_repeat`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"try simplifying it as shown","rendered":null,"spans":[{"byte_end":126608,"byte_start":126585,"column_end":35,"column_start":12,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1997,"line_start":1997,"suggested_replacement":"is_indel_repeat","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":35,"highlight_start":12,"text":"        if is_indel_repeat == true {"}]}]}],"code":{"code":"clippy::bool_comparison","explanation":null},"level":"warning","message":"equality checks against true are unnecessary","spans":[{"byte_end":126608,"byte_start":126585,"column_end":35,"column_start":12,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":1997,"line_start":1997,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":12,"text":"        if is_indel_repeat == true {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: writing `&String` instead of `&str` involves a new object where a slice will do\n    --> src/indel.rs:2010:24\n     |\n2010 |     flanking_sequence: &String,\n     |                        ^^^^^^^ help: change this to: `&str`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"change this to","rendered":null,"spans":[{"byte_end":127005,"byte_start":126998,"column_end":31,"column_start":24,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":2010,"line_start":2010,"suggested_replacement":"&str","suggestion_applicability":"Unspecified","text":[{"highlight_end":31,"highlight_start":24,"text":"    flanking_sequence: &String,"}]}]}],"code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","message":"writing `&String` instead of `&str` involves a new object where a slice will do","spans":[{"byte_end":127005,"byte_start":126998,"column_end":31,"column_start":24,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":2010,"line_start":2010,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":24,"text":"    flanking_sequence: &String,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n    --> src/indel.rs:2025:12\n     |\n2025 |         if &side == &\"R\" {\n     |            ^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n     |\n2025 -         if &side == &\"R\" {\n2025 +         if side == \"R\" {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":128208,"byte_start":128203,"column_end":17,"column_start":12,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":2025,"line_start":2025,"suggested_replacement":"side","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":17,"highlight_start":12,"text":"        if &side == &\"R\" {"}]},{"byte_end":128216,"byte_start":128212,"column_end":25,"column_start":21,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":2025,"line_start":2025,"suggested_replacement":"\"R\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":25,"highlight_start":21,"text":"        if &side == &\"R\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":128216,"byte_start":128203,"column_end":25,"column_start":12,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":2025,"line_start":2025,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":25,"highlight_start":12,"text":"        if &side == &\"R\" {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/awillems/dev/sjpp/proteinpaint/rust#PP_rust_utilities@0.1.0","manifest_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"indel","src_path":"/Users/awillems/dev/sjpp/proteinpaint/rust/src/indel.rs","edition":"2018","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: needlessly taken reference of both operands\n    --> src/indel.rs:2031:19\n     |\n2031 |         } else if &side == &\"L\" {\n     |                   ^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref\nhelp: use the values directly\n     |\n2031 -         } else if &side == &\"L\" {\n2031 +         } else if side == \"L\" {\n     |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#op_ref","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"use the values directly","rendered":null,"spans":[{"byte_end":128486,"byte_start":128481,"column_end":24,"column_start":19,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":2031,"line_start":2031,"suggested_replacement":"side","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":24,"highlight_start":19,"text":"        } else if &side == &\"L\" {"}]},{"byte_end":128494,"byte_start":128490,"column_end":32,"column_start":28,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":2031,"line_start":2031,"suggested_replacement":"\"L\"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":32,"highlight_start":28,"text":"        } else if &side == &\"L\" {"}]}]}],"code":{"code":"clippy::op_ref","explanation":null},"level":"warning","message":"needlessly taken reference of both operands","spans":[{"byte_end":128494,"byte_start":128481,"column_end":32,"column_start":19,"expansion":null,"file_name":"src/indel.rs","is_primary":true,"label":null,"line_end":2031,"line_start":2031,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":19,"text":"        } else if &side == &\"L\" {"}]}]}}
{"reason":"build-finished","success":false}
