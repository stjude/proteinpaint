name: "Create Container Release"

on:
  workflow_dispatch:
    inputs:
      build_secret:
        type: string
        description: Build secret
      release_type:
        type: choice
        description: Release type
        options:
          - prerelease
          - prepatch
          - preminor
          - premajor
          - major
          - minor
          - patch
      pp_version:
        type: choice
        description: Latest or specific PP version
        options:
          - latest
          - specific
      specific_pp_version:
        type: string
        description: Specific PP version to use for container

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    timeout-minutes: 20
    steps:
      - name: Check secret
        run: |
          if [ "${{ github.event.inputs.build_secret }}" != "${{ secrets.BUILD_SECRET }}" ]; then
            echo "Wrong build secret."
            exit 1
          fi

      - name: Check user permission
        id: check
        uses: scherermichael-oss/action-has-permission@master
        with:
          required-permission: write
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Exit if user doesn't have write permission
        run: |
          if [ "${{ steps.check.outputs.has-permission }}" = "false" ]
            then
            echo "Only users with write permission are allowed to execute this workflow manually."
            exit 1
          fi

      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}

      - name: Set up node
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'
          scope: '@sjcrh'

      - run: |
          npm ci
          git fetch --all --tags
          if [ $PP_VERSION == "latest" ]; 
          then
          PP_VERSION=$(git describe --tags `git rev-list --tags --max-count=1`)
          else
          PP_VERSION=$SPECIFIC_PP_VERSION
          fi
          git checkout $PP_VERSION
          FRONT_VERSION=$(node -p "require('./front/package.json').version")
          SERVER_VERSION=$(node -p "require('./server/package.json').version")
          git checkout master
          cd container
          npm pkg set containerDeps.front=$FRONT_VERSION
          npm pkg set containerDeps.server=$SERVER_VERSION
          npm version ${{ github.event.inputs.release_type }}
          cd ..
          COMMITMSG="Update container version to $(node -p "require('./package.json').version")"
          echo "$COMMITMSG"
          echo "committing version change ..."
          git config --global user.email "PPTeam@STJUDE.ORG"
          git config --global user.name "PPTeam CI"
          git add --all
          git commit -m "$COMMITMSG"          
          git push origin master
          cd container
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}