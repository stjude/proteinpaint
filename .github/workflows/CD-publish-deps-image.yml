name: Publish Dependencies Image

on:
  workflow_dispatch:
    inputs:
      build_secret:
        type: string
        description: Build secret

  push:
    branches:
      - deps-image
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.**ignore'
      - 'docs/**'
      # TODO: what if package.dependencies, files were updated?
      # this is meant to avoid triggering the on.push event for the version bump
      - '**package*.json'

jobs:
  check-user-permissions:
    runs-on: ubuntu-22.04
    steps:
      - name: Check user permission
        uses: stjude/proteinpaint/.github/actions/check-user-permissions@master
        with:
          BUILD_SECRET: ${{ secrets.BUILD_SECRET }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INPUT_BUILD_SECRET: ${{ github.event.inputs.build_secret }}

  build:
    needs: check-user-permissions
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    outputs:
      updated_rust: ${{ steps.check-rust-changes.outputs.updated_rust }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 10

      - uses: actions/setup-node@v4
        with:
          cache: 'npm'
          node-version: '22'

      - name: Install PP packages
        run: |
          npm ci

      - name: TSC
        run: |
          cd shared/types
          npm run build
          npx tsc
          cd ../utils
          npx tsc
          cd ../../server
          npx tsc
          cd ../client
          npm run tsc  

      - name: Check for Rust workspace changes
        id: check-rust-changes
        run: |
          CHANGEDWS=$(./build/bump.js prerelease)
          
          if [[ "$CHANGEDWS" == *"rust"* ]]; then
            echo "Rust workspace changes detected"
            echo "updated_rust=true" >> $GITHUB_OUTPUT
          else
            echo "No Rust workspace changes detected"
            echo "updated_rust=false" >> $GITHUB_OUTPUT
          fi

  rust-build:
    if: needs.build.outputs.updated_rust == 'true'
    needs: build
    uses: ./.github/workflows/CD-rust-build.yml

  docker-with-rust:
    needs: rust-build
    if: needs.build.outputs.updated_rust == 'true'
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          fetch-depth: 10

      - name: Download Rust binaries
        uses: actions/download-artifact@v4
        with:
          name: rust-binaries
          path: rust-binaries

      - name: Publish docker image
        uses: stjude/proteinpaint/.github/actions/publish-deps-image@master
        with:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}

  docker-without-rust:
    needs: build
    if: needs.build.outputs.updated_rust == 'false'
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          fetch-depth: 10

      - name: Publish docker image
        uses: stjude/proteinpaint/.github/actions/publish-deps-image@master
        with:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
