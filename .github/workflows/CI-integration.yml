name: Integration tests

on:
  schedule:
    - cron: '0 6 * * *'
  workflow_dispatch:
    inputs:
      build_secret:
        type: string
        description: Build secret
  workflow_call: { }

jobs:
  check-user-permissions:
    runs-on: ubuntu-22.04
    steps:
      - id: set-build-secret
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "::set-output name=BUILD_SECRET::${{ github.event.inputs.build_secret }}"
          else
            echo "::set-output name=BUILD_SECRET::${{ secrets.BUILD_SECRET }}"
          fi
      - name: Check user permission
        uses: stjude/proteinpaint/.github/actions/check-user-permissions@master
        with:
          BUILD_SECRET: ${{ secrets.BUILD_SECRET }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INPUT_BUILD_SECRET: ${{ steps.set-build-secret.outputs.BUILD_SECRET }}

  build:
    needs: check-user-permissions
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    outputs:
      updated_rust: ${{ steps.version_bump.outputs.updated_rust }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 10

      - name: Install dependencies for canvas
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            libcairo2-dev \
            libpango1.0-dev \
            libjpeg-dev \
            libgif-dev \
            librsvg2-dev      

      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '22'

      - name: Install PP packages
        run: |
          npm ci

      - name: Copy serverconfig.json to root
        run: |
          cp container/ci/serverconfig.json container/

      - name: Create cache folder
        run: mkdir cache

      - name: Install xvfb
        run: sudo apt-get install xvfb

      - name: TSC
        run: |
          cd shared/types
          npm run build
          cd ../../server
          npx tsc
          cd ..

      - name: Pack Tarballs
        id: version_bump
        run: |
          cd ./container
          ./pack.sh
          echo "$CHANGEDWS"
          
          if [[ "$CHANGEDWS" == *"rust"* ]]; then
            echo "::set-output name=updated_rust::true"
          else
            echo "::set-output name=updated_rust::true"
          fi

  rust-build:
    if: needs.build.outputs.updated_rust == 'true'
    needs: build
    uses: ./.github/workflows/CD-rust-build.yml

