name: Unit tests

on:
  push:
    branches:
      - master
      - fake-master
  pull_request:
    types: [ opened, synchronize, reopened, ready_for_review ]

jobs:
  build:
    if: github.event_name == 'push' || github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 10

      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '16'

      - run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run ESLint
        run: npx eslint . --ext .ts

      - name: Copy serverconfig.json to root
        run: |
          cd server/test/
          node -e 'const fs = require("fs"); const serverconfig = JSON.parse(fs.readFileSync("serverconfig.json")); tpmasterdir = "/home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/server/test/tp"; fs.writeFileSync("data.json", JSON.stringify(serverconfig));'
          TPMASTERDIR=$(node -p "require('./serverconfig.json').tpmasterdir")
          mv serverconfig.json ../../

      - name: Create server cache folder
        run: mkdir server/cache

      - name: Detect workspaces to test
        run: |
          echo "WS_TO_TEST=$(./build/requiresTest.sh)" >> $GITHUB_ENV
          
          email=$(git log -n 1 --format='%ae' HEAD)
          echo "email=[$email]"
          if [[ "${{ github.event_name }}" == "push" && "$email" != "PPTeam@stjude.org" ]]; then
            # pushes by PPTeam are assumed to automated, and should not trigger
            # another unit test after completing workflows such as automated merging of change log
            echo "pushedBy=user" >> $GITHUB_ENV
          fi

      - name: ðŸ”Ž Run client tests
        if: contains(env.WS_TO_TEST, 'client') || env.pushedBy == 'user'
        run: |
          sudo apt-get install xvfb
          xvfb-run --auto-servernum npm run test:unit --workspace="client"

      - name: ðŸ”Ž Server unit tests
        if: contains(env.WS_TO_TEST, 'server') || env.pushedBy == 'user'
        run: npx tsc --esModuleInterop server/dataset/*.ts && npm run test:unit --workspace="server"

      - name: âš¡ Cache
        if: contains(env.WS_TO_TEST, 'rust') || env.pushedBy == 'user'
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./rust/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/toolchain@v1
        if: contains(env.WS_TO_TEST, 'rust') || env.pushedBy == 'user'
        with:
          toolchain: stable

      - name: ðŸ”Ž Rust unit tests
        if: contains(env.WS_TO_TEST, 'rust') || env.pushedBy == 'user'
        run: |
          npm run build --workspace="rust"
          npm run test:unit --workspace="rust"
