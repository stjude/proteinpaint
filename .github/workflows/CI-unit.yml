name: Unit tests

on:
  push:
    branches:
      - master
      - fake-master
  pull_request:
    types: [ opened, synchronize, reopened, ready_for_review ]

jobs:
  build:
    if: github.event_name == 'push' || github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 10

      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '16'
          
      - run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run ESLint
        run: npx eslint . --ext .ts

      - name: Copy serverconfig.json to root
        run: |
          cd server/test/
          node -e 'const fs = require("fs"); const serverconfig = JSON.parse(fs.readFileSync("serverconfig.json")); tpmasterdir = "/home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/server/test/tp"; fs.writeFileSync("data.json", JSON.stringify(serverconfig));'
          TPMASTERDIR=$(node -p "require('./serverconfig.json').tpmasterdir")
          mv serverconfig.json ../../

      - name: Create cache folder
        run: mkdir server/cache

      - name: Detect workspaces to test
        run: echo "WS_TO_TEST=$(./build/requiresTest.sh)" >> $GITHUB_ENV

      - name: Run client tests
        if: contains(env.WS_TO_TEST, 'client') || (github.event_name == 'push' && github.event.pusher.name != 'PPTeam CI')
        run: |
          sudo apt-get install xvfb
          xvfb-run --auto-servernum npm run test:unit --workspace="client"

      - name: Server unit tests
        if: contains(env.WS_TO_TEST, 'server') || (github.event_name == 'push' && github.event.pusher.name != 'PPTeam CI') 
        run: npx tsc --esModuleInterop server/dataset/*.ts && npm run test:unit --workspace="server"

      - name: Rust unit tests
        if: contains(env.WS_TO_TEST, 'rust') || (github.event_name == 'push' && github.event.pusher.name != 'PPTeam CI')
        run: |
          npm run build --workspace="rust"
          npm run test:unit --workspace="rust"
