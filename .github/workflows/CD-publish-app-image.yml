name: "Publish Application Image"

on:
  push:
    branches:
      - image
      - fake-image
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.**ignore'
      - 'docs/**'
      - '**package*.json'

  workflow_dispatch:
    inputs:
      build_secret:
        type: string
        description: Build secret

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    timeout-minutes: 20
    steps:
      - name: Check secret
        if: github.event_name == 'workflow_dispatch'
        run: |
          if [ "${{ github.event.inputs.build_secret }}" != "${{ secrets.BUILD_SECRET }}" ]; then
            echo "Wrong build secret."
            exit 1
          fi 

      - name: Check user permission
        if: github.event_name == "workflow_dispatch"
        id: check
        uses: scherermichael-oss/action-has-permission@master
        with:
          required-permission: write
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Exit if user doesn't have write permission
        if: github.event_name == "workflow_dispatch"
        run: |
          if [ "${{ steps.check.outputs.has-permission }}" = "false" ]; then
            echo "Only users with write permission are allowed to execute this workflow."
            exit 1
          fi

      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}

      - name: Fetch All Tags
        run: git fetch --all --tags

      # Setup .npmrc file to publish to GitHub Packages
      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'
          scope: '@sjcrh'
      - run: npm ci

      - name: Run version bump
        run: |
          ./build/ci-version-update.sh $VERTYPE -w
          # !!! --- merge back to master --- !!!

      - name: Login to GitHub Container Registry
        run: |
          echo $CR_PAT | docker login ghcr.io -u stjude --password-stdin
        env:
          CR_PAT: ${{ secrets.PAT }}

      - name: Build and Publish Docker Images
        run: 
          sleep 90;
          cd container;
          ./build2.sh -r "ghcr.io/stjude/" server;
          TAG="$(node -p "require('./server/package.json').version")";
          HASH="$(git rev-parse --short HEAD)";
          docker push ghcr.io/stjude/ppserver:$TAG-$HASH;
          docker push ghcr.io/stjude/ppserver:latest;

          ./build2.sh -r "ghcr.io/stjude/" full;
          TAG="$(node -p "require('./full/package.json').version")";
          docker push ghcr.io/stjude/ppfull:$TAG-$HASH;
          docker push ghcr.io/stjude/ppfull:latest;
