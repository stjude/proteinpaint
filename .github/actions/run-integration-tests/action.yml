name: 'Run integration tests'
description: 'Runs integration tests inside Docker and posts results to Slack'

inputs:
  PAT:
    description: 'GitHub Personal Access Token for accessing GHCR'
    required: true

  SLACK_WEBHOOK_URL:
    description: 'Slack webhook for posting test results'
    required: true

runs:
  using: 'composite'
  steps:
    - uses: actions/setup-node@v4
      with:
        cache: 'npm'
        node-version: '22'

    - name: Install PP packages
      shell: bash
      run: |
        npm ci

    - name: Prepare for Docker build
      shell: bash
      run: |
        cd ./container
        ./pack.sh

    - name: Copy serverconfig.json to root
      shell: bash
      run: |
        cp container/ci/serverconfig.json container/

    - name: Create cache folder
      shell: bash
      run: mkdir cache

    - name: Install xvfb
      shell: bash
      run: sudo apt-get install -y xvfb

    - name: Login to Github
      uses: docker/login-action@v3.4.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.PAT }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker Image
      uses: docker/build-push-action@v5
      with:
        context: ./container/
        file: ./container/server/Dockerfile
        tags: ppserver:latest
        platforms: linux/amd64
        outputs: type=docker
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Run local server and integration tests
      shell: bash
      run: |
        cd ./container
        ./run.sh ppserver:latest
        sleep 10
        cd ..
        xvfb-run --auto-servernum npm run test:integration

    - name: Get current time
      id: current-time
      if: always()
      shell: bash
      run: |
        echo "formattedTime=$(TZ=America/Chicago date '+%b %d, %Y %H:%M:%S')" >> "$GITHUB_OUTPUT"

    - name: Set short git commit SHA
      id: vars
      if: always()
      shell: bash
      run: echo "SHORT_SHA=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_ENV

    - name: Post build results on slack
      id: slack
      if: always()
      uses: slackapi/slack-github-action@v1.23.0
      with:
        payload: |
          {
            "status": "${{ job.status }} https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            "commit": "${{ env.SHORT_SHA }}",
            "date-time": "${{ steps.current-time.outputs.formattedTime }}"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ inputs.SLACK_WEBHOOK_URL }}
